//////////////////////
////   GLOBALS
//////////////////////
Texture2D shaderTexture;
SamplerState SampleType;

cbuffer LightBuffer
{
	float4 ambientColor;
	float4 diffuseColor;
	float3 lightDirection;
	float padding;
};

//////////////////////
////   TYPES
//////////////////////
struct PixelInputType
{
	float4 position : SV_POSITION;
	float3 normal : NORMAL;
};

//////////////////////
////   Pixel Shader
/////////////////////
float4 HeightMapTerrainPixelShader(PixelInputType input) : SV_TARGET
{
	float3 lightDir;
	float lightIntensity;
	float4 color;

	// Set the default output color to the ambient light for all pixels.
	color = ambientColor;

	// Invert the light direction for calculations.
	lightDir = - lightDirection;

	// Calculate the amount of the light on this pixel.
	lightIntensity = saturate(dot(input.normal, lightDir));

	if(lightIntensity > 0.0f)
	{
		// Determine the final diffuse color based on the diffuse color and the amount of the light intensity.
		color += (diffuseColor * lightIntensity);
	}

	// Add the specular component last to output color.
	color = saturate(color);

	return color;
}
