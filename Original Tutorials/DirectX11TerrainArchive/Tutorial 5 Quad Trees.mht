From: "Saved by Internet Explorer 11"
Subject: Tutorial 5: Quad Trees
Date: Thu, 7 Aug 2014 08:31:35 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_008E_01CFB219.FFF2C320"
X-MimeOLE: Produced By Microsoft MimeOLE V6.3.9600.16384

This is a multi-part message in MIME format.

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/web/20140722205338/http://rastertek.com/tertut05.html

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><META content=3D"IE=3D5.0000" =
http-equiv=3D"X-UA-Compatible">

<SCRIPT src=3D"http://web.archive.org/static/js/analytics.js" =
type=3D"text/javascript"></SCRIPT>
=20
<META http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3Dutf-8"><LINK =
href=3D"http://web.archive.org/static/css/banner-styles.css"=20
rel=3D"stylesheet" type=3D"text/css"> <TITLE>Tutorial 5: Quad =
Trees</TITLE>
<META name=3D"GENERATOR" content=3D"MSHTML 11.00.9600.17207"></HEAD>=20
<BODY text=3D"#ffffff" bgcolor=3D"#000000"><!-- BEGIN WAYBACK TOOLBAR =
INSERT -->=20
<SCRIPT> if (window.archive_analytics) { =
window.archive_analytics.values['server_name']=3D"wwwb-app17.us.archive.o=
rg";}; </SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/js/disclaim-element.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/js/graph-calc.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/jflot/jquery.min.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT type=3D"text/javascript">=0A=
//<![CDATA[=0A=
var firstDate =3D 820454400000;=0A=
var lastDate =3D 1420070399999;=0A=
var wbPrefix =3D "/web/";=0A=
var wbCurrentUrl =3D "http:\/\/rastertek.com\/tertut05.html";=0A=
=0A=
var curYear =3D -1;=0A=
var curMonth =3D -1;=0A=
var yearCount =3D 18;=0A=
var firstYear =3D 1996;=0A=
var imgWidth =3D 475;=0A=
var yearImgWidth =3D 25;=0A=
var monthImgWidth =3D 2;=0A=
var trackerVal =3D "none";=0A=
var displayDay =3D "22";=0A=
var displayMonth =3D "Jul";=0A=
var displayYear =3D "2014";=0A=
var prettyMonths =3D =
["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]=
;=0A=
=0A=
function showTrackers(val) {=0A=
	if(val =3D=3D trackerVal) {=0A=
		return;=0A=
	}=0A=
	if(val =3D=3D "inline") {=0A=
		document.getElementById("displayYearEl").style.color =3D "#ec008c";=0A=
		document.getElementById("displayMonthEl").style.color =3D "#ec008c";=0A=
		document.getElementById("displayDayEl").style.color =3D "#ec008c";		=0A=
	} else {=0A=
		document.getElementById("displayYearEl").innerHTML =3D displayYear;=0A=
		document.getElementById("displayYearEl").style.color =3D "#ff0";=0A=
		document.getElementById("displayMonthEl").innerHTML =3D displayMonth;=0A=
		document.getElementById("displayMonthEl").style.color =3D "#ff0";=0A=
		document.getElementById("displayDayEl").innerHTML =3D displayDay;=0A=
		document.getElementById("displayDayEl").style.color =3D "#ff0";=0A=
	}=0A=
   document.getElementById("wbMouseTrackYearImg").style.display =3D val;=0A=
   document.getElementById("wbMouseTrackMonthImg").style.display =3D val;=0A=
   trackerVal =3D val;=0A=
}=0A=
function getElementX2(obj) {=0A=
	var thing =3D jQuery(obj);=0A=
	if((thing =3D=3D undefined) =0A=
			|| (typeof thing =3D=3D "undefined") =0A=
			|| (typeof thing.offset =3D=3D "undefined")) {=0A=
		return getElementX(obj);=0A=
	}=0A=
	return Math.round(thing.offset().left);=0A=
}=0A=
function trackMouseMove(event,element) {=0A=
=0A=
   var eventX =3D getEventX(event);=0A=
   var elementX =3D getElementX2(element);=0A=
   var xOff =3D eventX - elementX;=0A=
	if(xOff < 0) {=0A=
		xOff =3D 0;=0A=
	} else if(xOff > imgWidth) {=0A=
		xOff =3D imgWidth;=0A=
	}=0A=
   var monthOff =3D xOff % yearImgWidth;=0A=
=0A=
   var year =3D Math.floor(xOff / yearImgWidth);=0A=
	var yearStart =3D year * yearImgWidth;=0A=
   var monthOfYear =3D Math.floor(monthOff / monthImgWidth);=0A=
   if(monthOfYear > 11) {=0A=
       monthOfYear =3D 11;=0A=
   }=0A=
   // 1 extra border pixel at the left edge of the year:=0A=
   var month =3D (year * 12) + monthOfYear;=0A=
   var day =3D 1;=0A=
	if(monthOff % 2 =3D=3D 1) {=0A=
		day =3D 15;=0A=
	}=0A=
	var dateString =3D =0A=
		zeroPad(year + firstYear) + =0A=
		zeroPad(monthOfYear+1,2) +=0A=
		zeroPad(day,2) + "000000";=0A=
=0A=
	var monthString =3D prettyMonths[monthOfYear];=0A=
	document.getElementById("displayYearEl").innerHTML =3D year + 1996;=0A=
	document.getElementById("displayMonthEl").innerHTML =3D monthString;=0A=
	// looks too jarring when it changes..=0A=
	//document.getElementById("displayDayEl").innerHTML =3D zeroPad(day,2);=0A=
=0A=
	var url =3D wbPrefix + dateString + '/' +  wbCurrentUrl;=0A=
	document.getElementById('wm-graph-anchor').href =3D url;=0A=
=0A=
   //document.getElementById("wmtbURL").value=3D"evX("+eventX+") =
elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") =
monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") =
ms("+monthString+")";=0A=
   if(curYear !=3D year) {=0A=
       var yrOff =3D year * yearImgWidth;=0A=
       document.getElementById("wbMouseTrackYearImg").style.left =3D =
yrOff + "px";=0A=
       curYear =3D year;=0A=
   }=0A=
   if(curMonth !=3D month) {=0A=
       var mtOff =3D year + (month * monthImgWidth) + 1;=0A=
       document.getElementById("wbMouseTrackMonthImg").style.left =3D =
mtOff + "px";=0A=
       curMonth =3D month;=0A=
   }=0A=
}=0A=
//]]>=0A=
</SCRIPT>
=20
<STYLE =
type=3D"text/css">body{margin-top:0!important;padding-top:0!important;min=
-width:800px!important;}#wm-ipp =
a:hover{text-decoration:underline!important;}</STYLE>
=20
<DIV class=3D"__wb_banner_div" id=3D"wm-ipp" lang=3D"en" =
style=3D"padding: 0px 5px; display: none; position: relative; =
min-height: 70px; min-width: 800px;">
<DIV class=3D"__wb_banner_div" id=3D"wm-ipp-inside" =
style=3D'border-width: medium 5px 5px; border-style: none solid solid; =
border-color: currentColor rgb(0, 0, 0) rgb(0, 0, 0); margin: 0px =
!important; padding: 0px !important; border-image: none; width: 97%; =
text-align: center; font-family: "Lucida Grande","Arial",sans-serif =
!important; font-size: 11px !important; position: fixed; min-width: =
780px; box-shadow: 1px 1px 3px #333; background-image: =
url("/static/images/toolbar/wm_tb_bk_trns.png"); -moz-box-shadow: 1px =
1px 3px #333; -webkit-box-shadow: 1px 1px 3px #333;'>
<TABLE style=3D"margin: 0px; padding: 0px; width: 100%; border-collapse: =
collapse;">
  <TBODY>
  <TR>
    <TD style=3D"padding: 10px; vertical-align: top; min-width: =
110px;"><A=20
      title=3D"Wayback Machine home page" style=3D"border: currentColor; =
border-image: none; background-color: transparent;"=20
      href=3D"http://web.archive.org/web/"><IMG width=3D"110" =
height=3D"39" alt=3D"Wayback Machine"=20
      =
src=3D"http://web.archive.org/static/images/toolbar/wayback-toolbar-logo.=
png"=20
      border=3D"0"></A>    </TD>
    <TD style=3D"padding: 0px !important; width: 100%; text-align: =
center; vertical-align: top;">
      <TABLE style=3D"margin: 0px auto; padding: 0px; width: 570px; =
border-collapse: collapse;">
        <TBODY>
        <TR>
          <TD style=3D"padding: 3px 0px;" colspan=3D"2">
            <FORM name=3D"wmtb" id=3D"wmtb" style=3D"margin: 0px =
!important; padding: 0px !important;"=20
            action=3D"/web/form-submit.jsp" method=3D"get"=20
target=3D"_top"><INPUT name=3D"url" id=3D"wmtbURL" style=3D'width: =
400px; font-family: "Lucida Grande","Arial",sans-serif; font-size: =
11px;' onfocus=3D"javascript:this.focus();this.select();" type=3D"text" =
value=3D"http://rastertek.com/tertut05.html"><INPUT name=3D"type" =
type=3D"hidden" value=3D"replay"><INPUT name=3D"date" type=3D"hidden" =
value=3D"20140722205338"><INPUT style=3D'width: inherit !important; =
font-family: "Lucida Grande","Arial",sans-serif; font-size: 11px; =
margin-left: 5px;' type=3D"submit" value=3D"Go"><SPAN=20
            id=3D"wm_tb_options" style=3D"display: =
block;"></SPAN></FORM></TD>
          <TD style=3D"padding: 5px 0px 0px !important; vertical-align: =
bottom;"=20
          rowspan=3D"2">
            <TABLE style=3D'width: 110px; color: rgb(153, 153, 170); =
font-family: "Helvetica","Lucida Grande","Arial",sans-serif; =
border-collapse: collapse;'>
              <TBODY><!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->    =
       =20
              <TR style=3D"width: 110px; height: 16px; font-size: 10px =
!important;">
                <TD nowrap=3D"nowrap" style=3D"text-align: right; =
text-transform: uppercase; overflow: visible; padding-right: 9px; =
font-size: 11px !important; font-weight: bold; white-space: nowrap;"><A=20
                  title=3D"27 May 2013" style=3D"border: currentColor; =
border-image: none; color: rgb(51, 51, 255); font-weight: bold; =
text-decoration: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20130527165246/http://rastertek.com/te=
rtut05.html"><STRONG>MAY</STRONG></A>
                  		                                </TD>
                <TD title=3D"You are here: 20:53:38 Jul 22, 2014" =
id=3D"displayMonthEl"=20
                style=3D"background: rgb(0, 0, 0); width: 34px; height: =
15px; text-align: center; color: rgb(255, 255, 0); text-transform: =
uppercase; padding-top: 1px; font-size: 11px !important; font-weight: =
bold;">JUL</TD>
                <TD nowrap=3D"nowrap" style=3D"text-transform: =
uppercase; overflow: visible; padding-left: 9px; font-size: 11px =
!important; font-weight: bold; white-space: nowrap;">=20
                                                       Aug               =
       =20
                                  </TD></TR><!-- NEXT/PREV CAPTURE NAV =
AND DAY OF MONTH INDICATOR -->=20
                        =20
              <TR>
                <TD nowrap=3D"nowrap" style=3D"text-align: right =
!important; overflow: visible; padding-right: 9px; vertical-align: =
middle !important; white-space: nowrap;"><A=20
                  title=3D"16:52:46 May 27, 2013" style=3D"border: =
currentColor; border-image: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20130527165246/http://rastertek.com/te=
rtut05.html"><IMG=20
                  width=3D"14" height=3D"16" alt=3D"Previous capture" =
src=3D"http://web.archive.org/static/images/toolbar/wm_tb_prv_on.png"=20
                  border=3D"0"></A>		                                =
</TD>
                <TD title=3D"You are here: 20:53:38 Jul 22, 2014" =
id=3D"displayDayEl"=20
                style=3D"background: rgb(0, 0, 0); padding: 2px 0px 0px; =
width: 34px; height: 24px; text-align: center; color: rgb(255, 255, 0); =
font-size: 24px; font-weight: bold;">22</TD>
                <TD nowrap=3D"nowrap" style=3D"text-align: left =
!important; overflow: visible; padding-left: 9px; vertical-align: middle =
!important; white-space: nowrap;"><IMG=20
                  width=3D"14" height=3D"16" alt=3D"Next capture" =
src=3D"http://web.archive.org/static/images/toolbar/wm_tb_nxt_off.png"=20
                  border=3D"0">                       			     =
</TD></TR><!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->=20
                        =20
              <TR=20
style=3D"width: 110px; height: 13px; font-size: 9px !important;">
                <TD nowrap=3D"nowrap" style=3D"text-align: right; =
overflow: visible; padding-right: 9px; font-size: 11px !important; =
font-weight: bold; white-space: nowrap;"><A=20
                  title=3D"27 May 2013" style=3D"border: currentColor; =
border-image: none; color: rgb(51, 51, 255); font-weight: bold; =
text-decoration: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20130527165246/http://rastertek.com/te=
rtut05.html"><STRONG>2013</STRONG></A>
                  		                                </TD>
                <TD title=3D"You are here: 20:53:38 Jul 22, 2014" =
id=3D"displayYearEl"=20
                style=3D"background: rgb(0, 0, 0); width: 34px; height: =
13px; text-align: center; color: rgb(255, 255, 0); padding-top: 1px; =
font-size: 11px !important; font-weight: bold;">2014</TD>
                <TD nowrap=3D"nowrap" style=3D"overflow: visible; =
padding-left: 9px; font-size: 11px !important; font-weight: bold; =
white-space: nowrap;">=20
                                                       2015              =
       =20
                   				 </TD></TR></TBODY></TABLE></TD></TR>
        <TR>
          <TD style=3D"padding: 0px !important; vertical-align: =
middle;"><A=20
            title=3D"See a list of every capture for this URL" =
style=3D"border: currentColor; border-image: none; color: rgb(51, 51, =
255); font-size: 11px; font-weight: bold; background-color: =
transparent;"=20
            =
href=3D"http://web.archive.org/web/20140722205338*/http://rastertek.com/t=
ertut05.html"><STRONG>7=20
            captures</STRONG></A>           =20
            <DIV title=3D"Timespan for captures of this URL" =
class=3D"__wb_banner_div"=20
            style=3D"margin: 0px !important; padding: 2px 0px 0px =
!important; color: rgb(102, 102, 102); font-size: 9px; white-space: =
nowrap;">4=20
            May 11 - 22 Jul 14</DIV></TD>
          <TD style=3D"padding: 0px !important;"><A =
id=3D"wm-graph-anchor" style=3D"width: 475px; height: 27px; white-space: =
nowrap; position: relative;"=20
            =
href=3D"http://web.archive.org/web/20140722205338/http://rastertek.com/">=

            <DIV title=3D"Explore captures for this URL" =
class=3D"__wb_banner_div"=20
            id=3D"wm-ipp-sparkline" style=3D"width: 475px; height: 27px; =
border-right-color: rgb(204, 204, 204); border-right-width: 1px; =
border-right-style: solid; white-space: nowrap; position: relative; =
cursor: pointer; background-color: rgb(255, 255, 255);"><IMG=20
            width=3D"475" height=3D"27" id=3D"sparklineImgId" =
style=3D"left: 0px; top: 0px; position: absolute; z-index: 9012;"=20
            onmouseover=3D"showTrackers('inline');" =
onmouseout=3D"showTrackers('none');"=20
            onmousemove=3D"trackMouseMove(event,this)" =
alt=3D"sparklines" =
src=3D"http://web.archive.org/web/jsp/graph.jsp?graphdata=3D475_27_1996:-=
1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:00000000=
0000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:=
-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:0000000=
00000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010=
:-1:000000000000_2011:-1:000010000101_2012:-1:000000001100_2013:-1:000010=
000000_2014:6:000000100000"=20
            border=3D"0">			 <IMG width=3D"25" height=3D"27" =
id=3D"wbMouseTrackYearImg"=20
            style=3D"display: none; position: absolute; z-index: 9010;" =
src=3D"http://web.archive.org/static/images/toolbar/transp-yellow-pixel.p=
ng"=20
            border=3D"0">			 <IMG width=3D"2" height=3D"27" =
id=3D"wbMouseTrackMonthImg"=20
            style=3D"display: none; position: absolute; z-index: 9011;" =
src=3D"http://web.archive.org/static/images/toolbar/transp-red-pixel.png"=
=20
            border=3D"0">        </DIV></A>        =
</TD></TR></TBODY></TABLE></TD>
    <TD style=3D"padding: 5px; width: 65px; text-align: right; =
font-size: 11px !important;"><A=20
      title=3D"Close the toolbar" style=3D'background: =
url("/static/images/toolbar/wm_tb_close.png") no-repeat 100% 0px; =
border: currentColor; border-image: none; color: rgb(51, 51, 255); =
padding-right: 18px; font-family: "Lucida Grande","Arial",sans-serif; =
margin-bottom: 23px; display: block;'=20
      =
onclick=3D"document.getElementById('wm-ipp').style.display=3D'none';" =
href=3D"javascript:;">Close</A><A=20
      title=3D"Get some help using the Wayback Machine" =
style=3D'background: url("/static/images/toolbar/wm_tb_help.png") =
no-repeat 100% 0px; border: currentColor; border-image: none; color: =
rgb(51, 51, 255); padding-right: 18px; font-family: "Lucida =
Grande","Arial",sans-serif; display: block;'=20
      =
href=3D"http://faq.web.archive.org/">Help</A></TD></TR></TBODY></TABLE></=
DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
 var wmDisclaimBanner =3D document.getElementById("wm-ipp");=0A=
 if(wmDisclaimBanner !=3D null) {=0A=
   disclaimElement(wmDisclaimBanner);=0A=
 }=0A=
</SCRIPT>
 <!-- END WAYBACK TOOLBAR INSERT -->=20
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"4"><B>Tutorial 5: Quad=20
Trees </B></FONT></P>
<P align=3D"left"><IMG width=3D"800" height=3D"1" =
src=3D"http://web.archive.org/web/20140722205338im_/http://rastertek.com/=
pic1001.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
terrain=20
tutorial will cover how to implement quad trees using DirectX 11 and =
C++. The=20
code in this tutorial is based on the previous tutorial. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Before I get into=20
the explaination of quad trees I want to mention that this is an =
optimization=20
technique. Generally I don't like to cover optimization techniques until =
the=20
very end because you should not be optimizing anything until you get to =
that=20
point. However in this case you need to understand how the optimization=20
technique works so that you design your terrain engine with certain =
principles=20
that allow you to optimize it using quad trees once everything is =
complete. Also=20
it is easier to demonstrate how the quad tree code should work while the =
terrain=20
code is still in a simple form. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">So =
far to render=20
terrain we have generally put the entire terrain information into a =
single=20
buffer and had the graphics card render the entire terrain each  frame=20
regardless if we could see all of it or not. This is obviously =
inefficient and=20
can hamper the performance of the application so we need to look for a =
way to=20
draw only what the user is currently viewing. Fortunately there are many =

different space partitioning algorithms that exist which can help us =
reduce the=20
number of polygons that we are drawing each frame. Most space =
partitioning=20
algorithms work by dividing a scene up into smaller sections and only =
rendering=20
those sections that can be seen by the user. One of the better space=20
partitioning methods that works uniquely well with terrain data is call =
Quad=20
Tree Partitioning. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">How =
quad trees work=20
is that they divide the terrain into four even squares (quads).   Then =
each quad=20
is further divided into four more evenly sized quads. This division =
keeps going=20
until we meet a certain criteria that we put in place.   In this =
tutorial the=20
criteria will be the maximum number of triangles allowed inside a quad. =
The=20
maximum value will be set to 10,000 so each quad will keep dividing =
until it=20
finally has less that 10,000 triangles inside it. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">To =
illustrate how=20
the quad tree algorithm works we first start with a quad that =
encompasses the=20
entire terrain: </FONT></P>
<P align=3D"left"><IMG width=3D"500" height=3D"116" =
src=3D"http://web.archive.org/web/20140722205338im_/http://rastertek.com/=
pic0127.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Then =
we divide it=20
into four quads and check if each of those quads has more than 10,000 =
triangles=20
in it or not: </FONT></P>
<P align=3D"left"><IMG width=3D"500" height=3D"127" =
src=3D"http://web.archive.org/web/20140722205338im_/http://rastertek.com/=
pic0128.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">If =
the quad has more=20
than 10,000 triangles in it then we divide that quad into four evenly =
sized=20
quads and check again if each of the new four quads has less than 10,000 =

triangles in it or not: </FONT></P>
<P align=3D"left"><IMG width=3D"500" height=3D"141" =
src=3D"http://web.archive.org/web/20140722205338im_/http://rastertek.com/=
pic0129.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Once =
each of the=20
quads in the entire quad tree has less than 10,000 triangles in it we =
are done=20
dividing the terrain up into sections. Now for each quad we figure out =
which=20
triangles belong inside it and create a vertex buffer for each quad and =
fill the=20
vertex buffers with the triangles for just that quad. The final result =
is that=20
we have basically divided the terrain up into a number of vertex buffers =
instead=20
of using a single vertex buffer for the entire thing. And because each =
quad is a=20
cube with a known location and size we can use the FrustumClass to cull =
any of=20
the cubes we are not viewing. This is where we start to gain major speed =
in=20
rendering our terrain. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
next aspect of=20
the quad tree algorithm is that we maintain a tree structure so that the =
quads=20
are linked to each other in a parent child relationship such as the =
following:=20
</FONT></P>
<P align=3D"left"><IMG width=3D"550" height=3D"200" =
src=3D"http://web.archive.org/web/20140722205338im_/http://rastertek.com/=
pic0131.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">So =
just like the=20
three terrain pictures above the diagram uses the top node of the tree =
to=20
represent the entire terrain. The second tier of child nodes represents =
the=20
first four quads that the parent terrain was split into. The third tier=20
represents the four child quads that each of the four parent quads got =
split=20
into. And from there the tree will continue to grow in the same fashion =
until it=20
has met the criteria of when to or when not to split each quad (in this =
example=20
it is by 10,000 triangles maximum per quad). </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
because it is a=20
tree structure with a parent child relationship we can use this to our =
advantage=20
and gain even more speed when culling the terrain. For example we start =
at the=20
first node and check if it can be seen or not.  If we can't see the =
first node=20
then the terrain can't be seen and we don't render anything.   This is a =
very=20
fast check which has enabled us to exclude rendering the entire terrain =
to the=20
video card. However if we can see the first node then we go down the =
tree.=20
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Next =
we check to see=20
if we can view any of the four child nodes which represent the first =
four quads=20
the terrain was split into. For each quad we can't see we can then =
exclude=20
checking any of its child nodes, this is where the node tree nets us =
incredible=20
speed through this quick method of elimination. The quads that can be =
viewed we=20
then check their child nodes and continue down the viewable part of the =
tree=20
until we have a final list of child nodes at the bottom of the tree that =
can be=20
viewed. We then only draw this reduced final list of child nodes. =
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">One =
final note is=20
that height does not matter in a quad tree.   We are only concerned with =
the X=20
and Z coordinates for culling since we are assuming the user will =
generally be=20
slightly above the terrain most of the time. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Framework</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
frame work for=20
this tutorial is the same as the previous tutorial except that we add a=20
QuadTreeClass and FrustumClass object to it.   The FrustumClass is the =
same one=20
as the DirectX 11 Frustum Culling tutorial. We will start by first =
looking at=20
the new QuadTreeClass. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Quadtreeclass.h</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: quadtreeclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _QUADTREECLASS_H_=0A=
#define _QUADTREECLASS_H_=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">For =
this tutorial we=20
will use 10,000 triangles per quad as the criteria for splitting nodes =
in the=20
quad tree. It is defined here as a global for easy manipulation. Note =
that=20
making this number too low will cause the tree to be incredibly more =
complex and=20
 hence will exponentially increase the time it takes to construct it.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
const int MAX_TRIANGLES =3D 10000;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
QuadTreeClass=20
will also need to interface with the TerrainClass, FrustumClass, and=20
TerrainShaderClass so the headers for each are included here. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "terrainclass.h"=0A=
#include "frustumclass.h"=0A=
#include "terrainshaderclass.h"=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: QuadTreeClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class QuadTreeClass=0A=
{=0A=
private:=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
QuadTreeClass=20
will require the same definition of the VertexType that is used in the=20
TerrainClass since it will be taking over the storing and rendering of =
the=20
terrain vertex information. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct VertexType=0A=
	{=0A=
		D3DXVECTOR3 position;=0A=
		D3DXVECTOR2 texture;=0A=
		D3DXVECTOR3 normal;=0A=
	};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Each =
node in the=20
quad tree will be defined as follows with position, size, triangle =
count,=20
buffers, and four child nodes: </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct NodeType=0A=
	{=0A=
		float positionX, positionZ, width;=0A=
		int triangleCount;=0A=
		ID3D11Buffer *vertexBuffer, *indexBuffer;=0A=
		NodeType* nodes[4];=0A=
	};=0A=
=0A=
public:=0A=
	QuadTreeClass();=0A=
	QuadTreeClass(const QuadTreeClass&amp;);=0A=
	~QuadTreeClass();=0A=
=0A=
	bool Initialize(TerrainClass*, ID3D11Device*);=0A=
	void Shutdown();=0A=
	void Render(FrustumClass*, ID3D11DeviceContext*, TerrainShaderClass*);=0A=
=0A=
	int GetDrawCount();=0A=
=0A=
private:=0A=
	void CalculateMeshDimensions(int, float&amp;, float&amp;, float&amp;);=0A=
	void CreateTreeNode(NodeType*, float, float, float, ID3D11Device*);=0A=
	int CountTriangles(float, float, float);=0A=
	bool IsTriangleContained(int, float, float, float);=0A=
	void ReleaseNode(NodeType*);=0A=
	void RenderNode(NodeType*, FrustumClass*, ID3D11DeviceContext*, =
TerrainShaderClass*);=0A=
=0A=
private:=0A=
	int m_triangleCount, m_drawCount;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
QuadTreeClass=20
will require a list of the vertices from the TerrainClass object for =
building=20
the quad tree. The list will be stored in the following array. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	VertexType* =
m_vertexList;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
parent node is=20
the root of the quad tree. This single node will be expanded recursively =
to=20
build the entire tree. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	NodeType* =
m_parentNode;=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Quadtreeclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: quadtreeclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "quadtreeclass.h"=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
class=20
constructor initializes the vertex list and quad tree parent node to =
null.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">QuadTreeClass::QuadTreeClass()=0A=
{=0A=
	m_vertexList =3D 0;=0A=
	m_parentNode =3D 0;=0A=
}=0A=
=0A=
=0A=
QuadTreeClass::QuadTreeClass(const QuadTreeClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
QuadTreeClass::~QuadTreeClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool QuadTreeClass::Initialize(TerrainClass* terrain, ID3D11Device* =
device)=0A=
{=0A=
	int vertexCount;=0A=
	float centerX, centerZ, width;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
first thing the=20
QuadTreeClass has to do is get all the information it will need from the =

TerrainClass. It first gets the number of vertices in the terrain, then =
it uses=20
that value to create a vertex list which is then sent into the =
TerrainClass  and=20
filled with the terrain vertex information. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Get the =
number of vertices in the terrain vertex array.=0A=
	vertexCount =3D terrain-&gt;GetVertexCount();=0A=
=0A=
	// Store the total triangle count for the vertex list.=0A=
	m_triangleCount =3D vertexCount / 3;=0A=
=0A=
	// Create a vertex array to hold all of the terrain vertices.=0A=
	m_vertexList =3D new VertexType[vertexCount];=0A=
	if(!m_vertexList)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Copy the terrain vertices into the vertex list.=0A=
	terrain-&gt;CopyVertexArray((void*)m_vertexList);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Once =
the vertex list=20
is filled with the terrain information it can calculate the dimensions =
of the=20
parent node  and start the recursive method of building the quad tree.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Calculate the =
center x,z and the width of the mesh.=0A=
	CalculateMeshDimensions(vertexCount, centerX, centerZ, width);=0A=
=0A=
	// Create the parent node for the quad tree.=0A=
	m_parentNode =3D new NodeType;=0A=
	if(!m_parentNode)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Recursively build the quad tree based on the vertex list data and =
mesh dimensions.=0A=
	CreateTreeNode(m_parentNode, centerX, centerZ, width, device);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Once =
the quad tree=20
is built the vertex list is no longer needed. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Release the =
vertex list since the quad tree now has the vertices in each node.=0A=
	if(m_vertexList)=0A=
	{=0A=
		delete [] m_vertexList;=0A=
		m_vertexList =3D 0;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void QuadTreeClass::Shutdown()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Shutdown calls the=20
ReleaseNode function which recursively traces down the tree and removes =
all the=20
nodes. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Recursively =
release the quad tree data.=0A=
	if(m_parentNode)=0A=
	{=0A=
		ReleaseNode(m_parentNode);=0A=
		delete m_parentNode;=0A=
		m_parentNode =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Render function=20
calls RenderNode which goes through the tree and renders nodes using the =
frustum=20
object which determines the node visibility. The m_drawCount variable =
must be=20
initialized to zero before the rendering is done as it will be =
incremented for=20
each node drawn for all the triangles in each node. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
QuadTreeClass::Render(FrustumClass* frustum, ID3D11DeviceContext* =
deviceContext, TerrainShaderClass* shader)=0A=
{=0A=
	// Reset the number of triangles that are drawn for this frame.=0A=
	m_drawCount =3D 0;=0A=
=0A=
	// Render each node that is visible starting at the parent node and =
moving down the tree.=0A=
	RenderNode(m_parentNode, frustum, deviceContext, shader);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">GetDrawCount returns=20
the total number of triangles that were drawn in the previous Render =
function=20
call. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">int =
QuadTreeClass::GetDrawCount()=0A=
{=0A=
	return m_drawCount;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
CalculateMeshDimensions function determines the physical quad size of =
the parent=20
node. It goes through all the vertices in the terrain vertex list and =
uses them=20
to calculate the center of the terrain as well as the absolute maximum =
width of=20
the terrain. These values will then later be used to create the size of =
the=20
parent node. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
QuadTreeClass::CalculateMeshDimensions(int vertexCount, float&amp; =
centerX, float&amp; centerZ, float&amp; meshWidth)=0A=
{=0A=
	int i;=0A=
	float maxWidth, maxDepth, minWidth, minDepth, width, depth, maxX, maxZ;=0A=
=0A=
=0A=
	// Initialize the center position of the mesh to zero.=0A=
	centerX =3D 0.0f;=0A=
	centerZ =3D 0.0f;=0A=
=0A=
	// Sum all the vertices in the mesh.=0A=
	for(i=3D0; i&lt;vertexCount; i++)=0A=
	{=0A=
		centerX +=3D m_vertexList[i].position.x;=0A=
		centerZ +=3D m_vertexList[i].position.z;=0A=
	}=0A=
=0A=
	// And then divide it by the number of vertices to find the mid-point =
of the mesh.=0A=
	centerX =3D centerX / (float)vertexCount;=0A=
	centerZ =3D centerZ / (float)vertexCount;=0A=
=0A=
	// Initialize the maximum and minimum size of the mesh.=0A=
	maxWidth =3D 0.0f;=0A=
	maxDepth =3D 0.0f;=0A=
=0A=
	minWidth =3D fabsf(m_vertexList[0].position.x - centerX);=0A=
	minDepth =3D fabsf(m_vertexList[0].position.z - centerZ);=0A=
=0A=
	// Go through all the vertices and find the maximum and minimum width =
and depth of the mesh.=0A=
	for(i=3D0; i&lt;vertexCount; i++)=0A=
	{=0A=
		width =3D fabsf(m_vertexList[i].position.x - centerX);	=0A=
		depth =3D fabsf(m_vertexList[i].position.z - centerZ);	=0A=
=0A=
		if(width &gt; maxWidth) { maxWidth =3D width; }=0A=
		if(depth &gt; maxDepth) { maxDepth =3D depth; }=0A=
		if(width &lt; minWidth) { minWidth =3D width; }=0A=
		if(depth &lt; minDepth) { minDepth =3D depth; }=0A=
	}=0A=
=0A=
	// Find the absolute maximum value between the min and max depth and =
width.=0A=
	maxX =3D (float)max(fabs(minWidth), fabs(maxWidth));=0A=
	maxZ =3D (float)max(fabs(minDepth), fabs(maxDepth));=0A=
	=0A=
	// Calculate the maximum diameter of the mesh.=0A=
	meshWidth =3D max(maxX, maxZ) * 2.0f;=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">CreateTreeNode is=20
the function that builds the quad tree. Note that it is recursive and =
will call=20
itself numerous times. It starts with the parent node and then calls =
itself for=20
each child node, and for each child node it calls itself for their =
children=20
nodes and so forth. It builds the entire node tree and at the same time =
it loads=20
the vertex data into each bottom child node. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
QuadTreeClass::CreateTreeNode(NodeType* node, float positionX, float =
positionZ, float width, ID3D11Device* device)=0A=
{=0A=
	int numTriangles, i, count, vertexCount, index, vertexIndex;=0A=
	float offsetX, offsetZ;=0A=
	VertexType* vertices;=0A=
	unsigned long* indices;=0A=
	bool result;=0A=
	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;=0A=
	D3D11_SUBRESOURCE_DATA vertexData, indexData;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">First initialize the=20
node and set its position in the world. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Store the =
node position and size.=0A=
	node-&gt;positionX =3D positionX;=0A=
	node-&gt;positionZ =3D positionZ;=0A=
	node-&gt;width =3D width;=0A=
=0A=
	// Initialize the triangle count to zero for the node.=0A=
	node-&gt;triangleCount =3D 0;=0A=
=0A=
	// Initialize the vertex and index buffer to null.=0A=
	node-&gt;vertexBuffer =3D 0;=0A=
	node-&gt;indexBuffer =3D 0;=0A=
=0A=
	// Initialize the children nodes of this node to null.=0A=
	node-&gt;nodes[0] =3D 0;=0A=
	node-&gt;nodes[1] =3D 0;=0A=
	node-&gt;nodes[2] =3D 0;=0A=
	node-&gt;nodes[3] =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Then =
count the=20
number of triangles that are in the dimensions of this node from the =
terrain.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Count the =
number of triangles that are inside this node.=0A=
	numTriangles =3D CountTriangles(positionX, positionZ, width);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Case =
1: If there are=20
no triangles in this node then this part of the tree is complete. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Case 1: If =
there are no triangles in this node then return as it is empty and =
requires no processing.=0A=
	if(numTriangles =3D=3D 0)=0A=
	{=0A=
		return;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Case =
2: If there are=20
too many triangles inside this node then it gets split into four new=20
quads/nodes. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Case 2: If =
there are too many triangles in this node then split it into four equal =
sized smaller tree nodes.=0A=
	if(numTriangles &gt; MAX_TRIANGLES)=0A=
	{=0A=
		for(i=3D0; i&lt;4; i++)=0A=
		{=0A=
			// Calculate the position offsets for the new child node.=0A=
			offsetX =3D (((i % 2) &lt; 1) ? -1.0f : 1.0f) * (width / 4.0f);=0A=
			offsetZ =3D (((i % 4) &lt; 2) ? -1.0f : 1.0f) * (width / 4.0f);=0A=
=0A=
			// See if there are any triangles in the new node.=0A=
			count =3D CountTriangles((positionX + offsetX), (positionZ + =
offsetZ), (width / 2.0f));=0A=
			if(count &gt; 0)=0A=
			{=0A=
				// If there are triangles inside where this new node would be then =
create the child node.=0A=
				node-&gt;nodes[i] =3D new NodeType;=0A=
=0A=
				// Extend the tree starting from this new child node now.=0A=
				CreateTreeNode(node-&gt;nodes[i], (positionX + offsetX), (positionZ =
+ offsetZ), (width / 2.0f), device);=0A=
			}=0A=
		}=0A=
=0A=
		return;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Case =
3: If there are=20
the right number of triangles then create and load the vertex and index =
buffer=20
from the terrain list into this node. We have also determined that this =
must be=20
a bottom child node. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Case 3: If =
this node is not empty and the triangle count for it is less than the =
max then =0A=
	// this node is at the bottom of the tree so create the list of =
triangles to store in it.=0A=
	node-&gt;triangleCount =3D numTriangles;=0A=
=0A=
	// Calculate the number of vertices.=0A=
	vertexCount =3D numTriangles * 3;=0A=
=0A=
	// Create the vertex array.=0A=
	vertices =3D new VertexType[vertexCount];=0A=
=0A=
	// Create the index array.=0A=
	indices =3D new unsigned long[vertexCount];=0A=
=0A=
	// Initialize the index for this new vertex and index array.=0A=
	index =3D 0;=0A=
=0A=
	// Go through all the triangles in the vertex list.=0A=
	for(i=3D0; i&lt;m_triangleCount; i++)=0A=
	{=0A=
		// If the triangle is inside this node then add it to the vertex array.=0A=
		result =3D IsTriangleContained(i, positionX, positionZ, width);=0A=
		if(result =3D=3D true)=0A=
		{=0A=
			// Calculate the index into the terrain vertex list.=0A=
			vertexIndex =3D i * 3;=0A=
=0A=
			// Get the three vertices of this triangle from the vertex list.=0A=
			vertices[index].position =3D m_vertexList[vertexIndex].position;=0A=
			vertices[index].texture =3D m_vertexList[vertexIndex].texture;=0A=
			vertices[index].normal =3D m_vertexList[vertexIndex].normal;=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
=0A=
			vertexIndex++;=0A=
			vertices[index].position =3D m_vertexList[vertexIndex].position;=0A=
			vertices[index].texture =3D m_vertexList[vertexIndex].texture;=0A=
			vertices[index].normal =3D m_vertexList[vertexIndex].normal;=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
=0A=
			vertexIndex++;=0A=
			vertices[index].position =3D m_vertexList[vertexIndex].position;=0A=
			vertices[index].texture =3D m_vertexList[vertexIndex].texture;=0A=
			vertices[index].normal =3D m_vertexList[vertexIndex].normal;=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
		}=0A=
	}=0A=
=0A=
	// Set up the description of the vertex buffer.=0A=
	vertexBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
	vertexBufferDesc.ByteWidth =3D sizeof(VertexType) * vertexCount;=0A=
	vertexBufferDesc.BindFlags =3D D3D11_BIND_VERTEX_BUFFER;=0A=
	vertexBufferDesc.CPUAccessFlags =3D 0;=0A=
	vertexBufferDesc.MiscFlags =3D 0;=0A=
	vertexBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Give the subresource structure a pointer to the vertex data.=0A=
	vertexData.pSysMem =3D vertices;=0A=
	vertexData.SysMemPitch =3D 0;=0A=
	vertexData.SysMemSlicePitch =3D 0;=0A=
=0A=
	// Now finally create the vertex buffer.=0A=
	device-&gt;CreateBuffer(&amp;vertexBufferDesc, &amp;vertexData, =
&amp;node-&gt;vertexBuffer);=0A=
=0A=
	// Set up the description of the index buffer.=0A=
	indexBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
	indexBufferDesc.ByteWidth =3D sizeof(unsigned long) * vertexCount;=0A=
	indexBufferDesc.BindFlags =3D D3D11_BIND_INDEX_BUFFER;=0A=
	indexBufferDesc.CPUAccessFlags =3D 0;=0A=
	indexBufferDesc.MiscFlags =3D 0;=0A=
	indexBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Give the subresource structure a pointer to the index data.=0A=
	indexData.pSysMem =3D indices;=0A=
	indexData.SysMemPitch =3D 0;=0A=
	indexData.SysMemSlicePitch =3D 0;=0A=
=0A=
	// Create the index buffer.=0A=
	device-&gt;CreateBuffer(&amp;indexBufferDesc, &amp;indexData, =
&amp;node-&gt;indexBuffer);=0A=
=0A=
	// Release the vertex and index arrays now that the data is stored in =
the buffers in the node.=0A=
	delete [] vertices;=0A=
	vertices =3D 0;=0A=
=0A=
	delete [] indices;=0A=
	indices =3D 0;=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
CountTriangles=20
function goes through the list of triangles from the terrain data and =
determines=20
which ones are inside the dimensions that are given as input. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">int =
QuadTreeClass::CountTriangles(float positionX, float positionZ, float =
width)=0A=
{=0A=
	int count, i;=0A=
	bool result;=0A=
=0A=
=0A=
	// Initialize the count to zero.=0A=
	count =3D 0;=0A=
=0A=
	// Go through all the triangles in the entire mesh and check which ones =
should be inside this node.=0A=
	for(i=3D0; i&lt;m_triangleCount; i++)=0A=
	{=0A=
		// If the triangle is inside the node then increment the count by one.=0A=
		result =3D IsTriangleContained(i, positionX, positionZ, width);=0A=
		if(result =3D=3D true)=0A=
		{=0A=
			count++;=0A=
		}=0A=
	}=0A=
=0A=
	return count;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">IsTriangleContained=20
calculates if the given triangle is completely inside the input cube =
dimensions=20
or not. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
QuadTreeClass::IsTriangleContained(int index, float positionX, float =
positionZ, float width)=0A=
{=0A=
	float radius;=0A=
	int vertexIndex;=0A=
	float x1, z1, x2, z2, x3, z3;=0A=
	float minimumX, maximumX, minimumZ, maximumZ;=0A=
=0A=
=0A=
	// Calculate the radius of this node.=0A=
	radius =3D width / 2.0f;=0A=
=0A=
	// Get the index into the vertex list.=0A=
	vertexIndex =3D index * 3;=0A=
=0A=
	// Get the three vertices of this triangle from the vertex list.=0A=
	x1 =3D m_vertexList[vertexIndex].position.x;=0A=
	z1 =3D m_vertexList[vertexIndex].position.z;=0A=
	vertexIndex++;=0A=
	=0A=
	x2 =3D m_vertexList[vertexIndex].position.x;=0A=
	z2 =3D m_vertexList[vertexIndex].position.z;=0A=
	vertexIndex++;=0A=
=0A=
	x3 =3D m_vertexList[vertexIndex].position.x;=0A=
	z3 =3D m_vertexList[vertexIndex].position.z;=0A=
=0A=
	// Check to see if the minimum of the x coordinates of the triangle is =
inside the node.=0A=
	minimumX =3D min(x1, min(x2, x3));=0A=
	if(minimumX &gt; (positionX + radius))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Check to see if the maximum of the x coordinates of the triangle is =
inside the node.=0A=
	maximumX =3D max(x1, max(x2, x3));=0A=
	if(maximumX &lt; (positionX - radius))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Check to see if the minimum of the z coordinates of the triangle is =
inside the node.=0A=
	minimumZ =3D min(z1, min(z2, z3));=0A=
	if(minimumZ &gt; (positionZ + radius))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Check to see if the maximum of the z coordinates of the triangle is =
inside the node.=0A=
	maximumZ =3D max(z1, max(z2, z3));=0A=
	if(maximumZ &lt; (positionZ - radius))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
ReleaseNode=20
function is used for releasing all the nodes in the quad tree as well as =
the=20
data inside each node. The function is recursive and will call itself to =

traverse the entire node tree. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
QuadTreeClass::ReleaseNode(NodeType* node)=0A=
{=0A=
	int i;=0A=
=0A=
=0A=
	// Recursively go down the tree and release the bottom nodes first.=0A=
	for(i=3D0; i&lt;4; i++)=0A=
	{=0A=
		if(node-&gt;nodes[i] !=3D 0)=0A=
		{=0A=
			ReleaseNode(node-&gt;nodes[i]);=0A=
		}=0A=
	}=0A=
=0A=
	// Release the vertex buffer for this node.=0A=
	if(node-&gt;vertexBuffer)=0A=
	{=0A=
		node-&gt;vertexBuffer-&gt;Release();=0A=
		node-&gt;vertexBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the index buffer for this node.=0A=
	if(node-&gt;indexBuffer)=0A=
	{=0A=
		node-&gt;indexBuffer-&gt;Release();=0A=
		node-&gt;indexBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the four child nodes.=0A=
	for(i=3D0; i&lt;4; i++)=0A=
	{=0A=
		if(node-&gt;nodes[i])=0A=
		{=0A=
			delete node-&gt;nodes[i];=0A=
			node-&gt;nodes[i] =3D 0;=0A=
		}=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">RenderNode is=20
responsible for drawing all the visible nodes in the quad tree. It takes =
as=20
input the frustum object which it uses to check if the user can view =
each quad=20
or not. It also takes the shader that will be used to render each node, =
for this=20
tutorial the shader is the TerrainShaderClass object. Just like the =
other=20
functions this is also recursive and calls itself for all the child =
nodes it can=20
see. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
QuadTreeClass::RenderNode(NodeType* node, FrustumClass* frustum, =
ID3D11DeviceContext* deviceContext, TerrainShaderClass* shader)=0A=
{=0A=
	bool result;=0A=
	int count, i, indexCount;=0A=
	unsigned int stride, offset;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Start by doing a=20
frustum check on the cube to see if it is visible or not. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Check to see =
if the node can be viewed, height doesn't matter in a quad tree.=0A=
	result =3D frustum-&gt;CheckCube(node-&gt;positionX, 0.0f, =
node-&gt;positionZ, (node-&gt;width / 2.0f));=0A=
=0A=
	// If it can't be seen then none of its children can either so don't =
continue down the tree, this is where the speed is gained.=0A=
	if(!result)=0A=
	{=0A=
		return;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">If =
this node can be=20
seen then recursively call this same function for each of the child =
nodes.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// If it can be =
seen then check all four child nodes to see if they can also be seen.=0A=
	count =3D 0;=0A=
	for(i=3D0; i&lt;4; i++)=0A=
	{=0A=
		if(node-&gt;nodes[i] !=3D 0)=0A=
		{=0A=
			count++;=0A=
			RenderNode(node-&gt;nodes[i], frustum, deviceContext, shader);=0A=
		}=0A=
	}=0A=
=0A=
	// If there were any children nodes then there is no need to continue =
as parent nodes won't contain any triangles to render.=0A=
	if(count !=3D 0)=0A=
	{=0A=
		return;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Render the buffers=20
in this node as normal if they can be seen using the terrain shader. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Otherwise if =
this node can be seen and has triangles in it then render these =
triangles.=0A=
=0A=
	// Set vertex buffer stride and offset.=0A=
	stride =3D sizeof(VertexType); =0A=
	offset =3D 0;=0A=
=0A=
	// Set the vertex buffer to active in the input assembler so it can be =
rendered.=0A=
	deviceContext-&gt;IASetVertexBuffers(0, 1, &amp;node-&gt;vertexBuffer, =
&amp;stride, &amp;offset);=0A=
=0A=
	// Set the index buffer to active in the input assembler so it can be =
rendered.=0A=
	deviceContext-&gt;IASetIndexBuffer(node-&gt;indexBuffer, =
DXGI_FORMAT_R32_UINT, 0);=0A=
=0A=
	// Set the type of primitive that should be rendered from this vertex =
buffer, in this case triangles.=0A=
	=
deviceContext-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGL=
ELIST);=0A=
=0A=
	// Determine the number of indices in this node.=0A=
	indexCount =3D node-&gt;triangleCount * 3;=0A=
=0A=
	// Call the terrain shader to render the polygons in this node.=0A=
	shader-&gt;RenderShader(deviceContext, indexCount);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Increment the count=20
of triangles that have been drawn. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Increase the =
count of the number of polygons that have been rendered during this =
frame.=0A=
	m_drawCount +=3D node-&gt;triangleCount;=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrainclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
TerrainClass has=20
been modified to remove the rendering aspects it had before. The =
QuadTreeClass=20
now handles all the rendering. There are also a couple new functions to =
help=20
facilitate loading the terrain data into the QuadTreeClass. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrainclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _TERRAINCLASS_H_=0A=
#define _TERRAINCLASS_H_=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
const int TEXTURE_REPEAT =3D 8;=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
#include &lt;stdio.h&gt;=0A=
=0A=
=0A=
///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "textureclass.h"=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: TerrainClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class TerrainClass=0A=
{=0A=
private:=0A=
	struct VertexType=0A=
	{=0A=
		D3DXVECTOR3 position;=0A=
		D3DXVECTOR2 texture;=0A=
		D3DXVECTOR3 normal;=0A=
	};=0A=
=0A=
	struct HeightMapType =0A=
	{ =0A=
		float x, y, z;=0A=
		float tu, tv;=0A=
		float nx, ny, nz;=0A=
	};=0A=
=0A=
	struct VectorType =0A=
	{ =0A=
		float x, y, z;=0A=
	};=0A=
=0A=
public:=0A=
	TerrainClass();=0A=
	TerrainClass(const TerrainClass&amp;);=0A=
	~TerrainClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, char*, WCHAR*);=0A=
	void Shutdown();=0A=
=0A=
	ID3D11ShaderResourceView* GetTexture();</FONT><FONT color=3D"#aaaaff" =
face=3D"arial" size=3D"2">=0A=
=0A=
	int GetVertexCount();=0A=
	void CopyVertexArray(void*);</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
=0A=
private:=0A=
	bool LoadHeightMap(char*);=0A=
	void NormalizeHeightMap();=0A=
	bool CalculateNormals();=0A=
	void ShutdownHeightMap();=0A=
=0A=
	void CalculateTextureCoordinates();=0A=
	bool LoadTexture(ID3D11Device*, WCHAR*);=0A=
	void ReleaseTexture();=0A=
=0A=
	bool InitializeBuffers(ID3D11Device*);=0A=
	void ShutdownBuffers();=0A=
	=0A=
private:=0A=
	int m_terrainWidth, m_terrainHeight;=0A=
	HeightMapType* m_heightMap;=0A=
	TextureClass* m_Texture;</FONT><FONT color=3D"#aaaaff" face=3D"arial" =
size=3D"2">=0A=
	int m_vertexCount;=0A=
	VertexType* m_vertices;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrainclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrainclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "terrainclass.h"=0A=
=0A=
=0A=
TerrainClass::TerrainClass()=0A=
{=0A=
	m_heightMap =3D 0;=0A=
	m_Texture =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
private vertex=20
array pointer is set to null in the class constructor. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	m_vertices =3D =
0;</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
}=0A=
=0A=
=0A=
TerrainClass::TerrainClass(const TerrainClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
TerrainClass::~TerrainClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool TerrainClass::Initialize(ID3D11Device* device, char* =
heightMapFilename, WCHAR* textureFilename)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Load in the height map for the terrain.=0A=
	result =3D LoadHeightMap(heightMapFilename);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Normalize the height of the height map.=0A=
	NormalizeHeightMap();=0A=
=0A=
	// Calculate the normals for the terrain data.=0A=
	result =3D CalculateNormals();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Calculate the texture coordinates.=0A=
	CalculateTextureCoordinates();=0A=
=0A=
	// Load the texture.=0A=
	result =3D LoadTexture(device, textureFilename);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">=0A=
=0A=
	// Initialize the vertex array that will hold the geometry for the =
terrain.</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
	result =3D InitializeBuffers(device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainClass::Shutdown()=0A=
{=0A=
	// Release the texture.=0A=
	ReleaseTexture();</FONT><FONT color=3D"#aaaaff" face=3D"arial" =
size=3D"2">=0A=
=0A=
	// Release the vertex array.</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
	ShutdownBuffers();=0A=
=0A=
	// Release the height map data.=0A=
	ShutdownHeightMap();=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
ID3D11ShaderResourceView* TerrainClass::GetTexture()=0A=
{=0A=
	return m_Texture-&gt;GetTexture();=0A=
}=0A=
=0A=
=0A=
bool TerrainClass::LoadHeightMap(char* filename)=0A=
{=0A=
	FILE* filePtr;=0A=
	int error;=0A=
	unsigned int count;=0A=
	BITMAPFILEHEADER bitmapFileHeader;=0A=
	BITMAPINFOHEADER bitmapInfoHeader;=0A=
	int imageSize, i, j, k, index;=0A=
	unsigned char* bitmapImage;=0A=
	unsigned char height;=0A=
=0A=
=0A=
	// Open the height map file in binary.=0A=
	error =3D fopen_s(&amp;filePtr, filename, "rb");=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read in the file header.=0A=
	count =3D fread(&amp;bitmapFileHeader, sizeof(BITMAPFILEHEADER), 1, =
filePtr);=0A=
	if(count !=3D 1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read in the bitmap info header.=0A=
	count =3D fread(&amp;bitmapInfoHeader, sizeof(BITMAPINFOHEADER), 1, =
filePtr);=0A=
	if(count !=3D 1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Save the dimensions of the terrain.=0A=
	m_terrainWidth =3D bitmapInfoHeader.biWidth;=0A=
	m_terrainHeight =3D bitmapInfoHeader.biHeight;=0A=
=0A=
	// Calculate the size of the bitmap image data.=0A=
	imageSize =3D m_terrainWidth * m_terrainHeight * 3;=0A=
=0A=
	// Allocate memory for the bitmap image data.=0A=
	bitmapImage =3D new unsigned char[imageSize];=0A=
	if(!bitmapImage)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Move to the beginning of the bitmap data.=0A=
	fseek(filePtr, bitmapFileHeader.bfOffBits, SEEK_SET);=0A=
=0A=
	// Read in the bitmap image data.=0A=
	count =3D fread(bitmapImage, 1, imageSize, filePtr);=0A=
	if(count !=3D imageSize)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Close the file.=0A=
	error =3D fclose(filePtr);=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the structure to hold the height map data.=0A=
	m_heightMap =3D new HeightMapType[m_terrainWidth * m_terrainHeight];=0A=
	if(!m_heightMap)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the position in the image data buffer.=0A=
	k=3D0;=0A=
=0A=
	// Read the image data into the height map.=0A=
	for(j=3D0; j&lt;m_terrainHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;m_terrainWidth; i++)=0A=
		{=0A=
			height =3D bitmapImage[k];=0A=
			=0A=
			index =3D (m_terrainHeight * j) + i;=0A=
=0A=
			m_heightMap[index].x =3D (float)i;=0A=
			m_heightMap[index].y =3D (float)height;=0A=
			m_heightMap[index].z =3D (float)j;=0A=
=0A=
			k+=3D3;=0A=
		}=0A=
	}=0A=
=0A=
	// Release the bitmap image data.=0A=
	delete [] bitmapImage;=0A=
	bitmapImage =3D 0;=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainClass::NormalizeHeightMap()=0A=
{=0A=
	int i, j;=0A=
=0A=
=0A=
	for(j=3D0; j&lt;m_terrainHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;m_terrainWidth; i++)=0A=
		{=0A=
			m_heightMap[(m_terrainHeight * j) + i].y /=3D 15.0f;=0A=
		}=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool TerrainClass::CalculateNormals()=0A=
{=0A=
	int i, j, index1, index2, index3, index, count;=0A=
	float vertex1[3], vertex2[3], vertex3[3], vector1[3], vector2[3], =
sum[3], length;=0A=
	VectorType* normals;=0A=
=0A=
=0A=
	// Create a temporary array to hold the un-normalized normal vectors.=0A=
	normals =3D new VectorType[(m_terrainHeight-1) * (m_terrainWidth-1)];=0A=
	if(!normals)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Go through all the faces in the mesh and calculate their normals.=0A=
	for(j=3D0; j&lt;(m_terrainHeight-1); j++)=0A=
	{=0A=
		for(i=3D0; i&lt;(m_terrainWidth-1); i++)=0A=
		{=0A=
			index1 =3D (j * m_terrainHeight) + i;=0A=
			index2 =3D (j * m_terrainHeight) + (i+1);=0A=
			index3 =3D ((j+1) * m_terrainHeight) + i;=0A=
=0A=
			// Get three vertices from the face.=0A=
			vertex1[0] =3D m_heightMap[index1].x;=0A=
			vertex1[1] =3D m_heightMap[index1].y;=0A=
			vertex1[2] =3D m_heightMap[index1].z;=0A=
		=0A=
			vertex2[0] =3D m_heightMap[index2].x;=0A=
			vertex2[1] =3D m_heightMap[index2].y;=0A=
			vertex2[2] =3D m_heightMap[index2].z;=0A=
		=0A=
			vertex3[0] =3D m_heightMap[index3].x;=0A=
			vertex3[1] =3D m_heightMap[index3].y;=0A=
			vertex3[2] =3D m_heightMap[index3].z;=0A=
=0A=
			// Calculate the two vectors for this face.=0A=
			vector1[0] =3D vertex1[0] - vertex3[0];=0A=
			vector1[1] =3D vertex1[1] - vertex3[1];=0A=
			vector1[2] =3D vertex1[2] - vertex3[2];=0A=
			vector2[0] =3D vertex3[0] - vertex2[0];=0A=
			vector2[1] =3D vertex3[1] - vertex2[1];=0A=
			vector2[2] =3D vertex3[2] - vertex2[2];=0A=
=0A=
			index =3D (j * (m_terrainHeight-1)) + i;=0A=
=0A=
			// Calculate the cross product of those two vectors to get the =
un-normalized value for this face normal.=0A=
			normals[index].x =3D (vector1[1] * vector2[2]) - (vector1[2] * =
vector2[1]);=0A=
			normals[index].y =3D (vector1[2] * vector2[0]) - (vector1[0] * =
vector2[2]);=0A=
			normals[index].z =3D (vector1[0] * vector2[1]) - (vector1[1] * =
vector2[0]);=0A=
		}=0A=
	}=0A=
=0A=
	// Now go through all the vertices and take an average of each face =
normal 	=0A=
	// that the vertex touches to get the averaged normal for that vertex.=0A=
	for(j=3D0; j&lt;m_terrainHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;m_terrainWidth; i++)=0A=
		{=0A=
			// Initialize the sum.=0A=
			sum[0] =3D 0.0f;=0A=
			sum[1] =3D 0.0f;=0A=
			sum[2] =3D 0.0f;=0A=
=0A=
			// Initialize the count.=0A=
			count =3D 0;=0A=
=0A=
			// Bottom left face.=0A=
			if(((i-1) &gt;=3D 0) &amp;&amp; ((j-1) &gt;=3D 0))=0A=
			{=0A=
				index =3D ((j-1) * (m_terrainHeight-1)) + (i-1);=0A=
=0A=
				sum[0] +=3D normals[index].x;=0A=
				sum[1] +=3D normals[index].y;=0A=
				sum[2] +=3D normals[index].z;=0A=
				count++;=0A=
			}=0A=
=0A=
			// Bottom right face.=0A=
			if((i &lt; (m_terrainWidth-1)) &amp;&amp; ((j-1) &gt;=3D 0))=0A=
			{=0A=
				index =3D ((j-1) * (m_terrainHeight-1)) + i;=0A=
=0A=
				sum[0] +=3D normals[index].x;=0A=
				sum[1] +=3D normals[index].y;=0A=
				sum[2] +=3D normals[index].z;=0A=
				count++;=0A=
			}=0A=
=0A=
			// Upper left face.=0A=
			if(((i-1) &gt;=3D 0) &amp;&amp; (j &lt; (m_terrainHeight-1)))=0A=
			{=0A=
				index =3D (j * (m_terrainHeight-1)) + (i-1);=0A=
=0A=
				sum[0] +=3D normals[index].x;=0A=
				sum[1] +=3D normals[index].y;=0A=
				sum[2] +=3D normals[index].z;=0A=
				count++;=0A=
			}=0A=
=0A=
			// Upper right face.=0A=
			if((i &lt; (m_terrainWidth-1)) &amp;&amp; (j &lt; =
(m_terrainHeight-1)))=0A=
			{=0A=
				index =3D (j * (m_terrainHeight-1)) + i;=0A=
=0A=
				sum[0] +=3D normals[index].x;=0A=
				sum[1] +=3D normals[index].y;=0A=
				sum[2] +=3D normals[index].z;=0A=
				count++;=0A=
			}=0A=
			=0A=
			// Take the average of the faces touching this vertex.=0A=
			sum[0] =3D (sum[0] / (float)count);=0A=
			sum[1] =3D (sum[1] / (float)count);=0A=
			sum[2] =3D (sum[2] / (float)count);=0A=
=0A=
			// Calculate the length of this normal.=0A=
			length =3D sqrt((sum[0] * sum[0]) + (sum[1] * sum[1]) + (sum[2] * =
sum[2]));=0A=
			=0A=
			// Get an index to the vertex location in the height map array.=0A=
			index =3D (j * m_terrainHeight) + i;=0A=
=0A=
			// Normalize the final shared normal for this vertex and store it in =
the height map array.=0A=
			m_heightMap[index].nx =3D (sum[0] / length);=0A=
			m_heightMap[index].ny =3D (sum[1] / length);=0A=
			m_heightMap[index].nz =3D (sum[2] / length);=0A=
		}=0A=
	}=0A=
=0A=
	// Release the temporary normals.=0A=
	delete [] normals;=0A=
	normals =3D 0;=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainClass::ShutdownHeightMap()=0A=
{=0A=
	if(m_heightMap)=0A=
	{=0A=
		delete [] m_heightMap;=0A=
		m_heightMap =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void TerrainClass::CalculateTextureCoordinates()=0A=
{=0A=
	int incrementCount, i, j, tuCount, tvCount;=0A=
	float incrementValue, tuCoordinate, tvCoordinate;=0A=
=0A=
=0A=
	// Calculate how much to increment the texture coordinates by.=0A=
	incrementValue =3D (float)TEXTURE_REPEAT / (float)m_terrainWidth;=0A=
=0A=
	// Calculate how many times to repeat the texture.=0A=
	incrementCount =3D m_terrainWidth / TEXTURE_REPEAT;=0A=
=0A=
	// Initialize the tu and tv coordinate values.=0A=
	tuCoordinate =3D 0.0f;=0A=
	tvCoordinate =3D 1.0f;=0A=
=0A=
	// Initialize the tu and tv coordinate indexes.=0A=
	tuCount =3D 0;=0A=
	tvCount =3D 0;=0A=
=0A=
	// Loop through the entire height map and calculate the tu and tv =
texture coordinates for each vertex.=0A=
	for(j=3D0; j&lt;m_terrainHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;m_terrainWidth; i++)=0A=
		{=0A=
			// Store the texture coordinate in the height map.=0A=
			m_heightMap[(m_terrainHeight * j) + i].tu =3D tuCoordinate;=0A=
			m_heightMap[(m_terrainHeight * j) + i].tv =3D tvCoordinate;=0A=
=0A=
			// Increment the tu texture coordinate by the increment value and =
increment the index by one.=0A=
			tuCoordinate +=3D incrementValue;=0A=
			tuCount++;=0A=
=0A=
			// Check if at the far right end of the texture and if so then start =
at the beginning again.=0A=
			if(tuCount =3D=3D incrementCount)=0A=
			{=0A=
				tuCoordinate =3D 0.0f;=0A=
				tuCount =3D 0;=0A=
			}=0A=
		}=0A=
=0A=
		// Increment the tv texture coordinate by the increment value and =
increment the index by one.=0A=
		tvCoordinate -=3D incrementValue;=0A=
		tvCount++;=0A=
=0A=
		// Check if at the top of the texture and if so then start at the =
bottom again.=0A=
		if(tvCount =3D=3D incrementCount)=0A=
		{=0A=
			tvCoordinate =3D 1.0f;=0A=
			tvCount =3D 0;=0A=
		}=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool TerrainClass::LoadTexture(ID3D11Device* device, WCHAR* filename)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Create the texture object.=0A=
	m_Texture =3D new TextureClass;=0A=
	if(!m_Texture)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the texture object.=0A=
	result =3D m_Texture-&gt;Initialize(device, filename);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainClass::ReleaseTexture()=0A=
{=0A=
	// Release the texture object.=0A=
	if(m_Texture)=0A=
	{=0A=
		m_Texture-&gt;Shutdown();=0A=
		delete m_Texture;=0A=
		m_Texture =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
InitializeBuffers function no longer builds the vertex buffer, index =
buffer, and=20
index array. It only builds the vertex array which is also now a private =

variable in the class so it is named m_vertices instead of just =
vertices.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
TerrainClass::InitializeBuffers(ID3D11Device* device)=0A=
{=0A=
	int index, i, j, index1, index2, index3, index4;=0A=
	float tu, tv;=0A=
=0A=
=0A=
	// Calculate the number of vertices in the terrain mesh.=0A=
	m_vertexCount =3D (m_terrainWidth - 1) * (m_terrainHeight - 1) * 6;=0A=
=0A=
	// Create the vertex array.=0A=
	m_vertices =3D new VertexType[m_vertexCount];=0A=
	if(!m_vertices)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the index to the vertex buffer.=0A=
	index =3D 0;=0A=
=0A=
	// Load the vertex and index array with the terrain data.=0A=
	for(j=3D0; j&lt;(m_terrainHeight-1); j++)=0A=
	{=0A=
		for(i=3D0; i&lt;(m_terrainWidth-1); i++)=0A=
		{=0A=
			index1 =3D (m_terrainHeight * j) + i;          // Bottom left.=0A=
			index2 =3D (m_terrainHeight * j) + (i+1);      // Bottom right.=0A=
			index3 =3D (m_terrainHeight * (j+1)) + i;      // Upper left.=0A=
			index4 =3D (m_terrainHeight * (j+1)) + (i+1);  // Upper right.=0A=
=0A=
			// Upper left.=0A=
			tv =3D m_heightMap[index3].tv;=0A=
=0A=
			// Modify the texture coordinates to cover the top edge.=0A=
			if(tv =3D=3D 1.0f) { tv =3D 0.0f; }=0A=
=0A=
			m_vertices[index].position =3D D3DXVECTOR3(m_heightMap[index3].x, =
m_heightMap[index3].y, m_heightMap[index3].z);=0A=
			m_vertices[index].texture =3D D3DXVECTOR2(m_heightMap[index3].tu, tv);=0A=
			m_vertices[index].normal =3D D3DXVECTOR3(m_heightMap[index3].nx, =
m_heightMap[index3].ny, m_heightMap[index3].nz);=0A=
			index++;=0A=
=0A=
			// Upper right.=0A=
			tu =3D m_heightMap[index4].tu;=0A=
			tv =3D m_heightMap[index4].tv;=0A=
=0A=
			// Modify the texture coordinates to cover the top and right edge.=0A=
			if(tu =3D=3D 0.0f) { tu =3D 1.0f; }=0A=
			if(tv =3D=3D 1.0f) { tv =3D 0.0f; }=0A=
=0A=
			m_vertices[index].position =3D D3DXVECTOR3(m_heightMap[index4].x, =
m_heightMap[index4].y, m_heightMap[index4].z);=0A=
			m_vertices[index].texture =3D D3DXVECTOR2(tu, tv);=0A=
			m_vertices[index].normal =3D D3DXVECTOR3(m_heightMap[index4].nx, =
m_heightMap[index4].ny, m_heightMap[index4].nz);=0A=
			index++;=0A=
=0A=
			// Bottom left.=0A=
			m_vertices[index].position =3D D3DXVECTOR3(m_heightMap[index1].x, =
m_heightMap[index1].y, m_heightMap[index1].z);=0A=
			m_vertices[index].texture =3D D3DXVECTOR2(m_heightMap[index1].tu, =
m_heightMap[index1].tv);=0A=
			m_vertices[index].normal =3D D3DXVECTOR3(m_heightMap[index1].nx, =
m_heightMap[index1].ny, m_heightMap[index1].nz);=0A=
			index++;=0A=
=0A=
			// Bottom left.=0A=
			m_vertices[index].position =3D D3DXVECTOR3(m_heightMap[index1].x, =
m_heightMap[index1].y, m_heightMap[index1].z);=0A=
			m_vertices[index].texture =3D D3DXVECTOR2(m_heightMap[index1].tu, =
m_heightMap[index1].tv);=0A=
			m_vertices[index].normal =3D D3DXVECTOR3(m_heightMap[index1].nx, =
m_heightMap[index1].ny, m_heightMap[index1].nz);=0A=
			index++;=0A=
=0A=
			// Upper right.=0A=
			tu =3D m_heightMap[index4].tu;=0A=
			tv =3D m_heightMap[index4].tv;=0A=
=0A=
			// Modify the texture coordinates to cover the top and right edge.=0A=
			if(tu =3D=3D 0.0f) { tu =3D 1.0f; }=0A=
			if(tv =3D=3D 1.0f) { tv =3D 0.0f; }=0A=
=0A=
			m_vertices[index].position =3D D3DXVECTOR3(m_heightMap[index4].x, =
m_heightMap[index4].y, m_heightMap[index4].z);=0A=
			m_vertices[index].texture =3D D3DXVECTOR2(tu, tv);=0A=
			m_vertices[index].normal =3D D3DXVECTOR3(m_heightMap[index4].nx, =
m_heightMap[index4].ny, m_heightMap[index4].nz);=0A=
			index++;=0A=
=0A=
			// Bottom right.=0A=
			tu =3D m_heightMap[index2].tu;=0A=
=0A=
			// Modify the texture coordinates to cover the right edge.=0A=
			if(tu =3D=3D 0.0f) { tu =3D 1.0f; }=0A=
=0A=
			m_vertices[index].position =3D D3DXVECTOR3(m_heightMap[index2].x, =
m_heightMap[index2].y, m_heightMap[index2].z);=0A=
			m_vertices[index].texture =3D D3DXVECTOR2(tu, m_heightMap[index2].tv);=0A=
			m_vertices[index].normal =3D D3DXVECTOR3(m_heightMap[index2].nx, =
m_heightMap[index2].ny, m_heightMap[index2].nz);=0A=
			index++;=0A=
		}=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">ShutdownBuffers now=20
only releases the vertex array. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">void =
TerrainClass::ShutdownBuffers()=0A=
{=0A=
	// Release the vertex array.=0A=
	if(m_vertices)=0A=
	{=0A=
		delete [] m_vertices;=0A=
		m_vertices =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">GetVertexCount is a=20
new function that returns the number of vertices in the vertex array.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">int =
TerrainClass::GetVertexCount()=0A=
{=0A=
	return m_vertexCount;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
CopyVertexArray=20
function is a new function that allows the QuadTreeClass to copy the =
vertex=20
array from inside the TerrainClass into a vertex list for itself. =
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">void =
TerrainClass::CopyVertexArray(void* vertexList)=0A=
{=0A=
	memcpy(vertexList, m_vertices, sizeof(VertexType) * m_vertexCount);=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrainshaderclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Only =
the header file=20
of the TerrainShaderClass has changed. The SetShaderParameters and =
RenderShader=20
function have been changed to public functions instead of private =
functions.=20
 The reason for this is because the TerrainShaderClass object will need =
to=20
render numerous individual buffers but only set the shader parameters =
once. Just=20
using the normal Render function would require setting the shader =
parameters=20
each render call which would not work well for the quad tree. And =
because of=20
this we have also removed the original Render function since it no =
longer serves=20
any purpose. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrainshaderclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _TERRAINSHADERCLASS_H_=0A=
#define _TERRAINSHADERCLASS_H_=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
#include &lt;d3dx11async.h&gt;=0A=
#include &lt;fstream&gt;=0A=
using namespace std;=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: TerrainShaderClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class TerrainShaderClass=0A=
{=0A=
private:=0A=
	struct MatrixBufferType=0A=
	{=0A=
		D3DXMATRIX world;=0A=
		D3DXMATRIX view;=0A=
		D3DXMATRIX projection;=0A=
	};=0A=
=0A=
	struct LightBufferType=0A=
	{=0A=
		D3DXVECTOR4 ambientColor;=0A=
		D3DXVECTOR4 diffuseColor;=0A=
		D3DXVECTOR3 lightDirection;=0A=
		float padding;=0A=
	};=0A=
=0A=
public:=0A=
	TerrainShaderClass();=0A=
	TerrainShaderClass(const TerrainShaderClass&amp;);=0A=
	~TerrainShaderClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, HWND);=0A=
	void Shutdown();</FONT><FONT color=3D"#aaaaff" face=3D"arial" =
size=3D"2">=0A=
=0A=
	bool SetShaderParameters(ID3D11DeviceContext*, D3DXMATRIX, D3DXMATRIX, =
D3DXMATRIX, D3DXVECTOR4, D3DXVECTOR4, D3DXVECTOR3, =
ID3D11ShaderResourceView*);=0A=
	void RenderShader(ID3D11DeviceContext*, int);</FONT><FONT =
color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
private:=0A=
	bool InitializeShader(ID3D11Device*, HWND, WCHAR*, WCHAR*);=0A=
	void ShutdownShader();=0A=
	void OutputShaderErrorMessage(ID3D10Blob*, HWND, WCHAR*);=0A=
=0A=
private:=0A=
	ID3D11VertexShader* m_vertexShader;=0A=
	ID3D11PixelShader* m_pixelShader;=0A=
	ID3D11InputLayout* m_layout;=0A=
	ID3D11SamplerState* m_sampleState;=0A=
	ID3D11Buffer* m_matrixBuffer;=0A=
	ID3D11Buffer* m_lightBuffer;=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Textclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
TextClass has=20
been modified to render an additional sentence which contains the number =
of=20
terrain triangles being drawn each frame. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: textclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _TEXTCLASS_H_=0A=
#define _TEXTCLASS_H_=0A=
=0A=
=0A=
///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "fontclass.h"=0A=
#include "fontshaderclass.h"=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: TextClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class TextClass=0A=
{=0A=
private:=0A=
	struct SentenceType=0A=
	{=0A=
		ID3D11Buffer *vertexBuffer, *indexBuffer;=0A=
		int vertexCount, indexCount, maxLength;=0A=
		float red, green, blue;=0A=
	};=0A=
=0A=
	struct VertexType=0A=
	{=0A=
		D3DXVECTOR3 position;=0A=
		D3DXVECTOR2 texture;=0A=
	};=0A=
=0A=
public:=0A=
	TextClass();=0A=
	TextClass(const TextClass&amp;);=0A=
	~TextClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, ID3D11DeviceContext*, HWND, int, int, =
D3DXMATRIX);=0A=
	void Shutdown();=0A=
	bool Render(ID3D11DeviceContext*, FontShaderClass*, D3DXMATRIX, =
D3DXMATRIX);=0A=
=0A=
	bool SetVideoCardInfo(char*, int, ID3D11DeviceContext*);=0A=
	bool SetFps(int, ID3D11DeviceContext*);=0A=
	bool SetCpu(int, ID3D11DeviceContext*);=0A=
	bool SetCameraPosition(float, float, float, ID3D11DeviceContext*);=0A=
	bool SetCameraRotation(float, float, float, =
ID3D11DeviceContext*);</FONT><FONT color=3D"#aaaaff" face=3D"arial" =
size=3D"2">=0A=
	bool SetRenderCount(int, ID3D11DeviceContext*);</FONT><FONT =
color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
private:=0A=
	bool InitializeSentence(SentenceType**, int, ID3D11Device*);=0A=
	bool UpdateSentence(SentenceType*, char*, int, int, float, float, =
float, ID3D11DeviceContext*);=0A=
	void ReleaseSentence(SentenceType**);=0A=
	bool RenderSentence(SentenceType*, ID3D11DeviceContext*, =
FontShaderClass*, D3DXMATRIX, D3DXMATRIX);=0A=
=0A=
private:=0A=
	int m_screenWidth, m_screenHeight;=0A=
	D3DXMATRIX m_baseViewMatrix;=0A=
	FontClass* m_Font;=0A=
	SentenceType *m_sentence1, *m_sentence2, *m_sentence3, *m_sentence4, =
*m_sentence5;</FONT><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">=0A=
	SentenceType *m_sentence6, *m_sentence7, *m_sentence8, *m_sentence9, =
*m_sentence10, *m_sentence11;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Textclass.cpp</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">I =
will just cover=20
the functions in the TextClass that have been modified/added since the =
previous=20
tutorial. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
/////////////////=0A=
// Filename: textclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
//////=0A=
#include "textclass.h"=0A=
=0A=
=0A=
TextClass::TextClass()=0A=
{=0A=
	m_Font =3D 0;=0A=
	m_sentence1 =3D 0;=0A=
	m_sentence2 =3D 0;=0A=
	m_sentence3 =3D 0;=0A=
	m_sentence4 =3D 0;=0A=
	m_sentence5 =3D 0;=0A=
	m_sentence6 =3D 0;=0A=
	m_sentence7 =3D 0;=0A=
	m_sentence8 =3D 0;=0A=
	m_sentence9 =3D 0;=0A=
	m_sentence10 =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the 11th=20
sentence to null in the class constructor. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	m_sentence11 =3D =
0;</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
}=0A=
=0A=
=0A=
bool TextClass::Initialize(ID3D11Device* device, ID3D11DeviceContext* =
deviceContext, HWND hwnd, int screenWidth, int screenHeight, =0A=
			   D3DXMATRIX baseViewMatrix)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Store the screen width and height for calculating pixel location =
during the sentence updates.=0A=
	m_screenWidth =3D screenWidth;=0A=
	m_screenHeight =3D screenHeight;=0A=
=0A=
	// Store the base view matrix for 2D text rendering.=0A=
	m_baseViewMatrix =3D baseViewMatrix;=0A=
=0A=
	// Create the font object.=0A=
	m_Font =3D new FontClass;=0A=
	if(!m_Font)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the font object.=0A=
	result =3D m_Font-&gt;Initialize(device, "../Engine/data/fontdata.txt", =
L"../Engine/data/font.dds");=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the font object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the first sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence1, 150, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the second sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence2, 32, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the third sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence3, 16, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the fourth sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence4, 16, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the fifth sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence5, 16, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the sixth sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence6, 16, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the seventh sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence7, 16, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the eighth sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence8, 16, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the ninth sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence9, 16, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the tenth sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence10, 16, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the=20
sentence that will be used to render the terrain triangle render count.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Initialize =
the eleventh sentence.=0A=
	result =3D InitializeSentence(&amp;m_sentence11, 32, device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TextClass::Shutdown()=0A=
{=0A=
	// Release the font object.=0A=
	if(m_Font)=0A=
	{=0A=
		m_Font-&gt;Shutdown();=0A=
		delete m_Font;=0A=
		m_Font =3D 0;=0A=
	}=0A=
=0A=
	// Release the sentences.=0A=
	ReleaseSentence(&amp;m_sentence1);=0A=
	ReleaseSentence(&amp;m_sentence2);=0A=
	ReleaseSentence(&amp;m_sentence3);=0A=
	ReleaseSentence(&amp;m_sentence4);=0A=
	ReleaseSentence(&amp;m_sentence5);=0A=
	ReleaseSentence(&amp;m_sentence6);=0A=
	ReleaseSentence(&amp;m_sentence7);=0A=
	ReleaseSentence(&amp;m_sentence8);=0A=
	ReleaseSentence(&amp;m_sentence9);=0A=
	ReleaseSentence(&amp;m_sentence10);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the new=20
sentence in the Shutdown function. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
ReleaseSentence(&amp;m_sentence11);</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool TextClass::Render(ID3D11DeviceContext* deviceContext, =
FontShaderClass* FontShader, D3DXMATRIX worldMatrix, D3DXMATRIX =
orthoMatrix)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Draw the sentences.=0A=
	result =3D RenderSentence(m_sentence1, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence2, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence3, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence4, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence5, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence6, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence7, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence8, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence9, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	result =3D RenderSentence(m_sentence10, deviceContext, FontShader, =
worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Render the terrain=20
triangle count string. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	result =3D =
RenderSentence(m_sentence11, deviceContext, FontShader, worldMatrix, =
orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">SetRenderCount=20
prepares the sentence for rendering the number of terrain triangles that =
are=20
currently being rendered. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
TextClass::SetRenderCount(int count, ID3D11DeviceContext* deviceContext)=0A=
{=0A=
	char tempString[16];=0A=
	char renderString[32];=0A=
	bool result;=0A=
=0A=
=0A=
	// Truncate the render count if it gets to large to prevent a buffer =
overflow.=0A=
	if(count &gt; 999999999)=0A=
	{=0A=
		count =3D 999999999;=0A=
	}=0A=
=0A=
	// Convert the cpu integer to string format.=0A=
	_itoa_s(count, tempString, 10);=0A=
=0A=
	// Setup the cpu string.=0A=
	strcpy_s(renderString, "Render Count: ");=0A=
	strcat_s(renderString, tempString);=0A=
=0A=
	// Update the sentence vertex buffer with the new string information.=0A=
	result =3D UpdateSentence(m_sentence11, renderString, 10, 290, 0.0f, =
1.0f, 0.0f, deviceContext);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Applicationclass.h</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: applicationclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _APPLICATIONCLASS_H_=0A=
#define _APPLICATIONCLASS_H_=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
const bool FULL_SCREEN =3D true;=0A=
const bool VSYNC_ENABLED =3D true;=0A=
const float SCREEN_DEPTH =3D 1000.0f;=0A=
const float SCREEN_NEAR =3D 0.1f;=0A=
=0A=
=0A=
///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "inputclass.h"=0A=
#include "d3dclass.h"=0A=
#include "cameraclass.h"=0A=
#include "terrainclass.h"=0A=
#include "timerclass.h"=0A=
#include "positionclass.h"=0A=
#include "fpsclass.h"=0A=
#include "cpuclass.h"=0A=
#include "fontshaderclass.h"=0A=
#include "textclass.h"=0A=
#include "terrainshaderclass.h"=0A=
#include "lightclass.h"=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
include the new=20
QuadTreeClass as well as the FrustumClass header files. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">#include =
"frustumclass.h"=0A=
#include "quadtreeclass.h"</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: ApplicationClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class ApplicationClass=0A=
{=0A=
public:=0A=
	ApplicationClass();=0A=
	ApplicationClass(const ApplicationClass&amp;);=0A=
	~ApplicationClass();=0A=
=0A=
	bool Initialize(HINSTANCE, HWND, int, int);=0A=
	void Shutdown();=0A=
	bool Frame();=0A=
=0A=
private:=0A=
	bool HandleInput(float);=0A=
	bool RenderGraphics();=0A=
=0A=
private:=0A=
	InputClass* m_Input;=0A=
	D3DClass* m_Direct3D;=0A=
	CameraClass* m_Camera;=0A=
	TerrainClass* m_Terrain;=0A=
	TimerClass* m_Timer;=0A=
	PositionClass* m_Position;=0A=
	FpsClass* m_Fps;=0A=
	CpuClass* m_Cpu;=0A=
	FontShaderClass* m_FontShader;=0A=
	TextClass* m_Text;=0A=
	TerrainShaderClass* m_TerrainShader;=0A=
	LightClass* m_Light;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
create two new=20
objects for the quad tree and the frustum. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	FrustumClass* =
m_Frustum;=0A=
	QuadTreeClass* m_QuadTree;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Applicationclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: applicationclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "applicationclass.h"=0A=
=0A=
=0A=
ApplicationClass::ApplicationClass()=0A=
{=0A=
	m_Input =3D 0;=0A=
	m_Direct3D =3D 0;=0A=
	m_Camera =3D 0;=0A=
	m_Terrain =3D 0;=0A=
	m_Timer =3D 0;=0A=
	m_Position =3D 0;=0A=
	m_Fps =3D 0;=0A=
	m_Cpu =3D 0;=0A=
	m_FontShader =3D 0;=0A=
	m_Text =3D 0;=0A=
	m_TerrainShader =3D 0;=0A=
	m_Light =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
QuadTreeClass=20
and FrustumClass objects are initialized to null in the class =
constructor.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	m_Frustum =3D 0;=0A=
	m_QuadTree =3D 0;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
}=0A=
=0A=
=0A=
ApplicationClass::ApplicationClass(const ApplicationClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
ApplicationClass::~ApplicationClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::Initialize(HINSTANCE hinstance, HWND hwnd, int =
screenWidth, int screenHeight)=0A=
{=0A=
	bool result;=0A=
	float cameraX, cameraY, cameraZ;=0A=
	D3DXMATRIX baseViewMatrix;=0A=
	char videoCard[128];=0A=
	int videoMemory;=0A=
=0A=
	=0A=
	// Create the input object.  The input object will be used to handle =
reading the keyboard and mouse input from the user.=0A=
	m_Input =3D new InputClass;=0A=
	if(!m_Input)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the input object.=0A=
	result =3D m_Input-&gt;Initialize(hinstance, hwnd, screenWidth, =
screenHeight);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the input object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the Direct3D object.=0A=
	m_Direct3D =3D new D3DClass;=0A=
	if(!m_Direct3D)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the Direct3D object.=0A=
	result =3D m_Direct3D-&gt;Initialize(screenWidth, screenHeight, =
VSYNC_ENABLED, hwnd, FULL_SCREEN, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize DirectX 11.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the camera object.=0A=
	m_Camera =3D new CameraClass;=0A=
	if(!m_Camera)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize a base view matrix with the camera for 2D user interface =
rendering.=0A=
	m_Camera-&gt;SetPosition(0.0f, 0.0f, -1.0f);=0A=
	m_Camera-&gt;Render();=0A=
	m_Camera-&gt;GetViewMatrix(baseViewMatrix);=0A=
=0A=
	// Set the initial position of the camera.=0A=
	cameraX =3D 50.0f;=0A=
	cameraY =3D 2.0f;=0A=
	cameraZ =3D -7.0f;=0A=
=0A=
	m_Camera-&gt;SetPosition(cameraX, cameraY, cameraZ);=0A=
=0A=
	// Create the terrain object.=0A=
	m_Terrain =3D new TerrainClass;=0A=
	if(!m_Terrain)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the terrain object.=0A=
	result =3D m_Terrain-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
"../Engine/data/heightmap01.bmp", L"../Engine/data/dirt01.dds");=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the terrain object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the timer object.=0A=
	m_Timer =3D new TimerClass;=0A=
	if(!m_Timer)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the timer object.=0A=
	result =3D m_Timer-&gt;Initialize();=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the timer object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the position object.=0A=
	m_Position =3D new PositionClass;=0A=
	if(!m_Position)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Set the initial position of the viewer to the same as the initial =
camera position.=0A=
	m_Position-&gt;SetPosition(cameraX, cameraY, cameraZ);=0A=
=0A=
	// Create the fps object.=0A=
	m_Fps =3D new FpsClass;=0A=
	if(!m_Fps)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the fps object.=0A=
	m_Fps-&gt;Initialize();=0A=
=0A=
	// Create the cpu object.=0A=
	m_Cpu =3D new CpuClass;=0A=
	if(!m_Cpu)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the cpu object.=0A=
	m_Cpu-&gt;Initialize();=0A=
=0A=
	// Create the font shader object.=0A=
	m_FontShader =3D new FontShaderClass;=0A=
	if(!m_FontShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the font shader object.=0A=
	result =3D m_FontShader-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the font shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the text object.=0A=
	m_Text =3D new TextClass;=0A=
	if(!m_Text)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the text object.=0A=
	result =3D m_Text-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
m_Direct3D-&gt;GetDeviceContext(), hwnd, screenWidth, screenHeight, =
baseViewMatrix);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the text object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Retrieve the video card information.=0A=
	m_Direct3D-&gt;GetVideoCardInfo(videoCard, videoMemory);=0A=
=0A=
	// Set the video card information in the text object.=0A=
	result =3D m_Text-&gt;SetVideoCardInfo(videoCard, videoMemory, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not set video card info in the text object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the terrain shader object.=0A=
	m_TerrainShader =3D new TerrainShaderClass;=0A=
	if(!m_TerrainShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the terrain shader object.=0A=
	result =3D m_TerrainShader-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the terrain shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the light object.=0A=
	m_Light =3D new LightClass;=0A=
	if(!m_Light)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the light object.=0A=
	m_Light-&gt;SetAmbientColor(0.05f, 0.05f, 0.05f, 1.0f);=0A=
	m_Light-&gt;SetDiffuseColor(1.0f, 1.0f, 1.0f, 1.0f);=0A=
	m_Light-&gt;SetDirection(-0.5f, -1.0f, 0.0f);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create the=20
FrustumClass object. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
frustum object.=0A=
	m_Frustum =3D new FrustumClass;=0A=
	if(!m_Frustum)=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the new QuadTreeClass object. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
quad tree object.=0A=
	m_QuadTree =3D new QuadTreeClass;=0A=
	if(!m_QuadTree)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the quad tree object.=0A=
	result =3D m_QuadTree-&gt;Initialize(m_Terrain, =
m_Direct3D-&gt;GetDevice());=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the quad tree object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
	=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void ApplicationClass::Shutdown()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Release the quad=20
tree and frustum objects in the Shutdown function. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Release the =
quad tree object.=0A=
	if(m_QuadTree)=0A=
	{=0A=
		m_QuadTree-&gt;Shutdown();=0A=
		delete m_QuadTree;=0A=
		m_QuadTree =3D 0;=0A=
	}=0A=
=0A=
	// Release the frustum object.=0A=
	if(m_Frustum)=0A=
	{=0A=
		delete m_Frustum;=0A=
		m_Frustum =3D 0;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	// Release the light object.=0A=
	if(m_Light)=0A=
	{=0A=
		delete m_Light;=0A=
		m_Light =3D 0;=0A=
	}=0A=
=0A=
	// Release the terrain shader object.=0A=
	if(m_TerrainShader)=0A=
	{=0A=
		m_TerrainShader-&gt;Shutdown();=0A=
		delete m_TerrainShader;=0A=
		m_TerrainShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the text object.=0A=
	if(m_Text)=0A=
	{=0A=
		m_Text-&gt;Shutdown();=0A=
		delete m_Text;=0A=
		m_Text =3D 0;=0A=
	}=0A=
=0A=
	// Release the font shader object.=0A=
	if(m_FontShader)=0A=
	{=0A=
		m_FontShader-&gt;Shutdown();=0A=
		delete m_FontShader;=0A=
		m_FontShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the cpu object.=0A=
	if(m_Cpu)=0A=
	{=0A=
		m_Cpu-&gt;Shutdown();=0A=
		delete m_Cpu;=0A=
		m_Cpu =3D 0;=0A=
	}=0A=
=0A=
	// Release the fps object.=0A=
	if(m_Fps)=0A=
	{=0A=
		delete m_Fps;=0A=
		m_Fps =3D 0;=0A=
	}=0A=
=0A=
	// Release the position object.=0A=
	if(m_Position)=0A=
	{=0A=
		delete m_Position;=0A=
		m_Position =3D 0;=0A=
	}=0A=
=0A=
	// Release the timer object.=0A=
	if(m_Timer)=0A=
	{=0A=
		delete m_Timer;=0A=
		m_Timer =3D 0;=0A=
	}=0A=
=0A=
	// Release the terrain object.=0A=
	if(m_Terrain)=0A=
	{=0A=
		m_Terrain-&gt;Shutdown();=0A=
		delete m_Terrain;=0A=
		m_Terrain =3D 0;=0A=
	}=0A=
=0A=
	// Release the camera object.=0A=
	if(m_Camera)=0A=
	{=0A=
		delete m_Camera;=0A=
		m_Camera =3D 0;=0A=
	}=0A=
=0A=
	// Release the Direct3D object.=0A=
	if(m_Direct3D)=0A=
	{=0A=
		m_Direct3D-&gt;Shutdown();=0A=
		delete m_Direct3D;=0A=
		m_Direct3D =3D 0;=0A=
	}=0A=
=0A=
	// Release the input object.=0A=
	if(m_Input)=0A=
	{=0A=
		m_Input-&gt;Shutdown();=0A=
		delete m_Input;=0A=
		m_Input =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::Frame()=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Read the user input.=0A=
	result =3D m_Input-&gt;Frame();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
	=0A=
	// Check if the user pressed escape and wants to exit the application.=0A=
	if(m_Input-&gt;IsEscapePressed() =3D=3D true)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Update the system stats.=0A=
	m_Timer-&gt;Frame();=0A=
	m_Fps-&gt;Frame();=0A=
	m_Cpu-&gt;Frame();=0A=
=0A=
	// Update the FPS value in the text object.=0A=
	result =3D m_Text-&gt;SetFps(m_Fps-&gt;GetFps(), =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
	=0A=
	// Update the CPU usage value in the text object.=0A=
	result =3D m_Text-&gt;SetCpu(m_Cpu-&gt;GetCpuPercentage(), =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Do the frame input processing.=0A=
	result =3D HandleInput(m_Timer-&gt;GetTime());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Render the graphics.=0A=
	result =3D RenderGraphics();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return result;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::HandleInput(float frameTime)=0A=
{=0A=
	bool keyDown, result;=0A=
	float posX, posY, posZ, rotX, rotY, rotZ;=0A=
=0A=
=0A=
	// Set the frame time for calculating the updated position.=0A=
	m_Position-&gt;SetFrameTime(frameTime);=0A=
=0A=
	// Handle the input.=0A=
	keyDown =3D m_Input-&gt;IsLeftPressed();=0A=
	m_Position-&gt;TurnLeft(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsRightPressed();=0A=
	m_Position-&gt;TurnRight(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsUpPressed();=0A=
	m_Position-&gt;MoveForward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsDownPressed();=0A=
	m_Position-&gt;MoveBackward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsAPressed();=0A=
	m_Position-&gt;MoveUpward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsZPressed();=0A=
	m_Position-&gt;MoveDownward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsPgUpPressed();=0A=
	m_Position-&gt;LookUpward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsPgDownPressed();=0A=
	m_Position-&gt;LookDownward(keyDown);=0A=
	=0A=
	// Get the view point position/rotation.=0A=
	m_Position-&gt;GetPosition(posX, posY, posZ);=0A=
	m_Position-&gt;GetRotation(rotX, rotY, rotZ);=0A=
=0A=
	// Set the position of the camera.=0A=
	m_Camera-&gt;SetPosition(posX, posY, posZ);=0A=
	m_Camera-&gt;SetRotation(rotX, rotY, rotZ);=0A=
=0A=
	// Update the position values in the text object.=0A=
	result =3D m_Text-&gt;SetCameraPosition(posX, posY, posZ, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Update the rotation values in the text object.=0A=
	result =3D m_Text-&gt;SetCameraRotation(rotX, rotY, rotZ, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::RenderGraphics()=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, projectionMatrix, orthoMatrix;=0A=
	bool result;=0A=
=0A=
=0A=
	// Clear the scene.=0A=
	m_Direct3D-&gt;BeginScene(0.0f, 0.0f, 0.0f, 1.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world, view, projection, and ortho matrices from the camera =
and Direct3D objects.=0A=
	m_Direct3D-&gt;GetWorldMatrix(worldMatrix);=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_Direct3D-&gt;GetProjectionMatrix(projectionMatrix);=0A=
	m_Direct3D-&gt;GetOrthoMatrix(orthoMatrix);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Construct the=20
frustum based on the view and projection matrix. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Construct the =
frustum.=0A=
	m_Frustum-&gt;ConstructFrustum(SCREEN_DEPTH, projectionMatrix, =
viewMatrix);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Set =
the terrain=20
shader parameters once before rendering each of the individual nodes in =
the quad=20
tree. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Set the =
terrain shader parameters that it will use for rendering.=0A=
	result =3D =
m_TerrainShader-&gt;SetShaderParameters(m_Direct3D-&gt;GetDeviceContext()=
, worldMatrix, viewMatrix, projectionMatrix, =
m_Light-&gt;GetAmbientColor(), =0A=
						      m_Light-&gt;GetDiffuseColor(), m_Light-&gt;GetDirection(), =
m_Terrain-&gt;GetTexture());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
render all the=20
visible nodes in the quad tree using the frustum object for culling and =
the=20
terrain shader for drawing. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Render the =
terrain using the quad tree and terrain shader.=0A=
	m_QuadTree-&gt;Render(m_Frustum, m_Direct3D-&gt;GetDeviceContext(), =
m_TerrainShader);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Set =
the number of=20
triangles from the quad tree that were drawn in the TextClass object.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Set the =
number of rendered terrain triangles since some were culled.=0A=
	result =3D m_Text-&gt;SetRenderCount(m_QuadTree-&gt;GetDrawCount(), =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	// Turn off the Z buffer to begin all 2D rendering.=0A=
	m_Direct3D-&gt;TurnZBufferOff();=0A=
		=0A=
	// Turn on the alpha blending before rendering the text.=0A=
	m_Direct3D-&gt;TurnOnAlphaBlending();=0A=
=0A=
	// Render the text user interface elements.=0A=
	result =3D m_Text-&gt;Render(m_Direct3D-&gt;GetDeviceContext(), =
m_FontShader, worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn off alpha blending after rendering the text.=0A=
	m_Direct3D-&gt;TurnOffAlphaBlending();=0A=
=0A=
	// Turn the Z buffer back on now that all 2D rendering has completed.=0A=
	m_Direct3D-&gt;TurnZBufferOn();=0A=
=0A=
	// Present the rendered scene to the screen.=0A=
	m_Direct3D-&gt;EndScene();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Summary</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
only visible=20
portions of the terrain are rendered and the rest is culled through use =
of the=20
quad tree. The count of triangles that are rendered is also now =
displayed.=20
</FONT></P>
<P align=3D"left"><IMG width=3D"427" height=3D"427" =
src=3D"http://web.archive.org/web/20140722205338im_/http://rastertek.com/=
pic0132.gif"=20
border=3D"0"></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>To Do=20
Exercises</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">1. =
Recompile and run=20
the program.  When you move around the terrain you should see the render =
count=20
changing since only the visible triangles from the terrain are drawn =
now.=20
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">2. =
Change the render=20
count to a render/cull percentage instead. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">3. =
Create a=20
DebugTree object which draws yellow lines to represent the individual =
quads just=20
like the pictures at the top of the tutorial. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">4. =
Modify the=20
MAX_TRIANGLES global. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">5. =
Research other=20
methods of space partitioning such as oct trees, BSP trees, and portals. =

</FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>Source=20
Code</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Visual Studio 2010=20
Project: <A =
href=3D"http://web.archive.org/web/20140722205338/http://rastertek.com/te=
rtut05.zip">tertut05.zip</A></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Source Only: <A=20
href=3D"http://web.archive.org/web/20140722205338/http://rastertek.com/te=
rsrc05.zip">tersrc05.zip</A></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Executable Only: <A=20
href=3D"http://web.archive.org/web/20140722205338/http://rastertek.com/te=
rexe05.zip">terexe05.zip</A></FONT></P>
<P align=3D"left"><IMG width=3D"800" height=3D"1" =
src=3D"http://web.archive.org/web/20140722205338im_/http://rastertek.com/=
pic1002.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#cccccc" face=3D"Arial, Helvetica, =
sans-serif" size=3D"2"><A=20
href=3D"http://web.archive.org/web/20140722205338/http://rastertek.com/tu=
tindex.html">Back=20
to Tutorial Index</A></FONT></P></BODY></HTML><!--=0A=
     FILE ARCHIVED ON 20:53:38 Jul 22, 2014 AND RETRIEVED FROM THE=0A=
     INTERNET ARCHIVE ON 12:31:21 Aug 7, 2014.=0A=
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.=0A=
=0A=
     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.=0A=
     SECTION 108(a)(3)).=0A=
-->

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wayback-toolbar-logo.png

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

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wm_tb_prv_on.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMZJREFUeNqU07EKQWEUwHEuSSaLkicgg3TZzCySvIKk2GVgJZmsBg9g
8QK8gcHoASwGNoMS/l+db6Au3zn1W279b+fe796w779Cyimi7ymCFBbYox51CGLoYIS0XHv+C2uY
ynofExRmJWgG3fE7TGKMHuK/VrFhRJ7DRBmXN2XCBibIa87Ek5US2sM04Ro5DHDRhGbumMu6Szxc
QztndFHGVhPaOaCKFo6a0Iz5+jcoYYira2jnhhkKWNlO83ec0EYFu7cAAwCVABzGI3/GxAAAAABJ
RU5ErkJggg==

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wm_tb_nxt_off.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMhJREFUeNqU0s8KAUEcwPHBJjm5KHkCVy/BRZKnUMpBuXKmHGz+pDbl
CVwdOCoH5U8pD+DiwM1BSb5TO7WHjfn96tPW1reZndnI1Jt7SqkR9kowUZSwwwBpSfjxnw2cUEfc
JgxOBkNsUZSEZvJYYoGcJDRT8Q+tj5Qk1JNAE2fUELMNzWQxwRFlSWgmqXfhCII7unDxsgnfmKGN
m3n5L1yhhYPtdVxQRSEsClvxgZ7/9zx/bcUJrKq/o4OrzUnpcI0xNpI7+QowAGDEIqP9eOV2AAAA
AElFTkSuQmCC

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/jsp/graph.jsp?graphdata=475_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000010000101_2012:-1:000000001100_2013:-1:000010000000_2014:6:000000100000

iVBORw0KGgoAAAANSUhEUgAAAdsAAAAbCAYAAAA05SU0AAABSUlEQVR42u3VSwqDMBRA0bdOxy7H
ocvKUtxD/EAcCC0GEhA9gQwKoce0T26klHJ0XgwGg8FgfNk4kG0NPTeDwWAwnmdsCdgjU32ufG5x
j/Jdv56l5T3+/1bjXLOXmPK+752PQWwZDAZDbMVWbBkMBoMhtmJreBkMBkNsxVZsGQwGgyG2Ystg
MBgMsRVbw8tgMBhiK7Ziy2AwGAyxFVsGg8FgiK3YGl4Gg8EQW7EVWwaDwWCIrdh6QRgMBkNsxVZs
GQwGgyG2YstgMBgMsRVbw8tgMBhiK7Ziy2AwGAyxFVsGg8FgiK3YGl4Gg8EQW7EVWwaDwWCIrdh6
QRgMBkNsxdbwMhgMhtiKrdgyGAwGQ2zF1vAyGAyG2Iqt2DIYDAZDbMWWwWAwGGL76thG58VgMBiM
RxolcrXnztg2eNR82T3v0ez/KLG9e34Frq3So/BIMcoAAAAASUVORK5CYII=

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/transp-yellow-pixel.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP4/5/hPwAH/QL+ecrX
pAAAAABJRU5ErkJggg==

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/transp-red-pixel.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A
/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAA1JREFUCNdjeMPQ8x8ABcwCeP+6qaAAAAAA
SUVORK5CYII=

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722205338im_/http://rastertek.com/pic1001.gif

R0lGODlhIAMBAPcAAAAAAP///wht//7+//b5//z9//L3//f6/wlu/wlt/wtu/wxv/w1w/w9x/xFy
/xN0/xNz/xV0/xZ1/xd2/xl3/xp3/xt4/xx5/x16/x96/yB7/yF8/yJ9/yR9/yV+/yZ//yeA/ymA
/yqB/yuC/y2D/y6D/y+E/zCF/zKG/zSH/zWI/zeI/ziJ/zmK/zuL/z2M/z6N/z+O/0GP/0KP/0OQ
/0SR/0aR/0eS/0iT/0mU/0uU/0yV/02W/0+X/1CY/1KZ/1Oa/1Sa/1ab/1ec/1md/1qd/1ue/1yf
/1+g/2Ch/2Gi/2Ki/2Sj/2Wk/2al/2il/2mm/2qn/2uo/22o/26p/2+q/3Cr/3Os/3St/3Wu/3eu
/3iv/3mw/3qx/3yx/32y/3+z/4G0/4K1/4O2/4W3/4a3/4e4/4i5/4q6/4y7/428/4+9/5C9/5G+
/5K//5TA/5bB/5fC/5jC/5rD/5vE/57F/5/G/6DH/6PI/6TJ/6XK/6fL/6jL/6nM/6rN/6zO/67P
/6/Q/7HR/7LR/7PS/7TT/7fU/7jV/7rW/7zX/73Y/7/Z/8Ha/8Lb/8Xc/8bd/8fe/8nf/8zh/87i
/9Dj/9Hk/9Pl/9fn/9no/9rp/93r/97r/9/s/+Lu/+Tv/+jx/+ny/+vz/+71//D2/4m6/5PA/5zF
/6HI/6vO/7nW/7/a/8Pc/8rg/83i/9Tm/9vq/+Dt/+Hu/+Xw/+fx/+z0//P4//j7/+v0/+/2//T5
//X6//n8//v9//3+/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4ALAAAAAAgAwEA
AAj/AAMIHEiwoEGCAxIO6MWQYYGHD3lJnLirosVdtjJqtHWg4wECIAnoCpmrZK2TKA2oXDmqZUtc
uETJnEmrps1boXKGAsWz56efs4LOkkVUlqejSD11WtopFqynTzlJ3URVk1VNr7K+ysQ1E6avYC+J
HeuqbFlLaC1VWluJklu3k+JOaiWprl1WeFlF2hsJkl9IjwI7Gjx4VaPDjRgpVqxqkeNFiiInmjwZ
keVUqQ5pNsS5c6HPhQiJHkRakOlAqFEDWg3oj+s/qPzI9tOnNh8+e3Lr2b07j288wIGfukOcuB07
dZInN0WnefM50OfImS4nDpzr199o117Kjfc24Nuw/xm/prya8+fTqFePpj0aUmfixzdDv4x9MvjJ
jNm/X4z/MAAGCMaABH5hoBcIdqEgFwwyuMWDWkSYxYRZYGEhFldkqKEVHFpRxYdVUEHFFCRKYaIU
UaSYIhRQPOGiEzA60cSMTTBho41L5KhEEjwmgcSPPx4h5BFGFGlEEUgSoeQQTA4hxJNCBCFlEED8
YOUPPmSZZQ9c9sDDlzzsIKYOZOZgJg5o4nDDmja0WcObNdAgJw0zzCDDnTHkGQMMfMLwwp9/uiDo
oC0UysKhKySqwqKLpuBoCihEGukJlJ5gwqUmlKApCZyO4OmnIoQawqgglFrqB6h6oKqqHbTKwasb
xFgaqwa0apDBrRlgoCsGF/TqqwXAWlDBsBQUW+wEyCYrwbISROBsBA9EGy0E1FYLgQPYZottA9x2
2wAD4IYL7gLkLqDAuegioO666ibgrgDwxivvvPTWG29AADs=

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722205338im_/http://rastertek.com/pic0127.gif

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

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722205338im_/http://rastertek.com/pic0128.gif

R0lGODlh9AF/APcAAAAAAP///xMNEAcDBwMBBwEDAZKSAXt7AWNjAVVVAVJSAU9PAUtLAUlJAUZG
AUNDAUFBATs7ATc3AS0tASgoASQkASEhAR4eARYWAQwMAQYGAgMDAUlHA1VTDUxJC0U/C2RcFmtj
GzUxDyklBXZrHSsmCod5IU1FGTErC8OpPFdMHldNI1tPIF5RI2NUJTo1JS8pFy0nFzMtHDErGy8p
Gi0oGykjFSslFy0nGTYtGzEpGVdJLjMrGykjFyslGTMtITYwJDAnFysjFS0lF1NFLC8nGT81IjEp
GzMrHVJHNFZLOF1JKS8lFVFBJ1pKL11MMUo9J09BKicgFTYtHjsxIVlLNV1POFtNNzApHU1CMEg+
LToyJSohEzktG0EzHzQpGVlHLFZFK04+JzouHQoIBUU3Iz0xH1JCKikhFWFOM1ZGLj4yITovHysj
F19NM0Y5Ji0lGUI2JT4zIy8nG1JFMSojGT81JkI4KS0jFS8lF0k5JCYeEzEnGV9LMR0XD0I1IzMp
G1pJMlhHMUs9Kl9ONlZHM0Y6KicdEVE+JyshFVVCKjYqGxYRCy0jFyEaEUEzIl1JMU49KUo6J1VD
LUY3JS8lGV9LMzYrHV1LNCkhF05ALi0hEy8jFSofEzkrG007Jj0vH19JMVdDLWdQN1tHMVNBLWNO
Nl1JM1VDLzouIS0hFTEkFy8jF11GL1pFLxkTDV1HMVVBLVE+K3RZPk07KSshF19JM1dDL25VPE89
K1lFMUo6KS0jGWZQOVtHM5BxUltINSofFVU/K0UzI19HMVdBLWFJMzkrHllDL0k3J7aKYp54VWpR
OVtFMb6RZ66EXqZ+Wph0UpRxUJBtTodnSYBiRXpdQmJLNYtqTGVNN11HM1I/LVVBL19JNVdDMVlF
My0fEy8hFS0hF2VLNV1FMVU/LV9HM1dBL1lDMTElG2NLN1tFM11HNUIzJj4xJkA0Kg8LCF1FM1M/
Ly0fFS8hF2FHNUUzJkc2Kk05LSofGQMBAQUDAwcFBQMDAwEBAf///yH5BAEAAP8ALAAAAAD0AX8A
AAj/AAEIHEiwoMGDCBMqXMiwocOHEDFcsECxosWLGDNq3Mixo8ePIDdiCEmypMmTKDle8AexpcuX
MGPKnEmzps2bAPxtuFABAoMEDg48gEC0qNGjSJMqXcq0qdOnUJNGMKAgqtWrWLNqlYoAwYIFDiZc
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

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722205338im_/http://rastertek.com/pic0129.gif

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

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722205338im_/http://rastertek.com/pic0131.gif

R0lGODlhJgLIAOYAAAAAAP////Pz8/Dw8O3t7erq6ufn5+Tk5OHh4d7e3tvb29jY2NXV1dLS0s/P
z8zMzMnJycbGxsPDw8DAwL29vbq6ure3t7S0tLGxsa6urqurq6ioqKWlpaKiop+fn5ycnJmZmZaW
lpOTk5CQkI2NjYqKioeHh4SEhIGBgX5+fnt7e3h4eHV1dXJycm9vb2xsbGlpaWZmZmNjY2BgYF1d
XVpaWldXV1RUVFFRUU5OTktLS0hISEVFRUJCQj8/Pzw8PDk5OTY2NjMzMzAwMC0tLSoqKicnJyQk
JCEhIR4eHhsbGxgYGBUVFRISEg8PDwwMDAkJCQYGBgMDA////wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAFMALAAAAAAmAsgAAAf/gACCg4SFhoeIiYqLjI2Oj5CRkpOUlZaXmJmam5ydnp+goaKjpKWm
p6ipqqusra6vsLGys7S1tre4ubq7vL2+v8DBwsPExcbHyMnKy8zNzs/Q0dLT1NXW19jZ2tvc3d7f
4OHi4+Tl5ufo6err7O3u7+UB8vP09QHw+Pn60Pb98/sAAwoEJo9RwYEIEyp8dVBRw4UQI0rs9BBR
xYkYM2pcdNFQx40gQ078SIikyJMoAZoUtDKly5fqWraESbMmOJn3bOrcKQ4nz59AtfkMSrQov5wO
kRpdyrTY0KZQo/by50+q1au2qPbDyrUrqyiQwHodSxZUjwRBBClJO+gGD0I4/xoIKUu3biUnHxDs
GDSiBCEdDqQQokHgBBS7iBMnwnFAxJNBSggwKTRBRqElGRYAUcw5MZMNC34UEuG30JADjwvZKEDi
cOfXXmsUMOEasuRDHFYc+pzAB+zfUpVcaDDkEGlESG4fYhwiNfDnQWEUUCHYUOTJiEiESOSkQ4K9
0MPbPDIhgpFExxM1MXBE0Y4DH5yIn49SCosCLhRdX8Qiw6InIBygA30EakQEBBYgsUh6ikSBgGiL
+JAAB/IVaGFCUaBQAA2M7MdIDRI08gQJBeBw4YkABcFABks0wuAiUjhwgyNALKABdijmuA4UJBxg
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
nLAJGYYiCfPJKLpgn+2Zm4Kyn4iiKP6ZCwAqKMGpn/FJlAY6hJECeyNono6AKZrCKQIpC5CyMJKg
nJFgoZOwKZ2CCxsqoa9IoY0AopIgohkaCyV6KyjKCCoaCSzqhqOy/2ruSQmpgoeQ0CprJguiQiqm
sqCEsKOV4KO1EKQ4KqCTYKSs4ipJeqNDmp9FqipHCqXZMCu1UgkeKgm6wivE4oqpoKWatiAx2ghf
Wgm9IqaoQKZceqaMkKaUsKay4KaU0KWRIKeTQKfVMCzFUgln2SDKcgnNUqaj4KdsmqOVkCzeNgmF
6gqIaixESpyDyiwF4CyQGqaSSqWU2qiS8KjRMC0FUC2XgKeSkC2Gugjc4i2HRC3WAqeNgKrb0i1L
CgqiSqqWYKqRIKuWsKq1+gm3+qqZwKuV4KvQMC7ZaS6TegjpkgnsogImWgnIKp7vuayG0Kzr0i6o
MK2YEKiMgK2X8P+s0UoJ3KqsnMqsdikJ4soM8iKWwqoJ+DKuhCAq/VIK7ZquHQqrjhCvmUCvv4oJ
9zoxm8Cv3cov/3oJAZsJuioJBGsuBqsMAnOumyixh3Awm6Aw8soIEUsw1lqxR2gJGCsKG9uvHWsI
FpswBcChoDCy3VqyhXCymRCyxfAwEcMJCxuiF7MJGsMxn0Czb3mn+voIFpOQjLCzz4YJPmuzQesI
Q6uzG3O0l5C0m3CzK5qzmmC0M2sCRNsIJOMJCMUJKdOzWtsJXdsJX7sJYesJIUO2FIsIZ6sJaStA
Y8sJZcsJb5sJcXtyeosLo2c3qZcUf/s1gWsRnec2gzs2h2s1iev/t6FnuI0rNIsbNpGbOJNbNpUr
OZfbt6qguZT7uFSTuYULuZ4LuKMruKVLuKCbuqeLuKuruK3LuMjTOaobu45Lu7IQO5ZDOZEnO4S7
OLy7u62ju787vMFbOsDbu8c7OrlrvMSLvM2rvM47O89rNY9XCrgbvbWDN4lzeNcLvclbNr67vNIr
vtkbvtj7vZJjvt47vekrvOSLvrZjvYvXvdTrvufLvnBDv8U7vvf7vvXLvP4bwIADwP1bwNtrv+sr
wAdMwAnsCvo7wPzbwBIMvgj8vxFsweVbwfubwQyMwfCrvRTMvhBswB5cwgocwhe8wbHwwAucwiP8
weprwiTcvh2s/8L4C8I0fMI2vMMznL/z+8PcC8Tou7lCLMItPMMvLMMTnMMc7MJHDMManMQ67MNB
XMVD/MRKnMVMDMW0wMIo3MRgzMVO/MViHMY3HMM8vMRUfMVkrMVS/MZqjMOXd8ZRjMVTLMdFrMNw
3MZ3jMZ7nMZ83MN4bMVGHMh2LMh+fMhxnBV5jMSKbMhavMaFvMVu/MiU3Md1DMmAfMmInMmcvMie
LMl6bMnxSwpe/MmRPMhsjMqs/Mei7Mia/MpL7MqqPMmnLMuVHMu1PMqocMu7DMusjMubTMuJrMnE
HMq/PMuknMy5HMzMPMzLXMytnAq+LM3C/MfHXMPYHM3IbM3PvIrNuuzN4tzN5KzNlkzEs/s7x6PO
svu6kuvOnWu7nwvPlkvPmGvPnFvP8ky6+2y6/Yy6+By68/zPrZDP90zQrovQsMvOtcvQoqvQ7wzR
8ezQA03R/GzR/ozRAC3R+qzRrMvRB+3RCS3Se1vSJn3SKJ3SKr3SLN3SLv3SMB3TMj3TNF3TNn3T
OC0JgQAAOw==

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722205338im_/http://rastertek.com/pic0132.gif

R0lGODlhqwGrAfcAAAAAAP///wH/AX1qRWtbPG5dQmlZQHZlS39tU29hTX5qToBsUVtNOmNVQo15
X39nSnplSm1aQ3NfR4VvVG9dRoNtU4dxV3NhSop1WolzWYx3XHVjTXdlT3tpUpF7YXlnUW1dSZN9
Y5V/ZZeBZ39tV2dZR2tdS3tjR1xKNmZTPoNrUIdvVHZhSldIN451WotzWYFrU3djTWZVQo93XXtn
UIVvV5N7YYlzW5d/ZY13X3VjT5F7Y1tNPpN9ZXlnU5V/Z2NVRm5fT2tdTY99aZF/a2ZZS3JaQoZt
U19NO2pWQoFpUYpxV4NrU25aRmNRP4VtVXJeSYdvV1pKOpl+Y31nUXplT4lxWZF4X4tzW2tZRpl/
ZZZ9Y411XYFrVX5pU3VhTV5OPndjT493X4dxWoNtV29dSpqBZ5F5YYVvWZN7Y3tnU3hlUWJSQpyD
apV9ZYt1XolzXXNhTpd/Z35qVo95YmZWRo13YW9eTZF7ZXtpVmpaSnNiUZeBa5F8Z3dmVY15ZYJw
XXloV4VzYXVnWWlTP4FnT1VENINpUYVrU3JcR11LOn5mT3ZfSodtVWJPPolvV41zWotxWX9nUXpj
ToFpU2ZTQo91XYNrVYVtV5V7YpN5YYdvWXtlUXJeS31nU2pXRolxW1dIOpd9ZYtzXY11X4FrV3Vh
T25bSo93YVpLPZF5Y5N7ZYJtWXZjUXJfTpV9Z4RvW5mBaolzX4ZxXXhlU15PQYt1YXpnVZZ/aY13
Y39rWWJTRWZXSWpbTXpeRlRBMX1iS3lfSU49L21WQnZdSH1jTXphS4JnUVFBM4NpU21XRYVrVYdt
V3hhTX1lUXFbSYlvWVZGOItxW39nU41zXYFpVXVfTXdhT491X4NrV5F3YYVtWXljUZN5Y4dvW3tl
U5V7ZYlxXZd9Z4tzX31nVY11YYFrWY93Y5N7Z5B5ZXFgUlpGNn9lUVlHOYNpVV1LPYdtWX1lU4tx
XWFPQYFpV491YWZTRYVtW4ZvXWlXSY11Y4pzYW1bTYVrWQEBAf///yH5BAEAAP8ALAAAAACrAasB
AAj/AAMIHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3MjRIoCPIEOKHEmypMmTKFOqXMmypcuX
MGPKnEmzps2bOHPCFKizp8+fQIMKHUq0qNGjKHkiXcq0qdOnUKNK3RlgqtWrWLNq3ZpVKdevYMOK
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
63rXvO61r3MdEAA7

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722205338im_/http://rastertek.com/pic1002.gif

R0lGODlhIAMBAPcAAAAAAP///wht//7+//b5//z9//L3//f6/wlu/wlt/wtu/wxv/w1w/w9x/xFy
/xN0/xNz/xV0/xZ1/xd2/xl3/xp3/xt4/xx5/x16/x96/yB7/yF8/yJ9/yR9/yV+/yZ//yeA/ymA
/yqB/yuC/y2D/y6D/y+E/zCF/zKG/zSH/zWI/zeI/ziJ/zmK/zuL/z2M/z6N/z+O/0GP/0KP/0OQ
/0SR/0aR/0eS/0iT/0mU/0uU/0yV/02W/0+X/1CY/1KZ/1Oa/1Sa/1ab/1ec/1md/1qd/1ue/1yf
/1+g/2Ch/2Gi/2Ki/2Sj/2Wk/2al/2il/2mm/2qn/2uo/22o/26p/2+q/3Cr/3Os/3St/3Wu/3eu
/3iv/3mw/3qx/3yx/32y/3+z/4G0/4K1/4O2/4W3/4a3/4e4/4i5/4q6/4y7/428/4+9/5C9/5G+
/5K//5TA/5bB/5fC/5jC/5rD/5vE/57F/5/G/6DH/6PI/6TJ/6XK/6fL/6jL/6nM/6rN/6zO/67P
/6/Q/7HR/7LR/7PS/7TT/7fU/7jV/7rW/7zX/73Y/7/Z/8Ha/8Lb/8Xc/8bd/8fe/8nf/8zh/87i
/9Dj/9Hk/9Pl/9fn/9no/9rp/93r/97r/9/s/+Lu/+Tv/+jx/+ny/+vz/+71//D2/4m6/5PA/5zF
/6HI/6vO/7nW/7/a/8Pc/8rg/83i/9Tm/9vq/+Dt/+Hu/+Xw/+fx/+z0//P4//j7/+v0/+/2//T5
//X6//n8//v9//3+/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4ALAAAAAAgAwEA
AAj/AAUIHEiwoMGDAxMoRMCwIUMFECMumLiAgcWLFhto3NjAgcePHiGIHAnhgUmTEVJGkMBSwoSX
MCnIlFmhpoWbFi7o3ImhJ4YMQDNoGKphg1GjHJJ2WOqhadMPUEFIlRqiqoirI7JqJcG1hFcTYE2c
GHsChVmzKdKmUMGW7Yq3LOK2mOuirt0XePHC2Asjht8YMgLPmEGjMI0aiGvYWHyjMY7HOHJI1kF5
h2UemHn02NzDh2fPP0L/ABKkdBAhqIUMWT2EiOsisI3INnKk9hEkuHEn2Z1EyZLfTIIHb0K8iZPj
Tp4ohwIlinPnUqJLmUKdCpUq2KtY2W7livfvWMJj/8lCPouW81vSc1m/vot7L/C/yAdDv36Y+/jF
6B/Dnz+Z/2SUIaAZBJ5hoIGkoKEgGmk02KAaEEK4xoRsVNjGhW24oWEpb3TYIRwgghiHHCTKMceJ
c9Chooqm1OGii3bYcceMM56Cx4035qGjHjzyuMePfPDRx5B+FOkHKn8k+QcgTAISyJNPCiLlIFQS
YmUhWBZiyJZcHuJlKqkgImYiZJKpyJmLpLmIKoy02WYjcDayiiN00vnInZDkCUkkfEbCyp+sSCLo
oK1MYugklCSaaCWMVmLJo5a4Iqmkl1RqKSaYZprJppm84ukrmoSqySakcmIqLKiiGksnrHbiyauw
elgiy6yyzGLrLJ/kCsquvIbiayi30CLssKIUaywuuIyirLIGNOtsLdBGm8u0BFSrS7XVHqDtAbZ0
660tu4Qr7i68lGtuAeii28u66w7g7gABxCvvvPTWO29AADs=

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/css/banner-styles.css

.__wb_overlay {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; border: 0px currentColor !important; border-image: none =
!important; left: 0px; top: 0px; width: 100%; height: 100%; position: =
fixed; z-index: 2147483643 !important; opacity: 0.6; background-color: =
rgb(0, 0, 0); -moz-opacity: 0.6;
}
#__wb_record_overlay_div {
	cursor: wait !important;
}
.__wb_record_content {
	margin: 0px !important; padding: 0px !important; border-radius: 8px; =
left: 50%; top: 50%; position: fixed; z-index: 2147483644 !important; =
opacity: 1; box-shadow: 0px 0px 30px 5px #000; background-color: =
rgb(255, 255, 255) !important; -moz-box-shadow: 0 0 30px 5px #000; =
-webkit-box-shadow: 0 0 30px 5px #000;
}
#__wb_record_content_loader {
	width: 574px !important; height: 355px !important; padding-top: 30px =
!important; margin-top: -177px !important; margin-left: -287px =
!important; cursor: wait !important;
}
#__wb_record_content_done {
	width: 855px !important; height: 355px !important; margin-top: -177px =
!important; margin-left: -427px !important;
}
.__wb_record_content > * {
	margin: auto !important; text-align: center !important; font-family: =
"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
display: block !important;
}
.__wb_record_content > wb_h1 {
	margin: 0px !important; padding: 0px !important; width: auto =
!important; height: auto !important; color: rgb(34, 34, 34) !important; =
line-height: 2em; font-size: 36px !important; font-weight: normal =
!important;
}
.__wb_record_content > wb_p {
	margin: 8px 0px !important; padding: 0px !important; color: rgb(34, 34, =
34) !important; line-height: 2em; font-size: 17px !important;
}
.__wb_record_content > #_wb_logo {
	margin-bottom: 10px !important;
}
.__wb_record_content > #_wb_spinner {
	margin-top: 30px !important; margin-bottom: 30px !important;
}
.__wb_record_content > #_wb_curr_url {
	font-weight: bold !important; text-decoration: underline !important;
}
#__wb_record_content_done > #__wb_link {
	padding: 3px !important; border: 1px solid rgb(170, 170, 170) =
!important; border-image: none !important; width: 80% !important; =
height: auto !important; text-align: center !important; font-size: 20px =
!important;
}
#__wb_record_content_done > #__wb_link:focus {
	border-color: rgb(66, 139, 202) !important; outline: 0px !important;
}
#__wb_record_content_done > #__wb_donate_close {
	margin: 0px !important; padding: 8px 8px 0px 0px !important; width: =
auto !important; font-size: 18px !important; float: right; display: =
inline-block;
}
#__wb_donate_close > #__wb_record_done_close {
	vertical-align: bottom !important; display: inline-block; cursor: =
pointer !important;
}
#__wb_record_content_done > #__wb_donate_close a {
	color: rgb(66, 139, 202) !important;
}
#__wb_record_content_done > #__wb_donate_close a:link {
	color: rgb(66, 139, 202) !important; text-decoration: none !important; =
margin-right: 16px !important;
}
#__wb_record_content_done > #__wb_donate_close a:visited {
	color: rgb(66, 139, 202) !important;
}
#__wb_record_content_done > #__wb_donate_close a:hover {
	color: rgb(0, 177, 247) !important;
}
.__wb_banner_div {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; width: inherit !important; z-index: 2147483640 !important;
}
#__wb_spinningSquaresG {
	margin: 30px 0px 30px 160px !important; padding: 0px !important; =
border-radius: 0px !important; border: 0px currentColor !important; =
border-image: none !important; width: 240px; height: 20px; position: =
relative;
}
.__wb_spinningSquaresG {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; border: 0px currentColor !important; border-image: none =
!important; top: 0px; width: 22px; height: 22px; position: absolute; =
transform: scale(0.3); animation-name: bounce_spinningSquaresG; =
animation-duration: 1.9s; animation-iteration-count: infinite; =
background-color: rgb(0, 0, 0); -moz-animation-name: =
bounce_spinningSquaresG; -moz-animation-duration: 1.9s; =
-moz-animation-iteration-count: infinite; -moz-animation-direction: =
linear; -moz-transform: scale(.3); -webkit-animation-name: =
bounce_spinningSquaresG; -webkit-animation-duration: 1.9s; =
-webkit-animation-iteration-count: infinite; =
-webkit-animation-direction: linear; -webkit-transform: scale(.3); =
-o-animation-name: bounce_spinningSquaresG; -o-animation-duration: 1.9s; =
-o-animation-iteration-count: infinite; -o-animation-direction: linear; =
-o-transform: scale(.3);
}
#__wb_spinningSquaresG_1 {
	left: 0px; animation-delay: 0.76s; -moz-animation-delay: 0.76s; =
-webkit-animation-delay: 0.76s; -o-animation-delay: 0.76s;
}
#__wb_spinningSquaresG_2 {
	left: 30px; animation-delay: 0.95s; -moz-animation-delay: 0.95s; =
-webkit-animation-delay: 0.95s; -o-animation-delay: 0.95s;
}
#__wb_spinningSquaresG_3 {
	left: 60px; animation-delay: 1.14s; -moz-animation-delay: 1.14s; =
-webkit-animation-delay: 1.14s; -o-animation-delay: 1.14s;
}
#__wb_spinningSquaresG_4 {
	left: 90px; animation-delay: 1.33s; -moz-animation-delay: 1.33s; =
-webkit-animation-delay: 1.33s; -o-animation-delay: 1.33s;
}
#__wb_spinningSquaresG_5 {
	left: 120px; animation-delay: 1.52s; -moz-animation-delay: 1.52s; =
-webkit-animation-delay: 1.52s; -o-animation-delay: 1.52s;
}
#__wb_spinningSquaresG_6 {
	left: 150px; animation-delay: 1.71s; -moz-animation-delay: 1.71s; =
-webkit-animation-delay: 1.71s; -o-animation-delay: 1.71s;
}
#__wb_spinningSquaresG_7 {
	left: 180px; animation-delay: 1.9s; -moz-animation-delay: 1.9s; =
-webkit-animation-delay: 1.9s; -o-animation-delay: 1.9s;
}
#__wb_spinningSquaresG_8 {
	left: 210px; animation-delay: 2.09s; -moz-animation-delay: 2.09s; =
-webkit-animation-delay: 2.09s; -o-animation-delay: 2.09s;
}

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/analytics.js

var archive_analytics =3D {=0A=
    startTime: new Date(),=0A=
    img_src: "//analytics.archive.org/0.gif",=0A=
    values: { service: 'wb' },=0A=
    =0A=
    onload_func: function() {=0A=
	var now =3D new Date();=0A=
	var loadtime =3D now - archive_analytics.startTime;=0A=
=0A=
	var v =3D archive_analytics.values;=0A=
	v.loadtime =3D loadtime;=0A=
	v.timediff =3D -(now.getTimezoneOffset()/60);=0A=
	v.locale =3D archive_analytics.get_locale();=0A=
	// if no referrer set '-' as referrer=0A=
	v.referrer =3D document.referrer || '-';=0A=
=0A=
        var string =3D archive_analytics.format_bug(v);=0A=
        var loadtime_img =3D new Image(100,25);=0A=
        loadtime_img.src =3D archive_analytics.img_src + "?" + string;=0A=
    },=0A=
    format_bug: function(values) {=0A=
        var ret =3D ['version=3D2'], count =3D 2;=0A=
        =0A=
        for (var data in values) {=0A=
            ret.push(encodeURIComponent(data) + "=3D" + =
encodeURIComponent(values[data]));=0A=
            count =3D count + 1;=0A=
        }=0A=
        ret.push('count=3D' + count);=0A=
        return ret.join("&");=0A=
    },=0A=
    get_locale: function() {=0A=
        if (navigator) {=0A=
	    return navigator.language || navigator.browserLanguage ||=0A=
		navigator.systemLanguage || navigator.userLanguage || '';=0A=
        }=0A=
        return '';=0A=
    },=0A=
    get_cookie: function(name) {=0A=
      var parts =3D document.cookie.split(name + "=3D");=0A=
      if (parts.length =3D=3D 2) return parts.pop().split(";").shift();=0A=
      return 0;=0A=
    }=0A=
};=0A=
=0A=
if (window.addEventListener) {=0A=
    window.addEventListener('load', archive_analytics.onload_func, =
false);=0A=
} else if (window.attachEvent) {=0A=
    window.attachEvent('onload', archive_analytics.onload_func);=0A=
}=0A=
=0A=
window.archive_analytics.values['server_ms'] =3D =
window.archive_analytics.get_cookie("wb_total_perf"); =0A=

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/disclaim-element.js

function getFrameArea(frame) {=0A=
  if(frame.innerWidth) return frame.innerWidth * frame.innerHeight;=0A=
  if(frame.document.documentElement && =
frame.document.documentElement.clientHeight) return =
frame.document.documentElement.clientWidth * =
frame.document.documentElement.clientHeight;=0A=
  if(frame.document.body) return frame.document.body.clientWidth * =
frame.document.body.clientHeight;=0A=
  return 0;=0A=
}=0A=
=0A=
function isLargestFrame() {=0A=
	if(top =3D=3D self) {=0A=
		return true;=0A=
	}=0A=
	if(top.document.body.tagName =3D=3D "BODY") {=0A=
		return false;=0A=
	}=0A=
	largestArea =3D 0;=0A=
	largestFrame =3D null;=0A=
	for(i=3D0;i<top.frames.length;i++) {=0A=
		frame =3D top.frames[i];=0A=
		area =3D getFrameArea(frame);=0A=
		if(area > largestArea) {=0A=
			largestFrame =3D frame;=0A=
			largestArea =3D area;=0A=
		}=0A=
	}=0A=
	return (self =3D=3D largestFrame);=0A=
}=0A=
=0A=
function disclaimElement(element) {=0A=
	if(isLargestFrame()) {=0A=
		element.style.display=3D"block";=0A=
		document.body.insertBefore(element,document.body.firstChild);=0A=
	}=0A=
}=0A=
=0A=
function disclaimToggle(largest, nonLargest) {=0A=
	if(isLargestFrame()) {=0A=
		largest.style.display=3D"block";=0A=
		nonLargest.style.display=3D"none";=0A=
	} else {=0A=
		largest.style.display=3D"none";=0A=
		nonLargest.style.display=3D"block";=0A=
	}=0A=
}=0A=
=0A=

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/graph-calc.js

function getEventX(event) {=0A=
	var posx =3D 0;=0A=
	if (event.pageX || event.pageY) {=0A=
		posx =3D  event.pageX;=0A=
	}=0A=
	else if (event.clientX || event.clientY) 	{=0A=
		posx =3D event.clientX + document.body.scrollLeft=0A=
			+ document.documentElement.scrollLeft;=0A=
	}=0A=
	return posx;=0A=
}=0A=
function getElementX(obj) {=0A=
	var x =3D 0;=0A=
	if (obj.offsetParent) {=0A=
		do {=0A=
			x +=3D obj.offsetLeft;=0A=
		} while (obj =3D obj.offsetParent);=0A=
	}=0A=
	return x;=0A=
}=0A=
function zeroPad(str,len) {=0A=
	var i;=0A=
	var pad =3D "";=0A=
	var s =3D str.toString();=0A=
	for(i=3Ds.length; i < len; i++) {=0A=
		pad =3D "0".toString() + pad.toString();=0A=
	}=0A=
	return pad.toString() + s.toString();=0A=
}=0A=
=0A=
function dateToTimestamp(date) {=0A=
	return date.getFullYear() +=0A=
		zeroPad(date.getMonth()+1,2) +=0A=
		zeroPad(date.getDay()+1,2) +=0A=
		zeroPad(date.getHours(),2) +=0A=
		zeroPad(date.getMinutes(),2) +=0A=
		zeroPad(date.getSeconds(),2);=0A=
}=0A=
=0A=
function calcTimestamp(event,element,firstMS,lastMS) {=0A=
	  var eventX =3D getEventX(event);=0A=
	  var elementX =3D getElementX(element);=0A=
	  var elementWidth =3D element.width;=0A=
	  var msWidth =3D lastMS - firstMS;=0A=
	  var x =3D eventX - elementX;=0A=
	  var pct =3D x / elementWidth;=0A=
	  var pctDate =3D pct * msWidth;=0A=
	  var date =3D pctDate + firstMS;=0A=
	  return dateToTimestamp(new Date(date));=0A=
}=0A=

------=_NextPart_000_008E_01CFB219.FFF2C320
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/jflot/jquery.min.js

/*=0A=
 * jQuery JavaScript Library v1.3.2=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Copyright (c) 2009 John Resig=0A=
 * Dual licensed under the MIT and GPL licenses.=0A=
 * http://docs.jquery.com/License=0A=
 *=0A=
 * Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)=0A=
 * Revision: 6246=0A=
 */=0A=
(function(){var =
window=3Dthis,undefined,_jQuery=3Dwindow.jQuery,_$=3Dwindow.$,jQuery=3Dwi=
ndow.jQuery=3Dwindow.$=3Dfunction(selector,context){return new =
jQuery.fn.init(selector,context)},quickExpr=3D/^[^<]*(<(.|\s)+>)[^>]*$|^#=
([\w-]+)$/,isSimple=3D/^.[^:#\[\.,]*$/;jQuery.fn=3DjQuery.prototype=3D{in=
it:function(selector,context){selector=3Dselector||document;if(selector.n=
odeType){this[0]=3Dselector;this.length=3D1;this.context=3Dselector;retur=
n this}if(typeof selector=3D=3D=3D"string"){var =
match=3DquickExpr.exec(selector);if(match&&(match[1]||!context)){if(match=
[1]){selector=3DjQuery.clean([match[1]],context)}else{var =
elem=3Ddocument.getElementById(match[3]);if(elem&&elem.id!=3Dmatch[3]){re=
turn jQuery().find(selector)}var =
ret=3DjQuery(elem||[]);ret.context=3Ddocument;ret.selector=3Dselector;ret=
urn ret}}else{return =
jQuery(context).find(selector)}}else{if(jQuery.isFunction(selector)){retu=
rn =
jQuery(document).ready(selector)}}if(selector.selector&&selector.context)=
{this.selector=3Dselector.selector;this.context=3Dselector.context}return=
 =
this.setArray(jQuery.isArray(selector)?selector:jQuery.makeArray(selector=
))},selector:"",jquery:"1.3.2",size:function(){return =
this.length},get:function(num){return =
num=3D=3D=3Dundefined?Array.prototype.slice.call(this):this[num]},pushSta=
ck:function(elems,name,selector){var =
ret=3DjQuery(elems);ret.prevObject=3Dthis;ret.context=3Dthis.context;if(n=
ame=3D=3D=3D"find"){ret.selector=3Dthis.selector+(this.selector?" =
":"")+selector}else{if(name){ret.selector=3Dthis.selector+"."+name+"("+se=
lector+")"}}return =
ret},setArray:function(elems){this.length=3D0;Array.prototype.push.apply(=
this,elems);return this},each:function(callback,args){return =
jQuery.each(this,callback,args)},index:function(elem){return =
jQuery.inArray(elem&&elem.jquery?elem[0]:elem,this)},attr:function(name,v=
alue,type){var options=3Dname;if(typeof =
name=3D=3D=3D"string"){if(value=3D=3D=3Dundefined){return =
this[0]&&jQuery[type||"attr"](this[0],name)}else{options=3D{};options[nam=
e]=3Dvalue}}return this.each(function(i){for(name in =
options){jQuery.attr(type?this.style:this,name,jQuery.prop(this,options[n=
ame],type,i,name))}})},css:function(key,value){if((key=3D=3D"width"||key=3D=
=3D"height")&&parseFloat(value)<0){value=3Dundefined}return =
this.attr(key,value,"curCSS")},text:function(text){if(typeof =
text!=3D=3D"object"&&text!=3Dnull){return =
this.empty().append((this[0]&&this[0].ownerDocument||document).createText=
Node(text))}var =
ret=3D"";jQuery.each(text||this,function(){jQuery.each(this.childNodes,fu=
nction(){if(this.nodeType!=3D8){ret+=3Dthis.nodeType!=3D1?this.nodeValue:=
jQuery.fn.text([this])}})});return =
ret},wrapAll:function(html){if(this[0]){var =
wrap=3DjQuery(html,this[0].ownerDocument).clone();if(this[0].parentNode){=
wrap.insertBefore(this[0])}wrap.map(function(){var =
elem=3Dthis;while(elem.firstChild){elem=3Delem.firstChild}return =
elem}).append(this)}return this},wrapInner:function(html){return =
this.each(function(){jQuery(this).contents().wrapAll(html)})},wrap:functi=
on(html){return =
this.each(function(){jQuery(this).wrapAll(html)})},append:function(){retu=
rn =
this.domManip(arguments,true,function(elem){if(this.nodeType=3D=3D1){this=
.appendChild(elem)}})},prepend:function(){return =
this.domManip(arguments,true,function(elem){if(this.nodeType=3D=3D1){this=
.insertBefore(elem,this.firstChild)}})},before:function(){return =
this.domManip(arguments,false,function(elem){this.parentNode.insertBefore=
(elem,this)})},after:function(){return =
this.domManip(arguments,false,function(elem){this.parentNode.insertBefore=
(elem,this.nextSibling)})},end:function(){return =
this.prevObject||jQuery([])},push:[].push,sort:[].sort,splice:[].splice,f=
ind:function(selector){if(this.length=3D=3D=3D1){var =
ret=3Dthis.pushStack([],"find",selector);ret.length=3D0;jQuery.find(selec=
tor,this[0],ret);return ret}else{return =
this.pushStack(jQuery.unique(jQuery.map(this,function(elem){return =
jQuery.find(selector,elem)})),"find",selector)}},clone:function(events){v=
ar =
ret=3Dthis.map(function(){if(!jQuery.support.noCloneEvent&&!jQuery.isXMLD=
oc(this)){var html=3Dthis.outerHTML;if(!html){var =
div=3Dthis.ownerDocument.createElement("div");div.appendChild(this.cloneN=
ode(true));html=3Ddiv.innerHTML}return jQuery.clean([html.replace(/ =
jQuery\d+=3D"(?:\d+|null)"/g,"").replace(/^\s*/,"")])[0]}else{return =
this.cloneNode(true)}});if(events=3D=3D=3Dtrue){var =
orig=3Dthis.find("*").andSelf(),i=3D0;ret.find("*").andSelf().each(functi=
on(){if(this.nodeName!=3D=3Dorig[i].nodeName){return }var =
events=3DjQuery.data(orig[i],"events");for(var type in events){for(var =
handler in =
events[type]){jQuery.event.add(this,type,events[type][handler],events[typ=
e][handler].data)}}i++})}return ret},filter:function(selector){return =
this.pushStack(jQuery.isFunction(selector)&&jQuery.grep(this,function(ele=
m,i){return =
selector.call(elem,i)})||jQuery.multiFilter(selector,jQuery.grep(this,fun=
ction(elem){return =
elem.nodeType=3D=3D=3D1})),"filter",selector)},closest:function(selector)=
{var =
pos=3DjQuery.expr.match.POS.test(selector)?jQuery(selector):null,closer=3D=
0;return this.map(function(){var =
cur=3Dthis;while(cur&&cur.ownerDocument){if(pos?pos.index(cur)>-1:jQuery(=
cur).is(selector)){jQuery.data(cur,"closest",closer);return =
cur}cur=3Dcur.parentNode;closer++}})},not:function(selector){if(typeof =
selector=3D=3D=3D"string"){if(isSimple.test(selector)){return =
this.pushStack(jQuery.multiFilter(selector,this,true),"not",selector)}els=
e{selector=3DjQuery.multiFilter(selector,this)}}var =
isArrayLike=3Dselector.length&&selector[selector.length-1]!=3D=3Dundefine=
d&&!selector.nodeType;return this.filter(function(){return =
isArrayLike?jQuery.inArray(this,selector)<0:this!=3Dselector})},add:funct=
ion(selector){return =
this.pushStack(jQuery.unique(jQuery.merge(this.get(),typeof =
selector=3D=3D=3D"string"?jQuery(selector):jQuery.makeArray(selector))))}=
,is:function(selector){return =
!!selector&&jQuery.multiFilter(selector,this).length>0},hasClass:function=
(selector){return =
!!selector&&this.is("."+selector)},val:function(value){if(value=3D=3D=3Du=
ndefined){var =
elem=3Dthis[0];if(elem){if(jQuery.nodeName(elem,"option")){return(elem.at=
tributes.value||{}).specified?elem.value:elem.text}if(jQuery.nodeName(ele=
m,"select")){var =
index=3Delem.selectedIndex,values=3D[],options=3Delem.options,one=3Delem.=
type=3D=3D"select-one";if(index<0){return null}for(var =
i=3Done?index:0,max=3Done?index+1:options.length;i<max;i++){var =
option=3Doptions[i];if(option.selected){value=3DjQuery(option).val();if(o=
ne){return value}values.push(value)}}return =
values}return(elem.value||"").replace(/\r/g,"")}return =
undefined}if(typeof value=3D=3D=3D"number"){value+=3D""}return =
this.each(function(){if(this.nodeType!=3D1){return =
}if(jQuery.isArray(value)&&/radio|checkbox/.test(this.type)){this.checked=
=3D(jQuery.inArray(this.value,value)>=3D0||jQuery.inArray(this.name,value=
)>=3D0)}else{if(jQuery.nodeName(this,"select")){var =
values=3DjQuery.makeArray(value);jQuery("option",this).each(function(){th=
is.selected=3D(jQuery.inArray(this.value,values)>=3D0||jQuery.inArray(thi=
s.text,values)>=3D0)});if(!values.length){this.selectedIndex=3D-1}}else{t=
his.value=3Dvalue}}})},html:function(value){return =
value=3D=3D=3Dundefined?(this[0]?this[0].innerHTML.replace(/ =
jQuery\d+=3D"(?:\d+|null)"/g,""):null):this.empty().append(value)},replac=
eWith:function(value){return =
this.after(value).remove()},eq:function(i){return =
this.slice(i,+i+1)},slice:function(){return =
this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.=
prototype.slice.call(arguments).join(","))},map:function(callback){return=
 this.pushStack(jQuery.map(this,function(elem,i){return =
callback.call(elem,i,elem)}))},andSelf:function(){return =
this.add(this.prevObject)},domManip:function(args,table,callback){if(this=
[0]){var =
fragment=3D(this[0].ownerDocument||this[0]).createDocumentFragment(),scri=
pts=3DjQuery.clean(args,(this[0].ownerDocument||this[0]),fragment),first=3D=
fragment.firstChild;if(first){for(var =
i=3D0,l=3Dthis.length;i<l;i++){callback.call(root(this[i],first),this.len=
gth>1||i>0?fragment.cloneNode(true):fragment)}}if(scripts){jQuery.each(sc=
ripts,evalScript)}}return this;function root(elem,cur){return =
table&&jQuery.nodeName(elem,"table")&&jQuery.nodeName(cur,"tr")?(elem.get=
ElementsByTagName("tbody")[0]||elem.appendChild(elem.ownerDocument.create=
Element("tbody"))):elem}}};jQuery.fn.init.prototype=3DjQuery.fn;function =
evalScript(i,elem){if(elem.src){jQuery.ajax({url:elem.src,async:false,dat=
aType:"script"})}else{jQuery.globalEval(elem.text||elem.textContent||elem=
.innerHTML||"")}if(elem.parentNode){elem.parentNode.removeChild(elem)}}fu=
nction now(){return +new =
Date}jQuery.extend=3DjQuery.fn.extend=3Dfunction(){var =
target=3Darguments[0]||{},i=3D1,length=3Darguments.length,deep=3Dfalse,op=
tions;if(typeof =
target=3D=3D=3D"boolean"){deep=3Dtarget;target=3Darguments[1]||{};i=3D2}i=
f(typeof =
target!=3D=3D"object"&&!jQuery.isFunction(target)){target=3D{}}if(length=3D=
=3Di){target=3Dthis;--i}for(;i<length;i++){if((options=3Darguments[i])!=3D=
null){for(var name in options){var =
src=3Dtarget[name],copy=3Doptions[name];if(target=3D=3D=3Dcopy){continue}=
if(deep&&copy&&typeof =
copy=3D=3D=3D"object"&&!copy.nodeType){target[name]=3DjQuery.extend(deep,=
src||(copy.length!=3Dnull?[]:{}),copy)}else{if(copy!=3D=3Dundefined){targ=
et[name]=3Dcopy}}}}}return target};var =
exclude=3D/z-?index|font-?weight|opacity|zoom|line-?height/i,defaultView=3D=
document.defaultView||{},toString=3DObject.prototype.toString;jQuery.exte=
nd({noConflict:function(deep){window.$=3D_$;if(deep){window.jQuery=3D_jQu=
ery}return jQuery},isFunction:function(obj){return =
toString.call(obj)=3D=3D=3D"[object =
Function]"},isArray:function(obj){return =
toString.call(obj)=3D=3D=3D"[object =
Array]"},isXMLDoc:function(elem){return =
elem.nodeType=3D=3D=3D9&&elem.documentElement.nodeName!=3D=3D"HTML"||!!el=
em.ownerDocument&&jQuery.isXMLDoc(elem.ownerDocument)},globalEval:functio=
n(data){if(data&&/\S/.test(data)){var =
head=3Ddocument.getElementsByTagName("head")[0]||document.documentElement=
,script=3Ddocument.createElement("script");script.type=3D"text/javascript=
";if(jQuery.support.scriptEval){script.appendChild(document.createTextNod=
e(data))}else{script.text=3Ddata}head.insertBefore(script,head.firstChild=
);head.removeChild(script)}},nodeName:function(elem,name){return =
elem.nodeName&&elem.nodeName.toUpperCase()=3D=3Dname.toUpperCase()},each:=
function(object,callback,args){var =
name,i=3D0,length=3Dobject.length;if(args){if(length=3D=3D=3Dundefined){f=
or(name in =
object){if(callback.apply(object[name],args)=3D=3D=3Dfalse){break}}}else{=
for(;i<length;){if(callback.apply(object[i++],args)=3D=3D=3Dfalse){break}=
}}}else{if(length=3D=3D=3Dundefined){for(name in =
object){if(callback.call(object[name],name,object[name])=3D=3D=3Dfalse){b=
reak}}}else{for(var =
value=3Dobject[0];i<length&&callback.call(value,i,value)!=3D=3Dfalse;valu=
e=3Dobject[++i]){}}}return =
object},prop:function(elem,value,type,i,name){if(jQuery.isFunction(value)=
){value=3Dvalue.call(elem,i)}return typeof =
value=3D=3D=3D"number"&&type=3D=3D"curCSS"&&!exclude.test(name)?value+"px=
":value},className:{add:function(elem,classNames){jQuery.each((classNames=
||"").split(/\s+/),function(i,className){if(elem.nodeType=3D=3D1&&!jQuery=
.className.has(elem.className,className)){elem.className+=3D(elem.classNa=
me?" =
":"")+className}})},remove:function(elem,classNames){if(elem.nodeType=3D=3D=
1){elem.className=3DclassNames!=3D=3Dundefined?jQuery.grep(elem.className=
.split(/\s+/),function(className){return =
!jQuery.className.has(classNames,className)}).join(" =
"):""}},has:function(elem,className){return =
elem&&jQuery.inArray(className,(elem.className||elem).toString().split(/\=
s+/))>-1}},swap:function(elem,options,callback){var old=3D{};for(var =
name in =
options){old[name]=3Delem.style[name];elem.style[name]=3Doptions[name]}ca=
llback.call(elem);for(var name in =
options){elem.style[name]=3Dold[name]}},css:function(elem,name,force,extr=
a){if(name=3D=3D"width"||name=3D=3D"height"){var =
val,props=3D{position:"absolute",visibility:"hidden",display:"block"},whi=
ch=3Dname=3D=3D"width"?["Left","Right"]:["Top","Bottom"];function =
getWH(){val=3Dname=3D=3D"width"?elem.offsetWidth:elem.offsetHeight;if(ext=
ra=3D=3D=3D"border"){return =
}jQuery.each(which,function(){if(!extra){val-=3DparseFloat(jQuery.curCSS(=
elem,"padding"+this,true))||0}if(extra=3D=3D=3D"margin"){val+=3DparseFloa=
t(jQuery.curCSS(elem,"margin"+this,true))||0}else{val-=3DparseFloat(jQuer=
y.curCSS(elem,"border"+this+"Width",true))||0}})}if(elem.offsetWidth!=3D=3D=
0){getWH()}else{jQuery.swap(elem,props,getWH)}return =
Math.max(0,Math.round(val))}return =
jQuery.curCSS(elem,name,force)},curCSS:function(elem,name,force){var =
ret,style=3Delem.style;if(name=3D=3D"opacity"&&!jQuery.support.opacity){r=
et=3DjQuery.attr(style,"opacity");return =
ret=3D=3D""?"1":ret}if(name.match(/float/i)){name=3DstyleFloat}if(!force&=
&style&&style[name]){ret=3Dstyle[name]}else{if(defaultView.getComputedSty=
le){if(name.match(/float/i)){name=3D"float"}name=3Dname.replace(/([A-Z])/=
g,"-$1").toLowerCase();var =
computedStyle=3DdefaultView.getComputedStyle(elem,null);if(computedStyle)=
{ret=3DcomputedStyle.getPropertyValue(name)}if(name=3D=3D"opacity"&&ret=3D=
=3D""){ret=3D"1"}}else{if(elem.currentStyle){var =
camelCase=3Dname.replace(/\-(\w)/g,function(all,letter){return =
letter.toUpperCase()});ret=3Delem.currentStyle[name]||elem.currentStyle[c=
amelCase];if(!/^\d+(px)?$/i.test(ret)&&/^\d/.test(ret)){var =
left=3Dstyle.left,rsLeft=3Delem.runtimeStyle.left;elem.runtimeStyle.left=3D=
elem.currentStyle.left;style.left=3Dret||0;ret=3Dstyle.pixelLeft+"px";sty=
le.left=3Dleft;elem.runtimeStyle.left=3DrsLeft}}}}return =
ret},clean:function(elems,context,fragment){context=3Dcontext||document;i=
f(typeof =
context.createElement=3D=3D=3D"undefined"){context=3Dcontext.ownerDocumen=
t||context[0]&&context[0].ownerDocument||document}if(!fragment&&elems.len=
gth=3D=3D=3D1&&typeof elems[0]=3D=3D=3D"string"){var =
match=3D/^<(\w+)\s*\/?>$/.exec(elems[0]);if(match){return[context.createE=
lement(match[1])]}}var =
ret=3D[],scripts=3D[],div=3Dcontext.createElement("div");jQuery.each(elem=
s,function(i,elem){if(typeof =
elem=3D=3D=3D"number"){elem+=3D""}if(!elem){return }if(typeof =
elem=3D=3D=3D"string"){elem=3Delem.replace(/(<(\w+)[^>]*?)\/>/g,function(=
all,front,tag){return =
tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?all=
:front+"></"+tag+">"});var =
tags=3Delem.replace(/^\s+/,"").substring(0,10).toLowerCase();var =
wrap=3D!tags.indexOf("<opt")&&[1,"<select =
multiple=3D'multiple'>","</select>"]||!tags.indexOf("<leg")&&[1,"<fieldse=
t>","</fieldset>"]||tags.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,"<ta=
ble>","</table>"]||!tags.indexOf("<tr")&&[2,"<table><tbody>","</tbody></t=
able>"]||(!tags.indexOf("<td")||!tags.indexOf("<th"))&&[3,"<table><tbody>=
<tr>","</tr></tbody></table>"]||!tags.indexOf("<col")&&[2,"<table><tbody>=
</tbody><colgroup>","</colgroup></table>"]||!jQuery.support.htmlSerialize=
&&[1,"div<div>","</div>"]||[0,"",""];div.innerHTML=3Dwrap[1]+elem+wrap[2]=
;while(wrap[0]--){div=3Ddiv.lastChild}if(!jQuery.support.tbody){var =
hasBody=3D/<tbody/i.test(elem),tbody=3D!tags.indexOf("<table")&&!hasBody?=
div.firstChild&&div.firstChild.childNodes:wrap[1]=3D=3D"<table>"&&!hasBod=
y?div.childNodes:[];for(var =
j=3Dtbody.length-1;j>=3D0;--j){if(jQuery.nodeName(tbody[j],"tbody")&&!tbo=
dy[j].childNodes.length){tbody[j].parentNode.removeChild(tbody[j])}}}if(!=
jQuery.support.leadingWhitespace&&/^\s/.test(elem)){div.insertBefore(cont=
ext.createTextNode(elem.match(/^\s*/)[0]),div.firstChild)}elem=3DjQuery.m=
akeArray(div.childNodes)}if(elem.nodeType){ret.push(elem)}else{ret=3DjQue=
ry.merge(ret,elem)}});if(fragment){for(var =
i=3D0;ret[i];i++){if(jQuery.nodeName(ret[i],"script")&&(!ret[i].type||ret=
[i].type.toLowerCase()=3D=3D=3D"text/javascript")){scripts.push(ret[i].pa=
rentNode?ret[i].parentNode.removeChild(ret[i]):ret[i])}else{if(ret[i].nod=
eType=3D=3D=3D1){ret.splice.apply(ret,[i+1,0].concat(jQuery.makeArray(ret=
[i].getElementsByTagName("script"))))}fragment.appendChild(ret[i])}}retur=
n scripts}return =
ret},attr:function(elem,name,value){if(!elem||elem.nodeType=3D=3D3||elem.=
nodeType=3D=3D8){return undefined}var =
notxml=3D!jQuery.isXMLDoc(elem),set=3Dvalue!=3D=3Dundefined;name=3Dnotxml=
&&jQuery.props[name]||name;if(elem.tagName){var =
special=3D/href|src|style/.test(name);if(name=3D=3D"selected"&&elem.paren=
tNode){elem.parentNode.selectedIndex}if(name in =
elem&&notxml&&!special){if(set){if(name=3D=3D"type"&&jQuery.nodeName(elem=
,"input")&&elem.parentNode){throw"type property can't be =
changed"}elem[name]=3Dvalue}if(jQuery.nodeName(elem,"form")&&elem.getAttr=
ibuteNode(name)){return =
elem.getAttributeNode(name).nodeValue}if(name=3D=3D"tabIndex"){var =
attributeNode=3Delem.getAttributeNode("tabIndex");return =
attributeNode&&attributeNode.specified?attributeNode.value:elem.nodeName.=
match(/(button|input|object|select|textarea)/i)?0:elem.nodeName.match(/^(=
a|area)$/i)&&elem.href?0:undefined}return =
elem[name]}if(!jQuery.support.style&&notxml&&name=3D=3D"style"){return =
jQuery.attr(elem.style,"cssText",value)}if(set){elem.setAttribute(name,""=
+value)}var =
attr=3D!jQuery.support.hrefNormalized&&notxml&&special?elem.getAttribute(=
name,2):elem.getAttribute(name);return =
attr=3D=3D=3Dnull?undefined:attr}if(!jQuery.support.opacity&&name=3D=3D"o=
pacity"){if(set){elem.zoom=3D1;elem.filter=3D(elem.filter||"").replace(/a=
lpha\([^)]*\)/,"")+(parseInt(value)+""=3D=3D"NaN"?"":"alpha(opacity=3D"+v=
alue*100+")")}return =
elem.filter&&elem.filter.indexOf("opacity=3D")>=3D0?(parseFloat(elem.filt=
er.match(/opacity=3D([^)]*)/)[1])/100)+"":""}name=3Dname.replace(/-([a-z]=
)/ig,function(all,letter){return =
letter.toUpperCase()});if(set){elem[name]=3Dvalue}return =
elem[name]},trim:function(text){return(text||"").replace(/^\s+|\s+$/g,"")=
},makeArray:function(array){var ret=3D[];if(array!=3Dnull){var =
i=3Darray.length;if(i=3D=3Dnull||typeof =
array=3D=3D=3D"string"||jQuery.isFunction(array)||array.setInterval){ret[=
0]=3Darray}else{while(i){ret[--i]=3Darray[i]}}}return =
ret},inArray:function(elem,array){for(var =
i=3D0,length=3Darray.length;i<length;i++){if(array[i]=3D=3D=3Delem){retur=
n i}}return -1},merge:function(first,second){var =
i=3D0,elem,pos=3Dfirst.length;if(!jQuery.support.getAll){while((elem=3Dse=
cond[i++])!=3Dnull){if(elem.nodeType!=3D8){first[pos++]=3Delem}}}else{whi=
le((elem=3Dsecond[i++])!=3Dnull){first[pos++]=3Delem}}return =
first},unique:function(array){var ret=3D[],done=3D{};try{for(var =
i=3D0,length=3Darray.length;i<length;i++){var =
id=3DjQuery.data(array[i]);if(!done[id]){done[id]=3Dtrue;ret.push(array[i=
])}}}catch(e){ret=3Darray}return =
ret},grep:function(elems,callback,inv){var ret=3D[];for(var =
i=3D0,length=3Delems.length;i<length;i++){if(!inv!=3D!callback(elems[i],i=
)){ret.push(elems[i])}}return ret},map:function(elems,callback){var =
ret=3D[];for(var i=3D0,length=3Delems.length;i<length;i++){var =
value=3Dcallback(elems[i],i);if(value!=3Dnull){ret[ret.length]=3Dvalue}}r=
eturn ret.concat.apply([],ret)}});var =
userAgent=3Dnavigator.userAgent.toLowerCase();jQuery.browser=3D{version:(=
userAgent.match(/.+(?:rv|it|ra|ie)[\/: =
]([\d.]+)/)||[0,"0"])[1],safari:/webkit/.test(userAgent),opera:/opera/.te=
st(userAgent),msie:/msie/.test(userAgent)&&!/opera/.test(userAgent),mozil=
la:/mozilla/.test(userAgent)&&!/(compatible|webkit)/.test(userAgent)};jQu=
ery.each({parent:function(elem){return =
elem.parentNode},parents:function(elem){return =
jQuery.dir(elem,"parentNode")},next:function(elem){return =
jQuery.nth(elem,2,"nextSibling")},prev:function(elem){return =
jQuery.nth(elem,2,"previousSibling")},nextAll:function(elem){return =
jQuery.dir(elem,"nextSibling")},prevAll:function(elem){return =
jQuery.dir(elem,"previousSibling")},siblings:function(elem){return =
jQuery.sibling(elem.parentNode.firstChild,elem)},children:function(elem){=
return jQuery.sibling(elem.firstChild)},contents:function(elem){return =
jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.contentWindow.d=
ocument:jQuery.makeArray(elem.childNodes)}},function(name,fn){jQuery.fn[n=
ame]=3Dfunction(selector){var =
ret=3DjQuery.map(this,fn);if(selector&&typeof =
selector=3D=3D"string"){ret=3DjQuery.multiFilter(selector,ret)}return =
this.pushStack(jQuery.unique(ret),name,selector)}});jQuery.each({appendTo=
:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",r=
eplaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=3Dfuncti=
on(selector){var ret=3D[],insert=3DjQuery(selector);for(var =
i=3D0,l=3Dinsert.length;i<l;i++){var =
elems=3D(i>0?this.clone(true):this).get();jQuery.fn[original].apply(jQuer=
y(insert[i]),elems);ret=3Dret.concat(elems)}return =
this.pushStack(ret,name,selector)}});jQuery.each({removeAttr:function(nam=
e){jQuery.attr(this,name,"");if(this.nodeType=3D=3D1){this.removeAttribut=
e(name)}},addClass:function(classNames){jQuery.className.add(this,classNa=
mes)},removeClass:function(classNames){jQuery.className.remove(this,class=
Names)},toggleClass:function(classNames,state){if(typeof =
state!=3D=3D"boolean"){state=3D!jQuery.className.has(this,classNames)}jQu=
ery.className[state?"add":"remove"](this,classNames)},remove:function(sel=
ector){if(!selector||jQuery.filter(selector,[this]).length){jQuery("*",th=
is).add([this]).each(function(){jQuery.event.remove(this);jQuery.removeDa=
ta(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},empty=
:function(){jQuery(this).children().remove();while(this.firstChild){this.=
removeChild(this.firstChild)}}},function(name,fn){jQuery.fn[name]=3Dfunct=
ion(){return this.each(fn,arguments)}});function num(elem,prop){return =
elem[0]&&parseInt(jQuery.curCSS(elem[0],prop,true),10)||0}var =
expando=3D"jQuery"+now(),uuid=3D0,windowData=3D{};jQuery.extend({cache:{}=
,data:function(elem,name,data){elem=3Delem=3D=3Dwindow?windowData:elem;va=
r =
id=3Delem[expando];if(!id){id=3Delem[expando]=3D++uuid}if(name&&!jQuery.c=
ache[id]){jQuery.cache[id]=3D{}}if(data!=3D=3Dundefined){jQuery.cache[id]=
[name]=3Ddata}return =
name?jQuery.cache[id][name]:id},removeData:function(elem,name){elem=3Dele=
m=3D=3Dwindow?windowData:elem;var =
id=3Delem[expando];if(name){if(jQuery.cache[id]){delete =
jQuery.cache[id][name];name=3D"";for(name in =
jQuery.cache[id]){break}if(!name){jQuery.removeData(elem)}}}else{try{dele=
te =
elem[expando]}catch(e){if(elem.removeAttribute){elem.removeAttribute(expa=
ndo)}}delete =
jQuery.cache[id]}},queue:function(elem,type,data){if(elem){type=3D(type||=
"fx")+"queue";var =
q=3DjQuery.data(elem,type);if(!q||jQuery.isArray(data)){q=3DjQuery.data(e=
lem,type,jQuery.makeArray(data))}else{if(data){q.push(data)}}}return =
q},dequeue:function(elem,type){var =
queue=3DjQuery.queue(elem,type),fn=3Dqueue.shift();if(!type||type=3D=3D=3D=
"fx"){fn=3Dqueue[0]}if(fn!=3D=3Dundefined){fn.call(elem)}}});jQuery.fn.ex=
tend({data:function(key,value){var =
parts=3Dkey.split(".");parts[1]=3Dparts[1]?"."+parts[1]:"";if(value=3D=3D=
=3Dundefined){var =
data=3Dthis.triggerHandler("getData"+parts[1]+"!",[parts[0]]);if(data=3D=3D=
=3Dundefined&&this.length){data=3DjQuery.data(this[0],key)}return =
data=3D=3D=3Dundefined&&parts[1]?this.data(parts[0]):data}else{return =
this.trigger("setData"+parts[1]+"!",[parts[0],value]).each(function(){jQu=
ery.data(this,key,value)})}},removeData:function(key){return =
this.each(function(){jQuery.removeData(this,key)})},queue:function(type,d=
ata){if(typeof =
type!=3D=3D"string"){data=3Dtype;type=3D"fx"}if(data=3D=3D=3Dundefined){r=
eturn jQuery.queue(this[0],type)}return this.each(function(){var =
queue=3DjQuery.queue(this,type,data);if(type=3D=3D"fx"&&queue.length=3D=3D=
1){queue[0].call(this)}})},dequeue:function(type){return =
this.each(function(){jQuery.dequeue(this,type)})}});=0A=
/*=0A=
 * Sizzle CSS Selector Engine - v0.9.3=0A=
 *  Copyright 2009, The Dojo Foundation=0A=
 *  Released under the MIT, BSD, and GPL Licenses.=0A=
 *  More information: http://sizzlejs.com/=0A=
 */=0A=
(function(){var =
chunker=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]=
|[^[\]'"]+)+\]|\\.|[^ =
>+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g,done=3D0,toString=3DObject.prototype.toS=
tring;var =
Sizzle=3Dfunction(selector,context,results,seed){results=3Dresults||[];co=
ntext=3Dcontext||document;if(context.nodeType!=3D=3D1&&context.nodeType!=3D=
=3D9){return[]}if(!selector||typeof selector!=3D=3D"string"){return =
results}var =
parts=3D[],m,set,checkSet,check,mode,extra,prune=3Dtrue;chunker.lastIndex=
=3D0;while((m=3Dchunker.exec(selector))!=3D=3Dnull){parts.push(m[1]);if(m=
[2]){extra=3DRegExp.rightContext;break}}if(parts.length>1&&origPOS.exec(s=
elector)){if(parts.length=3D=3D=3D2&&Expr.relative[parts[0]]){set=3DposPr=
ocess(parts[0]+parts[1],context)}else{set=3DExpr.relative[parts[0]]?[cont=
ext]:Sizzle(parts.shift(),context);while(parts.length){selector=3Dparts.s=
hift();if(Expr.relative[selector]){selector+=3Dparts.shift()}set=3DposPro=
cess(selector,set)}}}else{var =
ret=3Dseed?{expr:parts.pop(),set:makeArray(seed)}:Sizzle.find(parts.pop()=
,parts.length=3D=3D=3D1&&context.parentNode?context.parentNode:context,is=
XML(context));set=3DSizzle.filter(ret.expr,ret.set);if(parts.length>0){ch=
eckSet=3DmakeArray(set)}else{prune=3Dfalse}while(parts.length){var =
cur=3Dparts.pop(),pop=3Dcur;if(!Expr.relative[cur]){cur=3D""}else{pop=3Dp=
arts.pop()}if(pop=3D=3Dnull){pop=3Dcontext}Expr.relative[cur](checkSet,po=
p,isXML(context))}}if(!checkSet){checkSet=3Dset}if(!checkSet){throw"Synta=
x error, unrecognized expression: =
"+(cur||selector)}if(toString.call(checkSet)=3D=3D=3D"[object =
Array]"){if(!prune){results.push.apply(results,checkSet)}else{if(context.=
nodeType=3D=3D=3D1){for(var =
i=3D0;checkSet[i]!=3Dnull;i++){if(checkSet[i]&&(checkSet[i]=3D=3D=3Dtrue|=
|checkSet[i].nodeType=3D=3D=3D1&&contains(context,checkSet[i]))){results.=
push(set[i])}}}else{for(var =
i=3D0;checkSet[i]!=3Dnull;i++){if(checkSet[i]&&checkSet[i].nodeType=3D=3D=
=3D1){results.push(set[i])}}}}}else{makeArray(checkSet,results)}if(extra)=
{Sizzle(extra,context,results,seed);if(sortOrder){hasDuplicate=3Dfalse;re=
sults.sort(sortOrder);if(hasDuplicate){for(var =
i=3D1;i<results.length;i++){if(results[i]=3D=3D=3Dresults[i-1]){results.s=
plice(i--,1)}}}}}return =
results};Sizzle.matches=3Dfunction(expr,set){return =
Sizzle(expr,null,null,set)};Sizzle.find=3Dfunction(expr,context,isXML){va=
r set,match;if(!expr){return[]}for(var =
i=3D0,l=3DExpr.order.length;i<l;i++){var =
type=3DExpr.order[i],match;if((match=3DExpr.match[type].exec(expr))){var =
left=3DRegExp.leftContext;if(left.substr(left.length-1)!=3D=3D"\\"){match=
[1]=3D(match[1]||"").replace(/\\/g,"");set=3DExpr.find[type](match,contex=
t,isXML);if(set!=3Dnull){expr=3Dexpr.replace(Expr.match[type],"");break}}=
}}if(!set){set=3Dcontext.getElementsByTagName("*")}return{set:set,expr:ex=
pr}};Sizzle.filter=3Dfunction(expr,set,inplace,not){var =
old=3Dexpr,result=3D[],curLoop=3Dset,match,anyFound,isXMLFilter=3Dset&&se=
t[0]&&isXML(set[0]);while(expr&&set.length){for(var type in =
Expr.filter){if((match=3DExpr.match[type].exec(expr))!=3Dnull){var =
filter=3DExpr.filter[type],found,item;anyFound=3Dfalse;if(curLoop=3D=3Dre=
sult){result=3D[]}if(Expr.preFilter[type]){match=3DExpr.preFilter[type](m=
atch,curLoop,inplace,result,not,isXMLFilter);if(!match){anyFound=3Dfound=3D=
true}else{if(match=3D=3D=3Dtrue){continue}}}if(match){for(var =
i=3D0;(item=3DcurLoop[i])!=3Dnull;i++){if(item){found=3Dfilter(item,match=
,i,curLoop);var =
pass=3Dnot^!!found;if(inplace&&found!=3Dnull){if(pass){anyFound=3Dtrue}el=
se{curLoop[i]=3Dfalse}}else{if(pass){result.push(item);anyFound=3Dtrue}}}=
}}if(found!=3D=3Dundefined){if(!inplace){curLoop=3Dresult}expr=3Dexpr.rep=
lace(Expr.match[type],"");if(!anyFound){return[]}break}}}if(expr=3D=3Dold=
){if(anyFound=3D=3Dnull){throw"Syntax error, unrecognized expression: =
"+expr}else{break}}old=3Dexpr}return curLoop};var =
Expr=3DSizzle.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\=
u00c0-\uFFFF_-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,NAME:/\[=
name=3D['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00=
c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=3D)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\=
u00c0-\uFFFF\*_-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|o=
dd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(=
?=3D[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\=
)]+\)|[^\2\(\)]*)+)\2\))?/},attrMap:{"class":"className","for":"htmlFor"}=
,attrHandle:{href:function(elem){return =
elem.getAttribute("href")}},relative:{"+":function(checkSet,part,isXML){v=
ar isPartStr=3Dtypeof =
part=3D=3D=3D"string",isTag=3DisPartStr&&!/\W/.test(part),isPartStrNotTag=
=3DisPartStr&&!isTag;if(isTag&&!isXML){part=3Dpart.toUpperCase()}for(var =
i=3D0,l=3DcheckSet.length,elem;i<l;i++){if((elem=3DcheckSet[i])){while((e=
lem=3Delem.previousSibling)&&elem.nodeType!=3D=3D1){}checkSet[i]=3DisPart=
StrNotTag||elem&&elem.nodeName=3D=3D=3Dpart?elem||false:elem=3D=3D=3Dpart=
}}if(isPartStrNotTag){Sizzle.filter(part,checkSet,true)}},">":function(ch=
eckSet,part,isXML){var isPartStr=3Dtypeof =
part=3D=3D=3D"string";if(isPartStr&&!/\W/.test(part)){part=3DisXML?part:p=
art.toUpperCase();for(var i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){var =
parent=3Delem.parentNode;checkSet[i]=3Dparent.nodeName=3D=3D=3Dpart?paren=
t:false}}}else{for(var i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){checkSet[i]=3DisPartStr?elem.parentNode:elem.=
parentNode=3D=3D=3Dpart}}if(isPartStr){Sizzle.filter(part,checkSet,true)}=
}},"":function(checkSet,part,isXML){var =
doneName=3Ddone++,checkFn=3DdirCheck;if(!part.match(/\W/)){var =
nodeCheck=3Dpart=3DisXML?part:part.toUpperCase();checkFn=3DdirNodeCheck}c=
heckFn("parentNode",part,doneName,checkSet,nodeCheck,isXML)},"~":function=
(checkSet,part,isXML){var doneName=3Ddone++,checkFn=3DdirCheck;if(typeof =
part=3D=3D=3D"string"&&!part.match(/\W/)){var =
nodeCheck=3Dpart=3DisXML?part:part.toUpperCase();checkFn=3DdirNodeCheck}c=
heckFn("previousSibling",part,doneName,checkSet,nodeCheck,isXML)}},find:{=
ID:function(match,context,isXML){if(typeof =
context.getElementById!=3D=3D"undefined"&&!isXML){var =
m=3Dcontext.getElementById(match[1]);return =
m?[m]:[]}},NAME:function(match,context,isXML){if(typeof =
context.getElementsByName!=3D=3D"undefined"){var =
ret=3D[],results=3Dcontext.getElementsByName(match[1]);for(var =
i=3D0,l=3Dresults.length;i<l;i++){if(results[i].getAttribute("name")=3D=3D=
=3Dmatch[1]){ret.push(results[i])}}return =
ret.length=3D=3D=3D0?null:ret}},TAG:function(match,context){return =
context.getElementsByTagName(match[1])}},preFilter:{CLASS:function(match,=
curLoop,inplace,result,not,isXML){match=3D" =
"+match[1].replace(/\\/g,"")+" ";if(isXML){return match}for(var =
i=3D0,elem;(elem=3DcurLoop[i])!=3Dnull;i++){if(elem){if(not^(elem.classNa=
me&&(" "+elem.className+" =
").indexOf(match)>=3D0)){if(!inplace){result.push(elem)}}else{if(inplace)=
{curLoop[i]=3Dfalse}}}}return false},ID:function(match){return =
match[1].replace(/\\/g,"")},TAG:function(match,curLoop){for(var =
i=3D0;curLoop[i]=3D=3D=3Dfalse;i++){}return =
curLoop[i]&&isXML(curLoop[i])?match[1]:match[1].toUpperCase()},CHILD:func=
tion(match){if(match[1]=3D=3D"nth"){var =
test=3D/(-?)(\d*)n((?:\+|-)?\d*)/.exec(match[2]=3D=3D"even"&&"2n"||match[=
2]=3D=3D"odd"&&"2n+1"||!/\D/.test(match[2])&&"0n+"+match[2]||match[2]);ma=
tch[2]=3D(test[1]+(test[2]||1))-0;match[3]=3Dtest[3]-0}match[0]=3Ddone++;=
return match},ATTR:function(match,curLoop,inplace,result,not,isXML){var =
name=3Dmatch[1].replace(/\\/g,"");if(!isXML&&Expr.attrMap[name]){match[1]=
=3DExpr.attrMap[name]}if(match[2]=3D=3D=3D"~=3D"){match[4]=3D" =
"+match[4]+" "}return =
match},PSEUDO:function(match,curLoop,inplace,result,not){if(match[1]=3D=3D=
=3D"not"){if(match[3].match(chunker).length>1||/^\w/.test(match[3])){matc=
h[3]=3DSizzle(match[3],null,null,curLoop)}else{var =
ret=3DSizzle.filter(match[3],curLoop,inplace,true^not);if(!inplace){resul=
t.push.apply(result,ret)}return =
false}}else{if(Expr.match.POS.test(match[0])||Expr.match.CHILD.test(match=
[0])){return true}}return =
match},POS:function(match){match.unshift(true);return =
match}},filters:{enabled:function(elem){return =
elem.disabled=3D=3D=3Dfalse&&elem.type!=3D=3D"hidden"},disabled:function(=
elem){return elem.disabled=3D=3D=3Dtrue},checked:function(elem){return =
elem.checked=3D=3D=3Dtrue},selected:function(elem){elem.parentNode.select=
edIndex;return elem.selected=3D=3D=3Dtrue},parent:function(elem){return =
!!elem.firstChild},empty:function(elem){return =
!elem.firstChild},has:function(elem,i,match){return =
!!Sizzle(match[3],elem).length},header:function(elem){return/h\d/i.test(e=
lem.nodeName)},text:function(elem){return"text"=3D=3D=3Delem.type},radio:=
function(elem){return"radio"=3D=3D=3Delem.type},checkbox:function(elem){r=
eturn"checkbox"=3D=3D=3Delem.type},file:function(elem){return"file"=3D=3D=
=3Delem.type},password:function(elem){return"password"=3D=3D=3Delem.type}=
,submit:function(elem){return"submit"=3D=3D=3Delem.type},image:function(e=
lem){return"image"=3D=3D=3Delem.type},reset:function(elem){return"reset"=3D=
=3D=3Delem.type},button:function(elem){return"button"=3D=3D=3Delem.type||=
elem.nodeName.toUpperCase()=3D=3D=3D"BUTTON"},input:function(elem){return=
/input|select|textarea|button/i.test(elem.nodeName)}},setFilters:{first:f=
unction(elem,i){return =
i=3D=3D=3D0},last:function(elem,i,match,array){return =
i=3D=3D=3Darray.length-1},even:function(elem,i){return =
i%2=3D=3D=3D0},odd:function(elem,i){return =
i%2=3D=3D=3D1},lt:function(elem,i,match){return =
i<match[3]-0},gt:function(elem,i,match){return =
i>match[3]-0},nth:function(elem,i,match){return =
match[3]-0=3D=3Di},eq:function(elem,i,match){return =
match[3]-0=3D=3Di}},filter:{PSEUDO:function(elem,match,i,array){var =
name=3Dmatch[1],filter=3DExpr.filters[name];if(filter){return =
filter(elem,i,match,array)}else{if(name=3D=3D=3D"contains"){return(elem.t=
extContent||elem.innerText||"").indexOf(match[3])>=3D0}else{if(name=3D=3D=
=3D"not"){var not=3Dmatch[3];for(var =
i=3D0,l=3Dnot.length;i<l;i++){if(not[i]=3D=3D=3Delem){return =
false}}return true}}}},CHILD:function(elem,match){var =
type=3Dmatch[1],node=3Delem;switch(type){case"only":case"first":while(nod=
e=3Dnode.previousSibling){if(node.nodeType=3D=3D=3D1){return =
false}}if(type=3D=3D"first"){return =
true}node=3Delem;case"last":while(node=3Dnode.nextSibling){if(node.nodeTy=
pe=3D=3D=3D1){return false}}return true;case"nth":var =
first=3Dmatch[2],last=3Dmatch[3];if(first=3D=3D1&&last=3D=3D0){return =
true}var =
doneName=3Dmatch[0],parent=3Delem.parentNode;if(parent&&(parent.sizcache!=
=3D=3DdoneName||!elem.nodeIndex)){var =
count=3D0;for(node=3Dparent.firstChild;node;node=3Dnode.nextSibling){if(n=
ode.nodeType=3D=3D=3D1){node.nodeIndex=3D++count}}parent.sizcache=3DdoneN=
ame}var diff=3Delem.nodeIndex-last;if(first=3D=3D0){return =
diff=3D=3D0}else{return(diff%first=3D=3D0&&diff/first>=3D0)}}},ID:functio=
n(elem,match){return =
elem.nodeType=3D=3D=3D1&&elem.getAttribute("id")=3D=3D=3Dmatch},TAG:funct=
ion(elem,match){return(match=3D=3D=3D"*"&&elem.nodeType=3D=3D=3D1)||elem.=
nodeName=3D=3D=3Dmatch},CLASS:function(elem,match){return(" =
"+(elem.className||elem.getAttribute("class"))+" =
").indexOf(match)>-1},ATTR:function(elem,match){var =
name=3Dmatch[1],result=3DExpr.attrHandle[name]?Expr.attrHandle[name](elem=
):elem[name]!=3Dnull?elem[name]:elem.getAttribute(name),value=3Dresult+""=
,type=3Dmatch[2],check=3Dmatch[4];return =
result=3D=3Dnull?type=3D=3D=3D"!=3D":type=3D=3D=3D"=3D"?value=3D=3D=3Dche=
ck:type=3D=3D=3D"*=3D"?value.indexOf(check)>=3D0:type=3D=3D=3D"~=3D"?(" =
"+value+" =
").indexOf(check)>=3D0:!check?value&&result!=3D=3Dfalse:type=3D=3D=3D"!=3D=
"?value!=3Dcheck:type=3D=3D=3D"^=3D"?value.indexOf(check)=3D=3D=3D0:type=3D=
=3D=3D"$=3D"?value.substr(value.length-check.length)=3D=3D=3Dcheck:type=3D=
=3D=3D"|=3D"?value=3D=3D=3Dcheck||value.substr(0,check.length+1)=3D=3D=3D=
check+"-":false},POS:function(elem,match,i,array){var =
name=3Dmatch[2],filter=3DExpr.setFilters[name];if(filter){return =
filter(elem,i,match,array)}}}};var origPOS=3DExpr.match.POS;for(var type =
in =
Expr.match){Expr.match[type]=3DRegExp(Expr.match[type].source+/(?![^\[]*\=
])(?![^\(]*\))/.source)}var =
makeArray=3Dfunction(array,results){array=3DArray.prototype.slice.call(ar=
ray);if(results){results.push.apply(results,array);return results}return =
array};try{Array.prototype.slice.call(document.documentElement.childNodes=
)}catch(e){makeArray=3Dfunction(array,results){var =
ret=3Dresults||[];if(toString.call(array)=3D=3D=3D"[object =
Array]"){Array.prototype.push.apply(ret,array)}else{if(typeof =
array.length=3D=3D=3D"number"){for(var =
i=3D0,l=3Darray.length;i<l;i++){ret.push(array[i])}}else{for(var =
i=3D0;array[i];i++){ret.push(array[i])}}}return ret}}var =
sortOrder;if(document.documentElement.compareDocumentPosition){sortOrder=3D=
function(a,b){var =
ret=3Da.compareDocumentPosition(b)&4?-1:a=3D=3D=3Db?0:1;if(ret=3D=3D=3D0)=
{hasDuplicate=3Dtrue}return ret}}else{if("sourceIndex" in =
document.documentElement){sortOrder=3Dfunction(a,b){var =
ret=3Da.sourceIndex-b.sourceIndex;if(ret=3D=3D=3D0){hasDuplicate=3Dtrue}r=
eturn ret}}else{if(document.createRange){sortOrder=3Dfunction(a,b){var =
aRange=3Da.ownerDocument.createRange(),bRange=3Db.ownerDocument.createRan=
ge();aRange.selectNode(a);aRange.collapse(true);bRange.selectNode(b);bRan=
ge.collapse(true);var =
ret=3DaRange.compareBoundaryPoints(Range.START_TO_END,bRange);if(ret=3D=3D=
=3D0){hasDuplicate=3Dtrue}return ret}}}}(function(){var =
form=3Ddocument.createElement("form"),id=3D"script"+(new =
Date).getTime();form.innerHTML=3D"<input name=3D'"+id+"'/>";var =
root=3Ddocument.documentElement;root.insertBefore(form,root.firstChild);i=
f(!!document.getElementById(id)){Expr.find.ID=3Dfunction(match,context,is=
XML){if(typeof context.getElementById!=3D=3D"undefined"&&!isXML){var =
m=3Dcontext.getElementById(match[1]);return =
m?m.id=3D=3D=3Dmatch[1]||typeof =
m.getAttributeNode!=3D=3D"undefined"&&m.getAttributeNode("id").nodeValue=3D=
=3D=3Dmatch[1]?[m]:undefined:[]}};Expr.filter.ID=3Dfunction(elem,match){v=
ar node=3Dtypeof =
elem.getAttributeNode!=3D=3D"undefined"&&elem.getAttributeNode("id");retu=
rn =
elem.nodeType=3D=3D=3D1&&node&&node.nodeValue=3D=3D=3Dmatch}}root.removeC=
hild(form)})();(function(){var =
div=3Ddocument.createElement("div");div.appendChild(document.createCommen=
t(""));if(div.getElementsByTagName("*").length>0){Expr.find.TAG=3Dfunctio=
n(match,context){var =
results=3Dcontext.getElementsByTagName(match[1]);if(match[1]=3D=3D=3D"*")=
{var tmp=3D[];for(var =
i=3D0;results[i];i++){if(results[i].nodeType=3D=3D=3D1){tmp.push(results[=
i])}}results=3Dtmp}return results}}div.innerHTML=3D"<a =
href=3D'#'></a>";if(div.firstChild&&typeof =
div.firstChild.getAttribute!=3D=3D"undefined"&&div.firstChild.getAttribut=
e("href")!=3D=3D"#"){Expr.attrHandle.href=3Dfunction(elem){return =
elem.getAttribute("href",2)}}})();if(document.querySelectorAll){(function=
(){var =
oldSizzle=3DSizzle,div=3Ddocument.createElement("div");div.innerHTML=3D"<=
p =
class=3D'TEST'></p>";if(div.querySelectorAll&&div.querySelectorAll(".TEST=
").length=3D=3D=3D0){return =
}Sizzle=3Dfunction(query,context,extra,seed){context=3Dcontext||document;=
if(!seed&&context.nodeType=3D=3D=3D9&&!isXML(context)){try{return =
makeArray(context.querySelectorAll(query),extra)}catch(e){}}return =
oldSizzle(query,context,extra,seed)};Sizzle.find=3DoldSizzle.find;Sizzle.=
filter=3DoldSizzle.filter;Sizzle.selectors=3DoldSizzle.selectors;Sizzle.m=
atches=3DoldSizzle.matches})()}if(document.getElementsByClassName&&docume=
nt.documentElement.getElementsByClassName){(function(){var =
div=3Ddocument.createElement("div");div.innerHTML=3D"<div class=3D'test =
e'></div><div =
class=3D'test'></div>";if(div.getElementsByClassName("e").length=3D=3D=3D=
0){return =
}div.lastChild.className=3D"e";if(div.getElementsByClassName("e").length=3D=
=3D=3D1){return =
}Expr.order.splice(1,0,"CLASS");Expr.find.CLASS=3Dfunction(match,context,=
isXML){if(typeof =
context.getElementsByClassName!=3D=3D"undefined"&&!isXML){return =
context.getElementsByClassName(match[1])}}})()}function =
dirNodeCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var =
sibDir=3Ddir=3D=3D"previousSibling"&&!isXML;for(var =
i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){if(sibDir&&elem.nodeType=3D=3D=3D1){elem.sizc=
ache=3DdoneName;elem.sizset=3Di}elem=3Delem[dir];var =
match=3Dfalse;while(elem){if(elem.sizcache=3D=3D=3DdoneName){match=3Dchec=
kSet[elem.sizset];break}if(elem.nodeType=3D=3D=3D1&&!isXML){elem.sizcache=
=3DdoneName;elem.sizset=3Di}if(elem.nodeName=3D=3D=3Dcur){match=3Delem;br=
eak}elem=3Delem[dir]}checkSet[i]=3Dmatch}}}function =
dirCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var =
sibDir=3Ddir=3D=3D"previousSibling"&&!isXML;for(var =
i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){if(sibDir&&elem.nodeType=3D=3D=3D1){elem.sizc=
ache=3DdoneName;elem.sizset=3Di}elem=3Delem[dir];var =
match=3Dfalse;while(elem){if(elem.sizcache=3D=3D=3DdoneName){match=3Dchec=
kSet[elem.sizset];break}if(elem.nodeType=3D=3D=3D1){if(!isXML){elem.sizca=
che=3DdoneName;elem.sizset=3Di}if(typeof =
cur!=3D=3D"string"){if(elem=3D=3D=3Dcur){match=3Dtrue;break}}else{if(Sizz=
le.filter(cur,[elem]).length>0){match=3Delem;break}}}elem=3Delem[dir]}che=
ckSet[i]=3Dmatch}}}var =
contains=3Ddocument.compareDocumentPosition?function(a,b){return =
a.compareDocumentPosition(b)&16}:function(a,b){return =
a!=3D=3Db&&(a.contains?a.contains(b):true)};var =
isXML=3Dfunction(elem){return =
elem.nodeType=3D=3D=3D9&&elem.documentElement.nodeName!=3D=3D"HTML"||!!el=
em.ownerDocument&&isXML(elem.ownerDocument)};var =
posProcess=3Dfunction(selector,context){var =
tmpSet=3D[],later=3D"",match,root=3Dcontext.nodeType?[context]:context;wh=
ile((match=3DExpr.match.PSEUDO.exec(selector))){later+=3Dmatch[0];selecto=
r=3Dselector.replace(Expr.match.PSEUDO,"")}selector=3DExpr.relative[selec=
tor]?selector+"*":selector;for(var =
i=3D0,l=3Droot.length;i<l;i++){Sizzle(selector,root[i],tmpSet)}return =
Sizzle.filter(later,tmpSet)};jQuery.find=3DSizzle;jQuery.filter=3DSizzle.=
filter;jQuery.expr=3DSizzle.selectors;jQuery.expr[":"]=3DjQuery.expr.filt=
ers;Sizzle.selectors.filters.hidden=3Dfunction(elem){return =
elem.offsetWidth=3D=3D=3D0||elem.offsetHeight=3D=3D=3D0};Sizzle.selectors=
.filters.visible=3Dfunction(elem){return =
elem.offsetWidth>0||elem.offsetHeight>0};Sizzle.selectors.filters.animate=
d=3Dfunction(elem){return jQuery.grep(jQuery.timers,function(fn){return =
elem=3D=3D=3Dfn.elem}).length};jQuery.multiFilter=3Dfunction(expr,elems,n=
ot){if(not){expr=3D":not("+expr+")"}return =
Sizzle.matches(expr,elems)};jQuery.dir=3Dfunction(elem,dir){var =
matched=3D[],cur=3Delem[dir];while(cur&&cur!=3Ddocument){if(cur.nodeType=3D=
=3D1){matched.push(cur)}cur=3Dcur[dir]}return =
matched};jQuery.nth=3Dfunction(cur,result,dir,elem){result=3Dresult||1;va=
r =
num=3D0;for(;cur;cur=3Dcur[dir]){if(cur.nodeType=3D=3D1&&++num=3D=3Dresul=
t){break}}return cur};jQuery.sibling=3Dfunction(n,elem){var =
r=3D[];for(;n;n=3Dn.nextSibling){if(n.nodeType=3D=3D1&&n!=3Delem){r.push(=
n)}}return r};return =
;window.Sizzle=3DSizzle})();jQuery.event=3D{add:function(elem,types,handl=
er,data){if(elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){return =
}if(elem.setInterval&&elem!=3Dwindow){elem=3Dwindow}if(!handler.guid){han=
dler.guid=3Dthis.guid++}if(data!=3D=3Dundefined){var =
fn=3Dhandler;handler=3Dthis.proxy(fn);handler.data=3Ddata}var =
events=3DjQuery.data(elem,"events")||jQuery.data(elem,"events",{}),handle=
=3DjQuery.data(elem,"handle")||jQuery.data(elem,"handle",function(){retur=
n typeof =
jQuery!=3D=3D"undefined"&&!jQuery.event.triggered?jQuery.event.handle.app=
ly(arguments.callee.elem,arguments):undefined});handle.elem=3Delem;jQuery=
.each(types.split(/\s+/),function(index,type){var =
namespaces=3Dtype.split(".");type=3Dnamespaces.shift();handler.type=3Dnam=
espaces.slice().sort().join(".");var =
handlers=3Devents[type];if(jQuery.event.specialAll[type]){jQuery.event.sp=
ecialAll[type].setup.call(elem,data,namespaces)}if(!handlers){handlers=3D=
events[type]=3D{};if(!jQuery.event.special[type]||jQuery.event.special[ty=
pe].setup.call(elem,data,namespaces)=3D=3D=3Dfalse){if(elem.addEventListe=
ner){elem.addEventListener(type,handle,false)}else{if(elem.attachEvent){e=
lem.attachEvent("on"+type,handle)}}}}handlers[handler.guid]=3Dhandler;jQu=
ery.event.global[type]=3Dtrue});elem=3Dnull},guid:1,global:{},remove:func=
tion(elem,types,handler){if(elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){r=
eturn }var =
events=3DjQuery.data(elem,"events"),ret,index;if(events){if(types=3D=3D=3D=
undefined||(typeof =
types=3D=3D=3D"string"&&types.charAt(0)=3D=3D".")){for(var type in =
events){this.remove(elem,type+(types||""))}}else{if(types.type){handler=3D=
types.handler;types=3Dtypes.type}jQuery.each(types.split(/\s+/),function(=
index,type){var =
namespaces=3Dtype.split(".");type=3Dnamespaces.shift();var =
namespace=3DRegExp("(^|\\.)"+namespaces.slice().sort().join(".*\\.")+"(\\=
.|$)");if(events[type]){if(handler){delete =
events[type][handler.guid]}else{for(var handle in =
events[type]){if(namespace.test(events[type][handle].type)){delete =
events[type][handle]}}}if(jQuery.event.specialAll[type]){jQuery.event.spe=
cialAll[type].teardown.call(elem,namespaces)}for(ret in =
events[type]){break}if(!ret){if(!jQuery.event.special[type]||jQuery.event=
.special[type].teardown.call(elem,namespaces)=3D=3D=3Dfalse){if(elem.remo=
veEventListener){elem.removeEventListener(type,jQuery.data(elem,"handle")=
,false)}else{if(elem.detachEvent){elem.detachEvent("on"+type,jQuery.data(=
elem,"handle"))}}}ret=3Dnull;delete events[type]}}})}for(ret in =
events){break}if(!ret){var =
handle=3DjQuery.data(elem,"handle");if(handle){handle.elem=3Dnull}jQuery.=
removeData(elem,"events");jQuery.removeData(elem,"handle")}}},trigger:fun=
ction(event,data,elem,bubbling){var =
type=3Devent.type||event;if(!bubbling){event=3Dtypeof =
event=3D=3D=3D"object"?event[expando]?event:jQuery.extend(jQuery.Event(ty=
pe),event):jQuery.Event(type);if(type.indexOf("!")>=3D0){event.type=3Dtyp=
e=3Dtype.slice(0,-1);event.exclusive=3Dtrue}if(!elem){event.stopPropagati=
on();if(this.global[type]){jQuery.each(jQuery.cache,function(){if(this.ev=
ents&&this.events[type]){jQuery.event.trigger(event,data,this.handle.elem=
)}})}}if(!elem||elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){return =
undefined}event.result=3Dundefined;event.target=3Delem;data=3DjQuery.make=
Array(data);data.unshift(event)}event.currentTarget=3Delem;var =
handle=3DjQuery.data(elem,"handle");if(handle){handle.apply(elem,data)}if=
((!elem[type]||(jQuery.nodeName(elem,"a")&&type=3D=3D"click"))&&elem["on"=
+type]&&elem["on"+type].apply(elem,data)=3D=3D=3Dfalse){event.result=3Dfa=
lse}if(!bubbling&&elem[type]&&!event.isDefaultPrevented()&&!(jQuery.nodeN=
ame(elem,"a")&&type=3D=3D"click")){this.triggered=3Dtrue;try{elem[type]()=
}catch(e){}}this.triggered=3Dfalse;if(!event.isPropagationStopped()){var =
parent=3Delem.parentNode||elem.ownerDocument;if(parent){jQuery.event.trig=
ger(event,data,parent,true)}}},handle:function(event){var =
all,handlers;event=3Darguments[0]=3DjQuery.event.fix(event||window.event)=
;event.currentTarget=3Dthis;var =
namespaces=3Devent.type.split(".");event.type=3Dnamespaces.shift();all=3D=
!namespaces.length&&!event.exclusive;var =
namespace=3DRegExp("(^|\\.)"+namespaces.slice().sort().join(".*\\.")+"(\\=
.|$)");handlers=3D(jQuery.data(this,"events")||{})[event.type];for(var j =
in handlers){var =
handler=3Dhandlers[j];if(all||namespace.test(handler.type)){event.handler=
=3Dhandler;event.data=3Dhandler.data;var =
ret=3Dhandler.apply(this,arguments);if(ret!=3D=3Dundefined){event.result=3D=
ret;if(ret=3D=3D=3Dfalse){event.preventDefault();event.stopPropagation()}=
}if(event.isImmediatePropagationStopped()){break}}}},props:"altKey =
attrChange attrName bubbles button cancelable charCode clientX clientY =
ctrlKey currentTarget data detail eventPhase fromElement handler keyCode =
metaKey newValue originalTarget pageX pageY prevValue relatedNode =
relatedTarget screenX screenY shiftKey srcElement target toElement view =
wheelDelta which".split(" =
"),fix:function(event){if(event[expando]){return event}var =
originalEvent=3Devent;event=3DjQuery.Event(originalEvent);for(var =
i=3Dthis.props.length,prop;i;){prop=3Dthis.props[--i];event[prop]=3Dorigi=
nalEvent[prop]}if(!event.target){event.target=3Devent.srcElement||documen=
t}if(event.target.nodeType=3D=3D3){event.target=3Devent.target.parentNode=
}if(!event.relatedTarget&&event.fromElement){event.relatedTarget=3Devent.=
fromElement=3D=3Devent.target?event.toElement:event.fromElement}if(event.=
pageX=3D=3Dnull&&event.clientX!=3Dnull){var =
doc=3Ddocument.documentElement,body=3Ddocument.body;event.pageX=3Devent.c=
lientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc.clientLeft||0=
);event.pageY=3Devent.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||=
0)-(doc.clientTop||0)}if(!event.which&&((event.charCode||event.charCode=3D=
=3D=3D0)?event.charCode:event.keyCode)){event.which=3Devent.charCode||eve=
nt.keyCode}if(!event.metaKey&&event.ctrlKey){event.metaKey=3Devent.ctrlKe=
y}if(!event.which&&event.button){event.which=3D(event.button&1?1:(event.b=
utton&2?3:(event.button&4?2:0)))}return =
event},proxy:function(fn,proxy){proxy=3Dproxy||function(){return =
fn.apply(this,arguments)};proxy.guid=3Dfn.guid=3Dfn.guid||proxy.guid||thi=
s.guid++;return =
proxy},special:{ready:{setup:bindReady,teardown:function(){}}},specialAll=
:{live:{setup:function(selector,namespaces){jQuery.event.add(this,namespa=
ces[0],liveHandler)},teardown:function(namespaces){if(namespaces.length){=
var =
remove=3D0,name=3DRegExp("(^|\\.)"+namespaces[0]+"(\\.|$)");jQuery.each((=
jQuery.data(this,"events").live||{}),function(){if(name.test(this.type)){=
remove++}});if(remove<1){jQuery.event.remove(this,namespaces[0],liveHandl=
er)}}}}}};jQuery.Event=3Dfunction(src){if(!this.preventDefault){return =
new =
jQuery.Event(src)}if(src&&src.type){this.originalEvent=3Dsrc;this.type=3D=
src.type}else{this.type=3Dsrc}this.timeStamp=3Dnow();this[expando]=3Dtrue=
};function returnFalse(){return false}function returnTrue(){return =
true}jQuery.Event.prototype=3D{preventDefault:function(){this.isDefaultPr=
evented=3DreturnTrue;var e=3Dthis.originalEvent;if(!e){return =
}if(e.preventDefault){e.preventDefault()}e.returnValue=3Dfalse},stopPropa=
gation:function(){this.isPropagationStopped=3DreturnTrue;var =
e=3Dthis.originalEvent;if(!e){return =
}if(e.stopPropagation){e.stopPropagation()}e.cancelBubble=3Dtrue},stopImm=
ediatePropagation:function(){this.isImmediatePropagationStopped=3DreturnT=
rue;this.stopPropagation()},isDefaultPrevented:returnFalse,isPropagationS=
topped:returnFalse,isImmediatePropagationStopped:returnFalse};var =
withinElement=3Dfunction(event){var =
parent=3Devent.relatedTarget;while(parent&&parent!=3Dthis){try{parent=3Dp=
arent.parentNode}catch(e){parent=3Dthis}}if(parent!=3Dthis){event.type=3D=
event.data;jQuery.event.handle.apply(this,arguments)}};jQuery.each({mouse=
over:"mouseenter",mouseout:"mouseleave"},function(orig,fix){jQuery.event.=
special[fix]=3D{setup:function(){jQuery.event.add(this,orig,withinElement=
,fix)},teardown:function(){jQuery.event.remove(this,orig,withinElement)}}=
});jQuery.fn.extend({bind:function(type,data,fn){return =
type=3D=3D"unload"?this.one(type,data,fn):this.each(function(){jQuery.eve=
nt.add(this,type,fn||data,fn&&data)})},one:function(type,data,fn){var =
one=3DjQuery.event.proxy(fn||data,function(event){jQuery(this).unbind(eve=
nt,one);return(fn||data).apply(this,arguments)});return =
this.each(function(){jQuery.event.add(this,type,one,fn&&data)})},unbind:f=
unction(type,fn){return =
this.each(function(){jQuery.event.remove(this,type,fn)})},trigger:functio=
n(type,data){return =
this.each(function(){jQuery.event.trigger(type,data,this)})},triggerHandl=
er:function(type,data){if(this[0]){var =
event=3DjQuery.Event(type);event.preventDefault();event.stopPropagation()=
;jQuery.event.trigger(event,data,this[0]);return =
event.result}},toggle:function(fn){var =
args=3Darguments,i=3D1;while(i<args.length){jQuery.event.proxy(fn,args[i+=
+])}return =
this.click(jQuery.event.proxy(fn,function(event){this.lastToggle=3D(this.=
lastToggle||0)%i;event.preventDefault();return =
args[this.lastToggle++].apply(this,arguments)||false}))},hover:function(f=
nOver,fnOut){return =
this.mouseenter(fnOver).mouseleave(fnOut)},ready:function(fn){bindReady()=
;if(jQuery.isReady){fn.call(document,jQuery)}else{jQuery.readyList.push(f=
n)}return this},live:function(type,fn){var =
proxy=3DjQuery.event.proxy(fn);proxy.guid+=3Dthis.selector+type;jQuery(do=
cument).bind(liveConvert(type,this.selector),this.selector,proxy);return =
this},die:function(type,fn){jQuery(document).unbind(liveConvert(type,this=
.selector),fn?{guid:fn.guid+this.selector+type}:null);return =
this}});function liveHandler(event){var =
check=3DRegExp("(^|\\.)"+event.type+"(\\.|$)"),stop=3Dtrue,elems=3D[];jQu=
ery.each(jQuery.data(this,"events").live||[],function(i,fn){if(check.test=
(fn.type)){var =
elem=3DjQuery(event.target).closest(fn.data)[0];if(elem){elems.push({elem=
:elem,fn:fn})}}});elems.sort(function(a,b){return =
jQuery.data(a.elem,"closest")-jQuery.data(b.elem,"closest")});jQuery.each=
(elems,function(){if(this.fn.call(this.elem,event,this.fn.data)=3D=3D=3Df=
alse){return(stop=3Dfalse)}});return stop}function =
liveConvert(type,selector){return["live",type,selector.replace(/\./g,"`")=
.replace(/ =
/g,"|")].join(".")}jQuery.extend({isReady:false,readyList:[],ready:functi=
on(){if(!jQuery.isReady){jQuery.isReady=3Dtrue;if(jQuery.readyList){jQuer=
y.each(jQuery.readyList,function(){this.call(document,jQuery)});jQuery.re=
adyList=3Dnull}jQuery(document).triggerHandler("ready")}}});var =
readyBound=3Dfalse;function bindReady(){if(readyBound){return =
}readyBound=3Dtrue;if(document.addEventListener){document.addEventListene=
r("DOMContentLoaded",function(){document.removeEventListener("DOMContentL=
oaded",arguments.callee,false);jQuery.ready()},false)}else{if(document.at=
tachEvent){document.attachEvent("onreadystatechange",function(){if(docume=
nt.readyState=3D=3D=3D"complete"){document.detachEvent("onreadystatechang=
e",arguments.callee);jQuery.ready()}});if(document.documentElement.doScro=
ll&&window=3D=3Dwindow.top){(function(){if(jQuery.isReady){return =
}try{document.documentElement.doScroll("left")}catch(error){setTimeout(ar=
guments.callee,0);return =
}jQuery.ready()})()}}}jQuery.event.add(window,"load",jQuery.ready)}jQuery=
.each(("blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mou=
seup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,sub=
mit,keydown,keypress,keyup,error").split(","),function(i,name){jQuery.fn[=
name]=3Dfunction(fn){return =
fn?this.bind(name,fn):this.trigger(name)}});jQuery(window).bind("unload",=
function(){for(var id in =
jQuery.cache){if(id!=3D1&&jQuery.cache[id].handle){jQuery.event.remove(jQ=
uery.cache[id].handle.elem)}}});(function(){jQuery.support=3D{};var =
root=3Ddocument.documentElement,script=3Ddocument.createElement("script")=
,div=3Ddocument.createElement("div"),id=3D"script"+(new =
Date).getTime();div.style.display=3D"none";div.innerHTML=3D'   =
<link/><table></table><a href=3D"/a" =
style=3D"color:red;float:left;opacity:.5;">a</a><select><option>text</opt=
ion></select><object><param/></object>';var =
all=3Ddiv.getElementsByTagName("*"),a=3Ddiv.getElementsByTagName("a")[0];=
if(!all||!all.length||!a){return =
}jQuery.support=3D{leadingWhitespace:div.firstChild.nodeType=3D=3D3,tbody=
:!div.getElementsByTagName("tbody").length,objectAll:!!div.getElementsByT=
agName("object")[0].getElementsByTagName("*").length,htmlSerialize:!!div.=
getElementsByTagName("link").length,style:/red/.test(a.getAttribute("styl=
e")),hrefNormalized:a.getAttribute("href")=3D=3D=3D"/a",opacity:a.style.o=
pacity=3D=3D=3D"0.5",cssFloat:!!a.style.cssFloat,scriptEval:false,noClone=
Event:true,boxModel:null};script.type=3D"text/javascript";try{script.appe=
ndChild(document.createTextNode("window."+id+"=3D1;"))}catch(e){}root.ins=
ertBefore(script,root.firstChild);if(window[id]){jQuery.support.scriptEva=
l=3Dtrue;delete =
window[id]}root.removeChild(script);if(div.attachEvent&&div.fireEvent){di=
v.attachEvent("onclick",function(){jQuery.support.noCloneEvent=3Dfalse;di=
v.detachEvent("onclick",arguments.callee)});div.cloneNode(true).fireEvent=
("onclick")}jQuery(function(){var =
div=3Ddocument.createElement("div");div.style.width=3Ddiv.style.paddingLe=
ft=3D"1px";document.body.appendChild(div);jQuery.boxModel=3DjQuery.suppor=
t.boxModel=3Ddiv.offsetWidth=3D=3D=3D2;document.body.removeChild(div).sty=
le.display=3D"none"})})();var =
styleFloat=3DjQuery.support.cssFloat?"cssFloat":"styleFloat";jQuery.props=
=3D{"for":"htmlFor","class":"className","float":styleFloat,cssFloat:style=
Float,styleFloat:styleFloat,readonly:"readOnly",maxlength:"maxLength",cel=
lspacing:"cellSpacing",rowspan:"rowSpan",tabindex:"tabIndex"};jQuery.fn.e=
xtend({_load:jQuery.fn.load,load:function(url,params,callback){if(typeof =
url!=3D=3D"string"){return this._load(url)}var off=3Durl.indexOf(" =
");if(off>=3D0){var =
selector=3Durl.slice(off,url.length);url=3Durl.slice(0,off)}var =
type=3D"GET";if(params){if(jQuery.isFunction(params)){callback=3Dparams;p=
arams=3Dnull}else{if(typeof =
params=3D=3D=3D"object"){params=3DjQuery.param(params);type=3D"POST"}}}va=
r =
self=3Dthis;jQuery.ajax({url:url,type:type,dataType:"html",data:params,co=
mplete:function(res,status){if(status=3D=3D"success"||status=3D=3D"notmod=
ified"){self.html(selector?jQuery("<div/>").append(res.responseText.repla=
ce(/<script(.|\s)*?\/script>/g,"")).find(selector):res.responseText)}if(c=
allback){self.each(callback,[res.responseText,status,res])}}});return =
this},serialize:function(){return =
jQuery.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?jQuery.makeArray(this.elements):this}).filter(function(){re=
turn =
this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.no=
deName)||/text|hidden|password|search/i.test(this.type))}).map(function(i=
,elem){var val=3DjQuery(this).val();return =
val=3D=3Dnull?null:jQuery.isArray(val)?jQuery.map(val,function(val,i){ret=
urn{name:elem.name,value:val}}):{name:elem.name,value:val}}).get()}});jQu=
ery.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend"=
.split(","),function(i,o){jQuery.fn[o]=3Dfunction(f){return =
this.bind(o,f)}});var =
jsc=3Dnow();jQuery.extend({get:function(url,data,callback,type){if(jQuery=
.isFunction(data)){callback=3Ddata;data=3Dnull}return =
jQuery.ajax({type:"GET",url:url,data:data,success:callback,dataType:type}=
)},getScript:function(url,callback){return =
jQuery.get(url,null,callback,"script")},getJSON:function(url,data,callbac=
k){return =
jQuery.get(url,data,callback,"json")},post:function(url,data,callback,typ=
e){if(jQuery.isFunction(data)){callback=3Ddata;data=3D{}}return =
jQuery.ajax({type:"POST",url:url,data:data,success:callback,dataType:type=
})},ajaxSetup:function(settings){jQuery.extend(jQuery.ajaxSettings,settin=
gs)},ajaxSettings:{url:location.href,global:true,type:"GET",contentType:"=
application/x-www-form-urlencoded",processData:true,async:true,xhr:functi=
on(){return window.ActiveXObject?new =
ActiveXObject("Microsoft.XMLHTTP"):new =
XMLHttpRequest()},accepts:{xml:"application/xml, =
text/xml",html:"text/html",script:"text/javascript, =
application/javascript",json:"application/json, =
text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:=
function(s){s=3DjQuery.extend(true,s,jQuery.extend(true,{},jQuery.ajaxSet=
tings,s));var =
jsonp,jsre=3D/=3D\?(&|$)/g,status,data,type=3Ds.type.toUpperCase();if(s.d=
ata&&s.processData&&typeof =
s.data!=3D=3D"string"){s.data=3DjQuery.param(s.data)}if(s.dataType=3D=3D"=
jsonp"){if(type=3D=3D"GET"){if(!s.url.match(jsre)){s.url+=3D(s.url.match(=
/\?/)?"&":"?")+(s.jsonp||"callback")+"=3D?"}}else{if(!s.data||!s.data.mat=
ch(jsre)){s.data=3D(s.data?s.data+"&":"")+(s.jsonp||"callback")+"=3D?"}}s=
.dataType=3D"json"}if(s.dataType=3D=3D"json"&&(s.data&&s.data.match(jsre)=
||s.url.match(jsre))){jsonp=3D"jsonp"+jsc++;if(s.data){s.data=3D(s.data+"=
").replace(jsre,"=3D"+jsonp+"$1")}s.url=3Ds.url.replace(jsre,"=3D"+jsonp+=
"$1");s.dataType=3D"script";window[jsonp]=3Dfunction(tmp){data=3Dtmp;succ=
ess();complete();window[jsonp]=3Dundefined;try{delete =
window[jsonp]}catch(e){}if(head){head.removeChild(script)}}}if(s.dataType=
=3D=3D"script"&&s.cache=3D=3Dnull){s.cache=3Dfalse}if(s.cache=3D=3D=3Dfal=
se&&type=3D=3D"GET"){var ts=3Dnow();var =
ret=3Ds.url.replace(/(\?|&)_=3D.*?(&|$)/,"$1_=3D"+ts+"$2");s.url=3Dret+((=
ret=3D=3Ds.url)?(s.url.match(/\?/)?"&":"?")+"_=3D"+ts:"")}if(s.data&&type=
=3D=3D"GET"){s.url+=3D(s.url.match(/\?/)?"&":"?")+s.data;s.data=3Dnull}if=
(s.global&&!jQuery.active++){jQuery.event.trigger("ajaxStart")}var =
parts=3D/^(\w+:)?\/\/([^\/?#]+)/.exec(s.url);if(s.dataType=3D=3D"script"&=
&type=3D=3D"GET"&&parts&&(parts[1]&&parts[1]!=3Dlocation.protocol||parts[=
2]!=3Dlocation.host)){var =
head=3Ddocument.getElementsByTagName("head")[0];var =
script=3Ddocument.createElement("script");script.src=3Ds.url;if(s.scriptC=
harset){script.charset=3Ds.scriptCharset}if(!jsonp){var =
done=3Dfalse;script.onload=3Dscript.onreadystatechange=3Dfunction(){if(!d=
one&&(!this.readyState||this.readyState=3D=3D"loaded"||this.readyState=3D=
=3D"complete")){done=3Dtrue;success();complete();script.onload=3Dscript.o=
nreadystatechange=3Dnull;head.removeChild(script)}}}head.appendChild(scri=
pt);return undefined}var requestDone=3Dfalse;var =
xhr=3Ds.xhr();if(s.username){xhr.open(type,s.url,s.async,s.username,s.pas=
sword)}else{xhr.open(type,s.url,s.async)}try{if(s.data){xhr.setRequestHea=
der("Content-Type",s.contentType)}if(s.ifModified){xhr.setRequestHeader("=
If-Modified-Since",jQuery.lastModified[s.url]||"Thu, 01 Jan 1970 =
00:00:00 =
GMT")}xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.setRe=
questHeader("Accept",s.dataType&&s.accepts[s.dataType]?s.accepts[s.dataTy=
pe]+", =
*/*":s.accepts._default)}catch(e){}if(s.beforeSend&&s.beforeSend(xhr,s)=3D=
=3D=3Dfalse){if(s.global&&!--jQuery.active){jQuery.event.trigger("ajaxSto=
p")}xhr.abort();return =
false}if(s.global){jQuery.event.trigger("ajaxSend",[xhr,s])}var =
onreadystatechange=3Dfunction(isTimeout){if(xhr.readyState=3D=3D0){if(iva=
l){clearInterval(ival);ival=3Dnull;if(s.global&&!--jQuery.active){jQuery.=
event.trigger("ajaxStop")}}}else{if(!requestDone&&xhr&&(xhr.readyState=3D=
=3D4||isTimeout=3D=3D"timeout")){requestDone=3Dtrue;if(ival){clearInterva=
l(ival);ival=3Dnull}status=3DisTimeout=3D=3D"timeout"?"timeout":!jQuery.h=
ttpSuccess(xhr)?"error":s.ifModified&&jQuery.httpNotModified(xhr,s.url)?"=
notmodified":"success";if(status=3D=3D"success"){try{data=3DjQuery.httpDa=
ta(xhr,s.dataType,s)}catch(e){status=3D"parsererror"}}if(status=3D=3D"suc=
cess"){var =
modRes;try{modRes=3Dxhr.getResponseHeader("Last-Modified")}catch(e){}if(s=
.ifModified&&modRes){jQuery.lastModified[s.url]=3DmodRes}if(!jsonp){succe=
ss()}}else{jQuery.handleError(s,xhr,status)}complete();if(isTimeout){xhr.=
abort()}if(s.async){xhr=3Dnull}}}};if(s.async){var =
ival=3DsetInterval(onreadystatechange,13);if(s.timeout>0){setTimeout(func=
tion(){if(xhr&&!requestDone){onreadystatechange("timeout")}},s.timeout)}}=
try{xhr.send(s.data)}catch(e){jQuery.handleError(s,xhr,null,e)}if(!s.asyn=
c){onreadystatechange()}function =
success(){if(s.success){s.success(data,status)}if(s.global){jQuery.event.=
trigger("ajaxSuccess",[xhr,s])}}function =
complete(){if(s.complete){s.complete(xhr,status)}if(s.global){jQuery.even=
t.trigger("ajaxComplete",[xhr,s])}if(s.global&&!--jQuery.active){jQuery.e=
vent.trigger("ajaxStop")}}return =
xhr},handleError:function(s,xhr,status,e){if(s.error){s.error(xhr,status,=
e)}if(s.global){jQuery.event.trigger("ajaxError",[xhr,s,e])}},active:0,ht=
tpSuccess:function(xhr){try{return =
!xhr.status&&location.protocol=3D=3D"file:"||(xhr.status>=3D200&&xhr.stat=
us<300)||xhr.status=3D=3D304||xhr.status=3D=3D1223}catch(e){}return =
false},httpNotModified:function(xhr,url){try{var =
xhrRes=3Dxhr.getResponseHeader("Last-Modified");return =
xhr.status=3D=3D304||xhrRes=3D=3DjQuery.lastModified[url]}catch(e){}retur=
n false},httpData:function(xhr,type,s){var =
ct=3Dxhr.getResponseHeader("content-type"),xml=3Dtype=3D=3D"xml"||!type&&=
ct&&ct.indexOf("xml")>=3D0,data=3Dxml?xhr.responseXML:xhr.responseText;if=
(xml&&data.documentElement.tagName=3D=3D"parsererror"){throw"parsererror"=
}if(s&&s.dataFilter){data=3Ds.dataFilter(data,type)}if(typeof =
data=3D=3D=3D"string"){if(type=3D=3D"script"){jQuery.globalEval(data)}if(=
type=3D=3D"json"){data=3Dwindow["eval"]("("+data+")")}}return =
data},param:function(a){var s=3D[];function =
add(key,value){s[s.length]=3DencodeURIComponent(key)+"=3D"+encodeURICompo=
nent(value)}if(jQuery.isArray(a)||a.jquery){jQuery.each(a,function(){add(=
this.name,this.value)})}else{for(var j in =
a){if(jQuery.isArray(a[j])){jQuery.each(a[j],function(){add(j,this)})}els=
e{add(j,jQuery.isFunction(a[j])?a[j]():a[j])}}}return =
s.join("&").replace(/%20/g,"+")}});var =
elemdisplay=3D{},timerId,fxAttrs=3D[["height","marginTop","marginBottom",=
"paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddin=
gLeft","paddingRight"],["opacity"]];function genFx(type,num){var =
obj=3D{};jQuery.each(fxAttrs.concat.apply([],fxAttrs.slice(0,num)),functi=
on(){obj[this]=3Dtype});return =
obj}jQuery.fn.extend({show:function(speed,callback){if(speed){return =
this.animate(genFx("show",3),speed,callback)}else{for(var =
i=3D0,l=3Dthis.length;i<l;i++){var =
old=3DjQuery.data(this[i],"olddisplay");this[i].style.display=3Dold||"";i=
f(jQuery.css(this[i],"display")=3D=3D=3D"none"){var =
tagName=3Dthis[i].tagName,display;if(elemdisplay[tagName]){display=3Delem=
display[tagName]}else{var elem=3DjQuery("<"+tagName+" =
/>").appendTo("body");display=3Delem.css("display");if(display=3D=3D=3D"n=
one"){display=3D"block"}elem.remove();elemdisplay[tagName]=3Ddisplay}jQue=
ry.data(this[i],"olddisplay",display)}}for(var =
i=3D0,l=3Dthis.length;i<l;i++){this[i].style.display=3DjQuery.data(this[i=
],"olddisplay")||""}return =
this}},hide:function(speed,callback){if(speed){return =
this.animate(genFx("hide",3),speed,callback)}else{for(var =
i=3D0,l=3Dthis.length;i<l;i++){var =
old=3DjQuery.data(this[i],"olddisplay");if(!old&&old!=3D=3D"none"){jQuery=
.data(this[i],"olddisplay",jQuery.css(this[i],"display"))}}for(var =
i=3D0,l=3Dthis.length;i<l;i++){this[i].style.display=3D"none"}return =
this}},_toggle:jQuery.fn.toggle,toggle:function(fn,fn2){var =
bool=3Dtypeof fn=3D=3D=3D"boolean";return =
jQuery.isFunction(fn)&&jQuery.isFunction(fn2)?this._toggle.apply(this,arg=
uments):fn=3D=3Dnull||bool?this.each(function(){var =
state=3Dbool?fn:jQuery(this).is(":hidden");jQuery(this)[state?"show":"hid=
e"]()}):this.animate(genFx("toggle",3),fn,fn2)},fadeTo:function(speed,to,=
callback){return =
this.animate({opacity:to},speed,callback)},animate:function(prop,speed,ea=
sing,callback){var optall=3DjQuery.speed(speed,easing,callback);return =
this[optall.queue=3D=3D=3Dfalse?"each":"queue"](function(){var =
opt=3DjQuery.extend({},optall),p,hidden=3Dthis.nodeType=3D=3D1&&jQuery(th=
is).is(":hidden"),self=3Dthis;for(p in =
prop){if(prop[p]=3D=3D"hide"&&hidden||prop[p]=3D=3D"show"&&!hidden){retur=
n =
opt.complete.call(this)}if((p=3D=3D"height"||p=3D=3D"width")&&this.style)=
{opt.display=3DjQuery.css(this,"display");opt.overflow=3Dthis.style.overf=
low}}if(opt.overflow!=3Dnull){this.style.overflow=3D"hidden"}opt.curAnim=3D=
jQuery.extend({},prop);jQuery.each(prop,function(name,val){var e=3Dnew =
jQuery.fx(self,opt,name);if(/toggle|show|hide/.test(val)){e[val=3D=3D"tog=
gle"?hidden?"show":"hide":val](prop)}else{var =
parts=3Dval.toString().match(/^([+-]=3D)?([\d+-.]+)(.*)$/),start=3De.cur(=
true)||0;if(parts){var =
end=3DparseFloat(parts[2]),unit=3Dparts[3]||"px";if(unit!=3D"px"){self.st=
yle[name]=3D(end||1)+unit;start=3D((end||1)/e.cur(true))*start;self.style=
[name]=3Dstart+unit}if(parts[1]){end=3D((parts[1]=3D=3D"-=3D"?-1:1)*end)+=
start}e.custom(start,end,unit)}else{e.custom(start,val,"")}}});return =
true})},stop:function(clearQueue,gotoEnd){var =
timers=3DjQuery.timers;if(clearQueue){this.queue([])}this.each(function()=
{for(var =
i=3Dtimers.length-1;i>=3D0;i--){if(timers[i].elem=3D=3Dthis){if(gotoEnd){=
timers[i](true)}timers.splice(i,1)}}});if(!gotoEnd){this.dequeue()}return=
 =
this}});jQuery.each({slideDown:genFx("show",1),slideUp:genFx("hide",1),sl=
ideToggle:genFx("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hid=
e"}},function(name,props){jQuery.fn[name]=3Dfunction(speed,callback){retu=
rn =
this.animate(props,speed,callback)}});jQuery.extend({speed:function(speed=
,easing,fn){var opt=3Dtypeof =
speed=3D=3D=3D"object"?speed:{complete:fn||!fn&&easing||jQuery.isFunction=
(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!jQuery.isFuncti=
on(easing)&&easing};opt.duration=3DjQuery.fx.off?0:typeof =
opt.duration=3D=3D=3D"number"?opt.duration:jQuery.fx.speeds[opt.duration]=
||jQuery.fx.speeds._default;opt.old=3Dopt.complete;opt.complete=3Dfunctio=
n(){if(opt.queue!=3D=3Dfalse){jQuery(this).dequeue()}if(jQuery.isFunction=
(opt.old)){opt.old.call(this)}};return =
opt},easing:{linear:function(p,n,firstNum,diff){return =
firstNum+diff*p},swing:function(p,n,firstNum,diff){return((-Math.cos(p*Ma=
th.PI)/2)+0.5)*diff+firstNum}},timers:[],fx:function(elem,options,prop){t=
his.options=3Doptions;this.elem=3Delem;this.prop=3Dprop;if(!options.orig)=
{options.orig=3D{}}}});jQuery.fx.prototype=3D{update:function(){if(this.o=
ptions.step){this.options.step.call(this.elem,this.now,this)}(jQuery.fx.s=
tep[this.prop]||jQuery.fx.step._default)(this);if((this.prop=3D=3D"height=
"||this.prop=3D=3D"width")&&this.elem.style){this.elem.style.display=3D"b=
lock"}},cur:function(force){if(this.elem[this.prop]!=3Dnull&&(!this.elem.=
style||this.elem.style[this.prop]=3D=3Dnull)){return =
this.elem[this.prop]}var =
r=3DparseFloat(jQuery.css(this.elem,this.prop,force));return =
r&&r>-10000?r:parseFloat(jQuery.curCSS(this.elem,this.prop))||0},custom:f=
unction(from,to,unit){this.startTime=3Dnow();this.start=3Dfrom;this.end=3D=
to;this.unit=3Dunit||this.unit||"px";this.now=3Dthis.start;this.pos=3Dthi=
s.state=3D0;var self=3Dthis;function t(gotoEnd){return =
self.step(gotoEnd)}t.elem=3Dthis.elem;if(t()&&jQuery.timers.push(t)&&!tim=
erId){timerId=3DsetInterval(function(){var =
timers=3DjQuery.timers;for(var =
i=3D0;i<timers.length;i++){if(!timers[i]()){timers.splice(i--,1)}}if(!tim=
ers.length){clearInterval(timerId);timerId=3Dundefined}},13)}},show:funct=
ion(){this.options.orig[this.prop]=3DjQuery.attr(this.elem.style,this.pro=
p);this.options.show=3Dtrue;this.custom(this.prop=3D=3D"width"||this.prop=
=3D=3D"height"?1:0,this.cur());jQuery(this.elem).show()},hide:function(){=
this.options.orig[this.prop]=3DjQuery.attr(this.elem.style,this.prop);thi=
s.options.hide=3Dtrue;this.custom(this.cur(),0)},step:function(gotoEnd){v=
ar =
t=3Dnow();if(gotoEnd||t>=3Dthis.options.duration+this.startTime){this.now=
=3Dthis.end;this.pos=3Dthis.state=3D1;this.update();this.options.curAnim[=
this.prop]=3Dtrue;var done=3Dtrue;for(var i in =
this.options.curAnim){if(this.options.curAnim[i]!=3D=3Dtrue){done=3Dfalse=
}}if(done){if(this.options.display!=3Dnull){this.elem.style.overflow=3Dth=
is.options.overflow;this.elem.style.display=3Dthis.options.display;if(jQu=
ery.css(this.elem,"display")=3D=3D"none"){this.elem.style.display=3D"bloc=
k"}}if(this.options.hide){jQuery(this.elem).hide()}if(this.options.hide||=
this.options.show){for(var p in =
this.options.curAnim){jQuery.attr(this.elem.style,p,this.options.orig[p])=
}}this.options.complete.call(this.elem)}return false}else{var =
n=3Dt-this.startTime;this.state=3Dn/this.options.duration;this.pos=3DjQue=
ry.easing[this.options.easing||(jQuery.easing.swing?"swing":"linear")](th=
is.state,n,0,1,this.options.duration);this.now=3Dthis.start+((this.end-th=
is.start)*this.pos);this.update()}return =
true}};jQuery.extend(jQuery.fx,{speeds:{slow:600,fast:200,_default:400},s=
tep:{opacity:function(fx){jQuery.attr(fx.elem.style,"opacity",fx.now)},_d=
efault:function(fx){if(fx.elem.style&&fx.elem.style[fx.prop]!=3Dnull){fx.=
elem.style[fx.prop]=3Dfx.now+fx.unit}else{fx.elem[fx.prop]=3Dfx.now}}}});=
if(document.documentElement.getBoundingClientRect){jQuery.fn.offset=3Dfun=
ction(){if(!this[0]){return{top:0,left:0}}if(this[0]=3D=3D=3Dthis[0].owne=
rDocument.body){return jQuery.offset.bodyOffset(this[0])}var =
box=3Dthis[0].getBoundingClientRect(),doc=3Dthis[0].ownerDocument,body=3D=
doc.body,docElem=3Ddoc.documentElement,clientTop=3DdocElem.clientTop||bod=
y.clientTop||0,clientLeft=3DdocElem.clientLeft||body.clientLeft||0,top=3D=
box.top+(self.pageYOffset||jQuery.boxModel&&docElem.scrollTop||body.scrol=
lTop)-clientTop,left=3Dbox.left+(self.pageXOffset||jQuery.boxModel&&docEl=
em.scrollLeft||body.scrollLeft)-clientLeft;return{top:top,left:left}}}els=
e{jQuery.fn.offset=3Dfunction(){if(!this[0]){return{top:0,left:0}}if(this=
[0]=3D=3D=3Dthis[0].ownerDocument.body){return =
jQuery.offset.bodyOffset(this[0])}jQuery.offset.initialized||jQuery.offse=
t.initialize();var =
elem=3Dthis[0],offsetParent=3Delem.offsetParent,prevOffsetParent=3Delem,d=
oc=3Delem.ownerDocument,computedStyle,docElem=3Ddoc.documentElement,body=3D=
doc.body,defaultView=3Ddoc.defaultView,prevComputedStyle=3DdefaultView.ge=
tComputedStyle(elem,null),top=3Delem.offsetTop,left=3Delem.offsetLeft;whi=
le((elem=3Delem.parentNode)&&elem!=3D=3Dbody&&elem!=3D=3DdocElem){compute=
dStyle=3DdefaultView.getComputedStyle(elem,null);top-=3Delem.scrollTop,le=
ft-=3Delem.scrollLeft;if(elem=3D=3D=3DoffsetParent){top+=3Delem.offsetTop=
,left+=3Delem.offsetLeft;if(jQuery.offset.doesNotAddBorder&&!(jQuery.offs=
et.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(elem.tagName))){t=
op+=3DparseInt(computedStyle.borderTopWidth,10)||0,left+=3DparseInt(compu=
tedStyle.borderLeftWidth,10)||0}prevOffsetParent=3DoffsetParent,offsetPar=
ent=3Delem.offsetParent}if(jQuery.offset.subtractsBorderForOverflowNotVis=
ible&&computedStyle.overflow!=3D=3D"visible"){top+=3DparseInt(computedSty=
le.borderTopWidth,10)||0,left+=3DparseInt(computedStyle.borderLeftWidth,1=
0)||0}prevComputedStyle=3DcomputedStyle}if(prevComputedStyle.position=3D=3D=
=3D"relative"||prevComputedStyle.position=3D=3D=3D"static"){top+=3Dbody.o=
ffsetTop,left+=3Dbody.offsetLeft}if(prevComputedStyle.position=3D=3D=3D"f=
ixed"){top+=3DMath.max(docElem.scrollTop,body.scrollTop),left+=3DMath.max=
(docElem.scrollLeft,body.scrollLeft)}return{top:top,left:left}}}jQuery.of=
fset=3D{initialize:function(){if(this.initialized){return }var =
body=3Ddocument.body,container=3Ddocument.createElement("div"),innerDiv,c=
heckDiv,table,td,rules,prop,bodyMarginTop=3Dbody.style.marginTop,html=3D'=
<div style=3D"position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;"><div></div></div><table =
style=3D"position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;" cellpadding=3D"0" =
cellspacing=3D"0"><tr><td></td></tr></table>';rules=3D{position:"absolute=
",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hid=
den"};for(prop in =
rules){container.style[prop]=3Drules[prop]}container.innerHTML=3Dhtml;bod=
y.insertBefore(container,body.firstChild);innerDiv=3Dcontainer.firstChild=
,checkDiv=3DinnerDiv.firstChild,td=3DinnerDiv.nextSibling.firstChild.firs=
tChild;this.doesNotAddBorder=3D(checkDiv.offsetTop!=3D=3D5);this.doesAddB=
orderForTableAndCells=3D(td.offsetTop=3D=3D=3D5);innerDiv.style.overflow=3D=
"hidden",innerDiv.style.position=3D"relative";this.subtractsBorderForOver=
flowNotVisible=3D(checkDiv.offsetTop=3D=3D=3D-5);body.style.marginTop=3D"=
1px";this.doesNotIncludeMarginInBodyOffset=3D(body.offsetTop=3D=3D=3D0);b=
ody.style.marginTop=3DbodyMarginTop;body.removeChild(container);this.init=
ialized=3Dtrue},bodyOffset:function(body){jQuery.offset.initialized||jQue=
ry.offset.initialize();var =
top=3Dbody.offsetTop,left=3Dbody.offsetLeft;if(jQuery.offset.doesNotInclu=
deMarginInBodyOffset){top+=3DparseInt(jQuery.curCSS(body,"marginTop",true=
),10)||0,left+=3DparseInt(jQuery.curCSS(body,"marginLeft",true),10)||0}re=
turn{top:top,left:left}}};jQuery.fn.extend({position:function(){var =
left=3D0,top=3D0,results;if(this[0]){var =
offsetParent=3Dthis.offsetParent(),offset=3Dthis.offset(),parentOffset=3D=
/^body|html$/i.test(offsetParent[0].tagName)?{top:0,left:0}:offsetParent.=
offset();offset.top-=3Dnum(this,"marginTop");offset.left-=3Dnum(this,"mar=
ginLeft");parentOffset.top+=3Dnum(offsetParent,"borderTopWidth");parentOf=
fset.left+=3Dnum(offsetParent,"borderLeftWidth");results=3D{top:offset.to=
p-parentOffset.top,left:offset.left-parentOffset.left}}return =
results},offsetParent:function(){var =
offsetParent=3Dthis[0].offsetParent||document.body;while(offsetParent&&(!=
/^body|html$/i.test(offsetParent.tagName)&&jQuery.css(offsetParent,"posit=
ion")=3D=3D"static")){offsetParent=3DoffsetParent.offsetParent}return =
jQuery(offsetParent)}});jQuery.each(["Left","Top"],function(i,name){var =
method=3D"scroll"+name;jQuery.fn[method]=3Dfunction(val){if(!this[0]){ret=
urn null}return =
val!=3D=3Dundefined?this.each(function(){this=3D=3Dwindow||this=3D=3Ddocu=
ment?window.scrollTo(!i?val:jQuery(window).scrollLeft(),i?val:jQuery(wind=
ow).scrollTop()):this[method]=3Dval}):this[0]=3D=3Dwindow||this[0]=3D=3Dd=
ocument?self[i?"pageYOffset":"pageXOffset"]||jQuery.boxModel&&document.do=
cumentElement[method]||document.body[method]:this[0][method]}});jQuery.ea=
ch(["Height","Width"],function(i,name){var =
tl=3Di?"Left":"Top",br=3Di?"Right":"Bottom",lower=3Dname.toLowerCase();jQ=
uery.fn["inner"+name]=3Dfunction(){return =
this[0]?jQuery.css(this[0],lower,false,"padding"):null};jQuery.fn["outer"=
+name]=3Dfunction(margin){return =
this[0]?jQuery.css(this[0],lower,false,margin?"margin":"border"):null};va=
r type=3Dname.toLowerCase();jQuery.fn[type]=3Dfunction(size){return =
this[0]=3D=3Dwindow?document.compatMode=3D=3D"CSS1Compat"&&document.docum=
entElement["client"+name]||document.body["client"+name]:this[0]=3D=3Ddocu=
ment?Math.max(document.documentElement["client"+name],document.body["scro=
ll"+name],document.documentElement["scroll"+name],document.body["offset"+=
name],document.documentElement["offset"+name]):size=3D=3D=3Dundefined?(th=
is.length?jQuery.css(this[0],type):null):this.css(type,typeof =
size=3D=3D=3D"string"?size:size+"px")}})})();
------=_NextPart_000_008E_01CFB219.FFF2C320--
