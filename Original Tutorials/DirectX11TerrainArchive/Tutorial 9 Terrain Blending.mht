From: "Saved by Internet Explorer 11"
Subject: Tutorial 9: Terrain Blending
Date: Thu, 7 Aug 2014 08:32:21 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CFB21A.1B1C3140"
X-MimeOLE: Produced By Microsoft MimeOLE V6.3.9600.16384

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/web/20140722204927/http://rastertek.com/tertut09.html

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><META content=3D"IE=3D5.0000" =
http-equiv=3D"X-UA-Compatible">

<SCRIPT src=3D"http://web.archive.org/static/js/analytics.js" =
type=3D"text/javascript"></SCRIPT>
=20
<META http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3Dutf-8"><LINK =
href=3D"http://web.archive.org/static/css/banner-styles.css"=20
rel=3D"stylesheet" type=3D"text/css"> <TITLE>Tutorial 9: Terrain =
Blending</TITLE>
<META name=3D"GENERATOR" content=3D"MSHTML 11.00.9600.17207"></HEAD>=20
<BODY text=3D"#ffffff" bgcolor=3D"#000000"><!-- BEGIN WAYBACK TOOLBAR =
INSERT -->=20
<SCRIPT> if (window.archive_analytics) { =
window.archive_analytics.values['server_name']=3D"wwwb-app16.us.archive.o=
rg";}; </SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/js/disclaim-element.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/js/graph-calc.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/jflot/jquery.min.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT type=3D"text/javascript">=0A=
//<![CDATA[=0A=
var firstDate =3D 820454400000;=0A=
var lastDate =3D 1420070399999;=0A=
var wbPrefix =3D "/web/";=0A=
var wbCurrentUrl =3D "http:\/\/rastertek.com\/tertut09.html";=0A=
=0A=
var curYear =3D -1;=0A=
var curMonth =3D -1;=0A=
var yearCount =3D 18;=0A=
var firstYear =3D 1996;=0A=
var imgWidth =3D 475;=0A=
var yearImgWidth =3D 25;=0A=
var monthImgWidth =3D 2;=0A=
var trackerVal =3D "none";=0A=
var displayDay =3D "22";=0A=
var displayMonth =3D "Jul";=0A=
var displayYear =3D "2014";=0A=
var prettyMonths =3D =
["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]=
;=0A=
=0A=
function showTrackers(val) {=0A=
	if(val =3D=3D trackerVal) {=0A=
		return;=0A=
	}=0A=
	if(val =3D=3D "inline") {=0A=
		document.getElementById("displayYearEl").style.color =3D "#ec008c";=0A=
		document.getElementById("displayMonthEl").style.color =3D "#ec008c";=0A=
		document.getElementById("displayDayEl").style.color =3D "#ec008c";		=0A=
	} else {=0A=
		document.getElementById("displayYearEl").innerHTML =3D displayYear;=0A=
		document.getElementById("displayYearEl").style.color =3D "#ff0";=0A=
		document.getElementById("displayMonthEl").innerHTML =3D displayMonth;=0A=
		document.getElementById("displayMonthEl").style.color =3D "#ff0";=0A=
		document.getElementById("displayDayEl").innerHTML =3D displayDay;=0A=
		document.getElementById("displayDayEl").style.color =3D "#ff0";=0A=
	}=0A=
   document.getElementById("wbMouseTrackYearImg").style.display =3D val;=0A=
   document.getElementById("wbMouseTrackMonthImg").style.display =3D val;=0A=
   trackerVal =3D val;=0A=
}=0A=
function getElementX2(obj) {=0A=
	var thing =3D jQuery(obj);=0A=
	if((thing =3D=3D undefined) =0A=
			|| (typeof thing =3D=3D "undefined") =0A=
			|| (typeof thing.offset =3D=3D "undefined")) {=0A=
		return getElementX(obj);=0A=
	}=0A=
	return Math.round(thing.offset().left);=0A=
}=0A=
function trackMouseMove(event,element) {=0A=
=0A=
   var eventX =3D getEventX(event);=0A=
   var elementX =3D getElementX2(element);=0A=
   var xOff =3D eventX - elementX;=0A=
	if(xOff < 0) {=0A=
		xOff =3D 0;=0A=
	} else if(xOff > imgWidth) {=0A=
		xOff =3D imgWidth;=0A=
	}=0A=
   var monthOff =3D xOff % yearImgWidth;=0A=
=0A=
   var year =3D Math.floor(xOff / yearImgWidth);=0A=
	var yearStart =3D year * yearImgWidth;=0A=
   var monthOfYear =3D Math.floor(monthOff / monthImgWidth);=0A=
   if(monthOfYear > 11) {=0A=
       monthOfYear =3D 11;=0A=
   }=0A=
   // 1 extra border pixel at the left edge of the year:=0A=
   var month =3D (year * 12) + monthOfYear;=0A=
   var day =3D 1;=0A=
	if(monthOff % 2 =3D=3D 1) {=0A=
		day =3D 15;=0A=
	}=0A=
	var dateString =3D =0A=
		zeroPad(year + firstYear) + =0A=
		zeroPad(monthOfYear+1,2) +=0A=
		zeroPad(day,2) + "000000";=0A=
=0A=
	var monthString =3D prettyMonths[monthOfYear];=0A=
	document.getElementById("displayYearEl").innerHTML =3D year + 1996;=0A=
	document.getElementById("displayMonthEl").innerHTML =3D monthString;=0A=
	// looks too jarring when it changes..=0A=
	//document.getElementById("displayDayEl").innerHTML =3D zeroPad(day,2);=0A=
=0A=
	var url =3D wbPrefix + dateString + '/' +  wbCurrentUrl;=0A=
	document.getElementById('wm-graph-anchor').href =3D url;=0A=
=0A=
   //document.getElementById("wmtbURL").value=3D"evX("+eventX+") =
elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") =
monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") =
ms("+monthString+")";=0A=
   if(curYear !=3D year) {=0A=
       var yrOff =3D year * yearImgWidth;=0A=
       document.getElementById("wbMouseTrackYearImg").style.left =3D =
yrOff + "px";=0A=
       curYear =3D year;=0A=
   }=0A=
   if(curMonth !=3D month) {=0A=
       var mtOff =3D year + (month * monthImgWidth) + 1;=0A=
       document.getElementById("wbMouseTrackMonthImg").style.left =3D =
mtOff + "px";=0A=
       curMonth =3D month;=0A=
   }=0A=
}=0A=
//]]>=0A=
</SCRIPT>
=20
<STYLE =
type=3D"text/css">body{margin-top:0!important;padding-top:0!important;min=
-width:800px!important;}#wm-ipp =
a:hover{text-decoration:underline!important;}</STYLE>
=20
<DIV class=3D"__wb_banner_div" id=3D"wm-ipp" lang=3D"en" =
style=3D"padding: 0px 5px; display: none; position: relative; =
min-height: 70px; min-width: 800px;">
<DIV class=3D"__wb_banner_div" id=3D"wm-ipp-inside" =
style=3D'border-width: medium 5px 5px; border-style: none solid solid; =
border-color: currentColor rgb(0, 0, 0) rgb(0, 0, 0); margin: 0px =
!important; padding: 0px !important; border-image: none; width: 97%; =
text-align: center; font-family: "Lucida Grande","Arial",sans-serif =
!important; font-size: 11px !important; position: fixed; min-width: =
780px; box-shadow: 1px 1px 3px #333; background-image: =
url("/static/images/toolbar/wm_tb_bk_trns.png"); -moz-box-shadow: 1px =
1px 3px #333; -webkit-box-shadow: 1px 1px 3px #333;'>
<TABLE style=3D"margin: 0px; padding: 0px; width: 100%; border-collapse: =
collapse;">
  <TBODY>
  <TR>
    <TD style=3D"padding: 10px; vertical-align: top; min-width: =
110px;"><A=20
      title=3D"Wayback Machine home page" style=3D"border: currentColor; =
border-image: none; background-color: transparent;"=20
      href=3D"http://web.archive.org/web/"><IMG width=3D"110" =
height=3D"39" alt=3D"Wayback Machine"=20
      =
src=3D"http://web.archive.org/static/images/toolbar/wayback-toolbar-logo.=
png"=20
      border=3D"0"></A>    </TD>
    <TD style=3D"padding: 0px !important; width: 100%; text-align: =
center; vertical-align: top;">
      <TABLE style=3D"margin: 0px auto; padding: 0px; width: 570px; =
border-collapse: collapse;">
        <TBODY>
        <TR>
          <TD style=3D"padding: 3px 0px;" colspan=3D"2">
            <FORM name=3D"wmtb" id=3D"wmtb" style=3D"margin: 0px =
!important; padding: 0px !important;"=20
            action=3D"/web/form-submit.jsp" method=3D"get"=20
target=3D"_top"><INPUT name=3D"url" id=3D"wmtbURL" style=3D'width: =
400px; font-family: "Lucida Grande","Arial",sans-serif; font-size: =
11px;' onfocus=3D"javascript:this.focus();this.select();" type=3D"text" =
value=3D"http://rastertek.com/tertut09.html"><INPUT name=3D"type" =
type=3D"hidden" value=3D"replay"><INPUT name=3D"date" type=3D"hidden" =
value=3D"20140722204927"><INPUT style=3D'width: inherit !important; =
font-family: "Lucida Grande","Arial",sans-serif; font-size: 11px; =
margin-left: 5px;' type=3D"submit" value=3D"Go"><SPAN=20
            id=3D"wm_tb_options" style=3D"display: =
block;"></SPAN></FORM></TD>
          <TD style=3D"padding: 5px 0px 0px !important; vertical-align: =
bottom;"=20
          rowspan=3D"2">
            <TABLE style=3D'width: 110px; color: rgb(153, 153, 170); =
font-family: "Helvetica","Lucida Grande","Arial",sans-serif; =
border-collapse: collapse;'>
              <TBODY><!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->    =
       =20
              <TR style=3D"width: 110px; height: 16px; font-size: 10px =
!important;">
                <TD nowrap=3D"nowrap" style=3D"text-align: right; =
text-transform: uppercase; overflow: visible; padding-right: 9px; =
font-size: 11px !important; font-weight: bold; white-space: nowrap;"><A=20
                  title=3D"1 Jan 2013" style=3D"border: currentColor; =
border-image: none; color: rgb(51, 51, 255); font-weight: bold; =
text-decoration: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20130101032622/http://www.rastertek.co=
m/tertut09.html"><STRONG>JAN</STRONG></A>
                  		                                </TD>
                <TD title=3D"You are here: 20:49:27 Jul 22, 2014" =
id=3D"displayMonthEl"=20
                style=3D"background: rgb(0, 0, 0); width: 34px; height: =
15px; text-align: center; color: rgb(255, 255, 0); text-transform: =
uppercase; padding-top: 1px; font-size: 11px !important; font-weight: =
bold;">JUL</TD>
                <TD nowrap=3D"nowrap" style=3D"text-transform: =
uppercase; overflow: visible; padding-left: 9px; font-size: 11px =
!important; font-weight: bold; white-space: nowrap;">=20
                                                       Aug               =
       =20
                                  </TD></TR><!-- NEXT/PREV CAPTURE NAV =
AND DAY OF MONTH INDICATOR -->=20
                        =20
              <TR>
                <TD nowrap=3D"nowrap" style=3D"text-align: right =
!important; overflow: visible; padding-right: 9px; vertical-align: =
middle !important; white-space: nowrap;"><A=20
                  title=3D"3:26:22 Jan 1, 2013" style=3D"border: =
currentColor; border-image: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20130101032622/http://www.rastertek.co=
m/tertut09.html"><IMG=20
                  width=3D"14" height=3D"16" alt=3D"Previous capture" =
src=3D"http://web.archive.org/static/images/toolbar/wm_tb_prv_on.png"=20
                  border=3D"0"></A>		                                =
</TD>
                <TD title=3D"You are here: 20:49:27 Jul 22, 2014" =
id=3D"displayDayEl"=20
                style=3D"background: rgb(0, 0, 0); padding: 2px 0px 0px; =
width: 34px; height: 24px; text-align: center; color: rgb(255, 255, 0); =
font-size: 24px; font-weight: bold;">22</TD>
                <TD nowrap=3D"nowrap" style=3D"text-align: left =
!important; overflow: visible; padding-left: 9px; vertical-align: middle =
!important; white-space: nowrap;"><IMG=20
                  width=3D"14" height=3D"16" alt=3D"Next capture" =
src=3D"http://web.archive.org/static/images/toolbar/wm_tb_nxt_off.png"=20
                  border=3D"0">                       			     =
</TD></TR><!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->=20
                        =20
              <TR=20
style=3D"width: 110px; height: 13px; font-size: 9px !important;">
                <TD nowrap=3D"nowrap" style=3D"text-align: right; =
overflow: visible; padding-right: 9px; font-size: 11px !important; =
font-weight: bold; white-space: nowrap;"><A=20
                  title=3D"1 Jan 2013" style=3D"border: currentColor; =
border-image: none; color: rgb(51, 51, 255); font-weight: bold; =
text-decoration: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20130101032622/http://www.rastertek.co=
m/tertut09.html"><STRONG>2013</STRONG></A>
                  		                                </TD>
                <TD title=3D"You are here: 20:49:27 Jul 22, 2014" =
id=3D"displayYearEl"=20
                style=3D"background: rgb(0, 0, 0); width: 34px; height: =
13px; text-align: center; color: rgb(255, 255, 0); padding-top: 1px; =
font-size: 11px !important; font-weight: bold;">2014</TD>
                <TD nowrap=3D"nowrap" style=3D"overflow: visible; =
padding-left: 9px; font-size: 11px !important; font-weight: bold; =
white-space: nowrap;">=20
                                                       2015              =
       =20
                   				 </TD></TR></TBODY></TABLE></TD></TR>
        <TR>
          <TD style=3D"padding: 0px !important; vertical-align: =
middle;"><A=20
            title=3D"See a list of every capture for this URL" =
style=3D"border: currentColor; border-image: none; color: rgb(51, 51, =
255); font-size: 11px; font-weight: bold; background-color: =
transparent;"=20
            =
href=3D"http://web.archive.org/web/20140722204927*/http://rastertek.com/t=
ertut09.html"><STRONG>5=20
            captures</STRONG></A>           =20
            <DIV title=3D"Timespan for captures of this URL" =
class=3D"__wb_banner_div"=20
            style=3D"margin: 0px !important; padding: 2px 0px 0px =
!important; color: rgb(102, 102, 102); font-size: 9px; white-space: =
nowrap;">10=20
            Oct 11 - 22 Jul 14</DIV></TD>
          <TD style=3D"padding: 0px !important;"><A =
id=3D"wm-graph-anchor" style=3D"width: 475px; height: 27px; white-space: =
nowrap; position: relative;"=20
            =
href=3D"http://web.archive.org/web/20140722204927/http://rastertek.com/">=

            <DIV title=3D"Explore captures for this URL" =
class=3D"__wb_banner_div"=20
            id=3D"wm-ipp-sparkline" style=3D"width: 475px; height: 27px; =
border-right-color: rgb(204, 204, 204); border-right-width: 1px; =
border-right-style: solid; white-space: nowrap; position: relative; =
cursor: pointer; background-color: rgb(255, 255, 255);"><IMG=20
            width=3D"475" height=3D"27" id=3D"sparklineImgId" =
style=3D"left: 0px; top: 0px; position: absolute; z-index: 9012;"=20
            onmouseover=3D"showTrackers('inline');" =
onmouseout=3D"showTrackers('none');"=20
            onmousemove=3D"trackMouseMove(event,this)" =
alt=3D"sparklines" =
src=3D"http://web.archive.org/web/jsp/graph.jsp?graphdata=3D475_27_1996:-=
1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:00000000=
0000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:=
-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:0000000=
00000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010=
:-1:000000000000_2011:-1:000000000101_2012:-1:000000000010_2013:-1:100000=
000000_2014:6:000000100000"=20
            border=3D"0">			 <IMG width=3D"25" height=3D"27" =
id=3D"wbMouseTrackYearImg"=20
            style=3D"display: none; position: absolute; z-index: 9010;" =
src=3D"http://web.archive.org/static/images/toolbar/transp-yellow-pixel.p=
ng"=20
            border=3D"0">			 <IMG width=3D"2" height=3D"27" =
id=3D"wbMouseTrackMonthImg"=20
            style=3D"display: none; position: absolute; z-index: 9011;" =
src=3D"http://web.archive.org/static/images/toolbar/transp-red-pixel.png"=
=20
            border=3D"0">        </DIV></A>        =
</TD></TR></TBODY></TABLE></TD>
    <TD style=3D"padding: 5px; width: 65px; text-align: right; =
font-size: 11px !important;"><A=20
      title=3D"Close the toolbar" style=3D'background: =
url("/static/images/toolbar/wm_tb_close.png") no-repeat 100% 0px; =
border: currentColor; border-image: none; color: rgb(51, 51, 255); =
padding-right: 18px; font-family: "Lucida Grande","Arial",sans-serif; =
margin-bottom: 23px; display: block;'=20
      =
onclick=3D"document.getElementById('wm-ipp').style.display=3D'none';" =
href=3D"javascript:;">Close</A><A=20
      title=3D"Get some help using the Wayback Machine" =
style=3D'background: url("/static/images/toolbar/wm_tb_help.png") =
no-repeat 100% 0px; border: currentColor; border-image: none; color: =
rgb(51, 51, 255); padding-right: 18px; font-family: "Lucida =
Grande","Arial",sans-serif; display: block;'=20
      =
href=3D"http://faq.web.archive.org/">Help</A></TD></TR></TBODY></TABLE></=
DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
 var wmDisclaimBanner =3D document.getElementById("wm-ipp");=0A=
 if(wmDisclaimBanner !=3D null) {=0A=
   disclaimElement(wmDisclaimBanner);=0A=
 }=0A=
</SCRIPT>
 <!-- END WAYBACK TOOLBAR INSERT -->=20
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"4"><B>Tutorial 9:=20
Terrain Blending </B></FONT></P>
<P align=3D"left"><IMG width=3D"800" height=3D"1" =
src=3D"http://web.archive.org/web/20140722204927im_/http://rastertek.com/=
pic1001.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
DirectX 11=20
terrain tutorial will cover how to blend textures on terrain using alpha =
maps to=20
create a smooth transition between different textures. The code in this =
tutorial=20
is based on the color mapping tutorial. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">To =
blend textures on=20
terrain we use the same principles as were discussed in the DirectX =
alpha=20
mapping tutorial. We take two color textures and blend them together on =
a pixel=20
by pixel basis using the alpha map texture as the blending value. Now to =
do this=20
on a large terrain requires quite a few different alpha maps to achieve=20
different texture transitions. It will also require a number of =
different=20
textures to create the look we are going for. A combination of two =
textures and=20
a alpha map will be referred to as a material. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">For =
each material we=20
will want to just set the two textures and alpha map once and then draw =
all the=20
terrain associated with this material. To do this we will need to break =
the=20
terrain into vertex buffers based on materials. The combination of the =
material=20
and its vertex/index buffer will be called a material group. You have =
seen this=20
same kind of thing in the quad tree tutorial where we broke the terrain =
into=20
buffers for each node, this is the same thing except for materials. =
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">To =
setup a material=20
based rendering system for terrain we will first need a text file =
containing all=20
the textures and alpha maps that will be used for the terrain. This file =
will=20
also contain the list of materials which is just a combination of those =
same=20
textures and alpha maps. Here is the example one we use for this =
tutorial:=20
</FONT></P>
<PRE><FONT color=3D"#ffffff" face=3D"arial" size=3D"2">Texture Count: 7=0A=
=0A=
0: ../Engine/data/texture01.dds=0A=
1: ../Engine/data/texture02.dds=0A=
2: ../Engine/data/texture03.dds=0A=
3: ../Engine/data/alpha01.dds=0A=
4: ../Engine/data/alpha02.dds=0A=
5: ../Engine/data/alpha03.dds=0A=
6: ../Engine/data/alpha04.dds=0A=
=0A=
Material Count: 8=0A=
=0A=
0: 0 -1 -1   0 255   0=0A=
1: 1 -1 -1 255   0   0=0A=
2: 1  0  4   0   0 255=0A=
3: 1  0  3   0 255 255=0A=
4: 2 -1 -1 255 255 255=0A=
5: 0  2  3 128 128 128=0A=
6: 0  2  5 128   0   0=0A=
7: 0  2  6   0   0 128=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">As =
you can see it=20
starts with a texture count and then lists all the textures and alpha =
maps that=20
should be loaded and used in the terrain rendering. The second portion =
is where=20
the materials are defined. It starts with a material count and then =
lists each=20
material defined by indexes. The first index is the first texture.   For =
example=20
if the index is 1 then it is referring to the texture02.dds file. The =
second=20
index is the texture to blend with, it works the same way except that if =
it is=20
defined as -1 then it means this material does not blend and is just the =
texture=20
by itself. The third index is the alpha map.  For example if the third =
index is=20
3 then it refers to the alpha01.dds alpha map. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
last three=20
numbers are a red, green, blue index. They are used together to define a =
color=20
that represents this particular material. So for example the first =
material is=20
0, 255, 0 which means the material is defined by green. Now what we do =
is use a=20
bitmap with each of the colors as an index and location where the =
material=20
should be rendered on the terrain. For this tutorial we will use the =
following=20
bitmap as our material map: </FONT></P>
<P align=3D"left"><IMG width=3D"64" height=3D"64" =
src=3D"http://web.archive.org/web/20140722204927im_/http://rastertek.com/=
pic0189.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
you can that the=20
green is the lower right section in the material map. So every quad in =
the=20
terrain in that lower right section would use the first material. You =
can also=20
see the top left section is mostly white, which means that material 4 =
which is=20
defined by 255, 255, 255 would be used to render to those parts of the =
terrain.
 There are also thin lines along the borders which are usually a alpha =
map=20
between the two textures so they transition by blending between the two=20
materials of the two regions. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
main reason for=20
using this is because it gives you or the artist 100% control of how the =
terrain=20
will look. Most procedural methods usually use some kind of slope and =
height=20
equation which works well for uninhabited areas that have general =
terrain. But=20
anything that is inhabited or has unique features to it will require a =
way to=20
define those features. Using a material map is one of the easier ways to =
do so.=20
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Also =
note that most=20
programmers will build a separate terrain creation tool which does this =
inside=20
the tool and then exports everything as models so the vertex buffers are =
already=20
prepared in advance and easy to load into the engine. I am doing it =
inside the=20
engine for this tutorial so you can see how it works without the need to =
explain=20
a terrain generation tool also. And like usual this tutorial is not =
optimized so=20
it is easier to read and understand how it works and then you can =
optimize it=20
later for your own needs. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
will start the=20
code section of the tutorial by looking at the changes to the HLSL =
shader files.=20
</FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrain.vs</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
terrain vertex=20
shader remains the same as it was in the color mapping tutorial. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrain.vs=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
cbuffer MatrixBuffer=0A=
{=0A=
    matrix worldMatrix;=0A=
    matrix viewMatrix;=0A=
    matrix projectionMatrix;=0A=
};=0A=
=0A=
=0A=
//////////////=0A=
// TYPEDEFS //=0A=
//////////////=0A=
struct VertexInputType=0A=
{=0A=
    float4 position : POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
    float3 normal : NORMAL;=0A=
    float4 color : COLOR;=0A=
};=0A=
=0A=
struct PixelInputType=0A=
{=0A=
    float4 position : SV_POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
    float3 normal : NORMAL;=0A=
    float4 color : COLOR;=0A=
};=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Vertex Shader=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
PixelInputType TerrainVertexShader(VertexInputType input)=0A=
{=0A=
    PixelInputType output;=0A=
    =0A=
=0A=
    // Change the position vector to be 4 units for proper matrix =
calculations.=0A=
    input.position.w =3D 1.0f;=0A=
=0A=
    // Calculate the position of the vertex against the world, view, and =
projection matrices.=0A=
    output.position =3D mul(input.position, worldMatrix);=0A=
    output.position =3D mul(output.position, viewMatrix);=0A=
    output.position =3D mul(output.position, projectionMatrix);=0A=
    =0A=
    // Store the texture coordinates for the pixel shader.=0A=
    output.tex =3D input.tex;=0A=
=0A=
    // Calculate the normal vector against the world matrix only.=0A=
    output.normal =3D mul(input.normal, (float3x3)worldMatrix);=0A=
	=0A=
    // Normalize the normal vector.=0A=
    output.normal =3D normalize(output.normal);=0A=
=0A=
    // Send the color map color into the pixel shader.	=0A=
    output.color =3D input.color;=0A=
=0A=
    return output;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrain.ps</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrain.ps=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
have three=20
textures for the terrain pixel shader. The first two are the two color =
textures=20
that will be blended together. The third texture is the alpha map which =
will be=20
used to determine how the two color textures are blended together. =
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">Texture2D =
shaderTexture1 : register(t0);=0A=
Texture2D shaderTexture2 : register(t1);=0A=
Texture2D alphaMap : register(t2);</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
SamplerState SampleType;=0A=
=0A=
cbuffer LightBuffer=0A=
{=0A=
    float4 ambientColor;=0A=
    float4 diffuseColor;=0A=
    float3 lightDirection;=0A=
    float padding;=0A=
};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">There is a new=20
buffer to hold the boolean value indicating if the textures should be =
blended=20
together or if only one should be rendered with no blending. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">cbuffer =
TextureInfoBuffer=0A=
{=0A=
    bool useAlplha;=0A=
    float3 padding2;=0A=
};</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
=0A=
//////////////=0A=
// TYPEDEFS //=0A=
//////////////=0A=
struct PixelInputType=0A=
{=0A=
    float4 position : SV_POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
    float3 normal : NORMAL;=0A=
    float4 color : COLOR;=0A=
};=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Pixel Shader=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
float4 TerrainPixelShader(PixelInputType input) : SV_TARGET=0A=
{=0A=
    float4 color;=0A=
    float3 lightDir;=0A=
    float lightIntensity;</FONT><FONT color=3D"#aaaaff" face=3D"arial" =
size=3D"2">=0A=
    float4 textureColor1;=0A=
    float4 textureColor2;=0A=
    float4 alphaValue;=0A=
    float4 blendColor;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
=0A=
=0A=
    // Set the default output color to the ambient light value for all =
pixels.=0A=
    color =3D ambientColor;=0A=
=0A=
    // Invert the light direction for calculations.=0A=
    lightDir =3D -lightDirection;=0A=
=0A=
    // Calculate the amount of light on this pixel.=0A=
    lightIntensity =3D saturate(dot(input.normal, lightDir));=0A=
=0A=
    if(lightIntensity &gt; 0.0f)=0A=
    {=0A=
        // Determine the final diffuse color based on the diffuse color =
and the amount of light intensity.=0A=
        color +=3D (diffuseColor * lightIntensity);=0A=
    }=0A=
=0A=
    // Saturate the final light color.=0A=
    color =3D saturate(color);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">If =
the boolean value=20
indicates to blend then we first sample the two color textures and the =
alpha=20
map. After that we blend the two color textures together based on the =
alpha=20
value in the alpha map. This type of blending was covered in the DirectX =

blending tutorials. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">    if(useAlplha)=0A=
    {=0A=
        // Sample the pixel color from the first texture using the =
sampler at this texture coordinate location.=0A=
        textureColor1 =3D shaderTexture1.Sample(SampleType, input.tex);=0A=
=0A=
        // Sample the pixel color from the second texture using the =
sampler at this texture coordinate location.=0A=
        textureColor2 =3D shaderTexture2.Sample(SampleType, input.tex);=0A=
=0A=
        // Sample the alpha blending value.=0A=
        alphaValue =3D alphaMap.Sample(SampleType, input.tex);=0A=
		=0A=
        // Alpha blend the two colors together based on the alpha value.=0A=
        blendColor =3D (alphaValue * textureColor2) + ((1.0 - =
alphaValue) * textureColor1);=0A=
    }=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">If =
the boolean value=20
indicates that we should not blend then we just sample the first color =
texture=20
and use that as the texture color value. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">    else=0A=
    {=0A=
        // Use the pixel color from the first texture only.=0A=
        blendColor =3D shaderTexture1.Sample(SampleType, input.tex);=0A=
    }=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
then combine the=20
light color and the blended texture value. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">    // Multiply =
the blended texture color and the final light color to get the result.=0A=
    color =3D color * blendColor;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
=0A=
    // Combine the color map value into the final color.=0A=
    color =3D saturate(color * input.color * 2.0f);=0A=
=0A=
    return color;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrainshaderclass.h</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrainshaderclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _TERRAINSHADERCLASS_H_=0A=
#define _TERRAINSHADERCLASS_H_=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
#include &lt;d3dx11async.h&gt;=0A=
#include &lt;fstream&gt;=0A=
using namespace std;=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: TerrainShaderClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class TerrainShaderClass=0A=
{=0A=
private:=0A=
	struct MatrixBufferType=0A=
	{=0A=
		D3DXMATRIX world;=0A=
		D3DXMATRIX view;=0A=
		D3DXMATRIX projection;=0A=
	};=0A=
=0A=
	struct LightBufferType=0A=
	{=0A=
		D3DXVECTOR4 ambientColor;=0A=
		D3DXVECTOR4 diffuseColor;=0A=
		D3DXVECTOR3 lightDirection;=0A=
		float padding;=0A=
	};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">A =
new buffer has=20
been added to hold the boolean value indicating if the terrain textures =
should=20
be blended or not for each polygon. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	struct =
TextureInfoBufferType=0A=
	{=0A=
		bool useAlplha;=0A=
		D3DXVECTOR3 padding2;=0A=
	};</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
public:=0A=
	TerrainShaderClass();=0A=
	TerrainShaderClass(const TerrainShaderClass&amp;);=0A=
	~TerrainShaderClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, HWND);=0A=
	void Shutdown();=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Render function=20
has been removed and the RenderShader function was made public. Also the =

SetShaderParameters private function has been divided into two public =
functions.=20
  This was done so the terrain could be efficiently rendered by only =
setting=20
certain variables once while being able to change the textures often.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	bool =
SetShaderParameters(ID3D11DeviceContext*, D3DXMATRIX, D3DXMATRIX, =
D3DXMATRIX, D3DXVECTOR4, D3DXVECTOR4, D3DXVECTOR3);=0A=
	bool SetShaderTextures(ID3D11DeviceContext*, ID3D11ShaderResourceView*, =
ID3D11ShaderResourceView*, ID3D11ShaderResourceView*, bool);=0A=
	void RenderShader(ID3D11DeviceContext*, int);</FONT><FONT =
color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
private:=0A=
	bool InitializeShader(ID3D11Device*, HWND, WCHAR*, WCHAR*);=0A=
	void ShutdownShader();=0A=
	void OutputShaderErrorMessage(ID3D10Blob*, HWND, WCHAR*);=0A=
=0A=
private:=0A=
	ID3D11VertexShader* m_vertexShader;=0A=
	ID3D11PixelShader* m_pixelShader;=0A=
	ID3D11InputLayout* m_layout;=0A=
	ID3D11SamplerState* m_sampleState;=0A=
	ID3D11Buffer* m_matrixBuffer;=0A=
	ID3D11Buffer* m_lightBuffer;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
is the new=20
texture information buffer. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	ID3D11Buffer* =
m_textureInfoBuffer;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrainshaderclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrainshaderclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "terrainshaderclass.h"=0A=
=0A=
=0A=
TerrainShaderClass::TerrainShaderClass()=0A=
{=0A=
	m_vertexShader =3D 0;=0A=
	m_pixelShader =3D 0;=0A=
	m_layout =3D 0;=0A=
	m_sampleState =3D 0;=0A=
	m_matrixBuffer =3D 0;=0A=
	m_lightBuffer =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the=20
texture information buffer to null in the class constructor. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
m_textureInfoBuffer =3D 0;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
}=0A=
=0A=
=0A=
TerrainShaderClass::TerrainShaderClass(const TerrainShaderClass&amp; =
other)=0A=
{=0A=
}=0A=
=0A=
=0A=
TerrainShaderClass::~TerrainShaderClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool TerrainShaderClass::Initialize(ID3D11Device* device, HWND hwnd)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Initialize the vertex and pixel shaders.=0A=
	result =3D InitializeShader(device, hwnd, L"../Engine/terrain.vs", =
L"../Engine/terrain.ps");=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainShaderClass::Shutdown()=0A=
{=0A=
	// Shutdown the vertex and pixel shaders as well as the related objects.=0A=
	ShutdownShader();=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool TerrainShaderClass::InitializeShader(ID3D11Device* device, HWND =
hwnd, WCHAR* vsFilename, WCHAR* psFilename)=0A=
{=0A=
	HRESULT result;=0A=
	ID3D10Blob* errorMessage;=0A=
	ID3D10Blob* vertexShaderBuffer;=0A=
	ID3D10Blob* pixelShaderBuffer;</FONT><FONT color=3D"#aaaaff" =
face=3D"arial" size=3D"2">=0A=
	D3D11_INPUT_ELEMENT_DESC polygonLayout[4];</FONT><FONT =
color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
	unsigned int numElements;=0A=
	D3D11_SAMPLER_DESC samplerDesc;=0A=
	D3D11_BUFFER_DESC matrixBufferDesc;=0A=
	D3D11_BUFFER_DESC lightBufferDesc;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">A =
new buffer=20
description variable is added for the texture information buffer. =
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
D3D11_BUFFER_DESC textureInfoBufferDesc;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
=0A=
=0A=
	// Initialize the pointers this function will use to null.=0A=
	errorMessage =3D 0;=0A=
	vertexShaderBuffer =3D 0;=0A=
	pixelShaderBuffer =3D 0;=0A=
=0A=
	// Compile the vertex shader code.=0A=
	result =3D D3DX11CompileFromFile(vsFilename, NULL, NULL, =
"TerrainVertexShader", "vs_5_0", D3D10_SHADER_ENABLE_STRICTNESS, 0, =
NULL, =0A=
				       &amp;vertexShaderBuffer, &amp;errorMessage, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		// If the shader failed to compile it should have writen something to =
the error message.=0A=
		if(errorMessage)=0A=
		{=0A=
			OutputShaderErrorMessage(errorMessage, hwnd, vsFilename);=0A=
		}=0A=
		// If there was nothing in the error message then it simply could not =
find the shader file itself.=0A=
		else=0A=
		{=0A=
			MessageBox(hwnd, vsFilename, L"Missing Shader File", MB_OK);=0A=
		}=0A=
=0A=
		return false;=0A=
	}=0A=
=0A=
	// Compile the pixel shader code.=0A=
	result =3D D3DX11CompileFromFile(psFilename, NULL, NULL, =
"TerrainPixelShader", "ps_5_0", D3D10_SHADER_ENABLE_STRICTNESS, 0, NULL, =0A=
				       &amp;pixelShaderBuffer, &amp;errorMessage, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		// If the shader failed to compile it should have writen something to =
the error message.=0A=
		if(errorMessage)=0A=
		{=0A=
			OutputShaderErrorMessage(errorMessage, hwnd, psFilename);=0A=
		}=0A=
		// If there was nothing in the error message then it simply could not =
find the file itself.=0A=
		else=0A=
		{=0A=
			MessageBox(hwnd, psFilename, L"Missing Shader File", MB_OK);=0A=
		}=0A=
=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex shader from the buffer.=0A=
	result =3D =
device-&gt;CreateVertexShader(vertexShaderBuffer-&gt;GetBufferPointer(), =
vertexShaderBuffer-&gt;GetBufferSize(), NULL, &amp;m_vertexShader);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the pixel shader from the buffer.=0A=
	result =3D =
device-&gt;CreatePixelShader(pixelShaderBuffer-&gt;GetBufferPointer(), =
pixelShaderBuffer-&gt;GetBufferSize(), NULL, &amp;m_pixelShader);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex input layout description.=0A=
	polygonLayout[0].SemanticName =3D "POSITION";=0A=
	polygonLayout[0].SemanticIndex =3D 0;=0A=
	polygonLayout[0].Format =3D DXGI_FORMAT_R32G32B32_FLOAT;=0A=
	polygonLayout[0].InputSlot =3D 0;=0A=
	polygonLayout[0].AlignedByteOffset =3D 0;=0A=
	polygonLayout[0].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[0].InstanceDataStepRate =3D 0;=0A=
=0A=
	polygonLayout[1].SemanticName =3D "TEXCOORD";=0A=
	polygonLayout[1].SemanticIndex =3D 0;=0A=
	polygonLayout[1].Format =3D DXGI_FORMAT_R32G32_FLOAT;=0A=
	polygonLayout[1].InputSlot =3D 0;=0A=
	polygonLayout[1].AlignedByteOffset =3D D3D11_APPEND_ALIGNED_ELEMENT;=0A=
	polygonLayout[1].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[1].InstanceDataStepRate =3D 0;=0A=
=0A=
	polygonLayout[2].SemanticName =3D "NORMAL";=0A=
	polygonLayout[2].SemanticIndex =3D 0;=0A=
	polygonLayout[2].Format =3D DXGI_FORMAT_R32G32B32_FLOAT;=0A=
	polygonLayout[2].InputSlot =3D 0;=0A=
	polygonLayout[2].AlignedByteOffset =3D D3D11_APPEND_ALIGNED_ELEMENT;=0A=
	polygonLayout[2].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[2].InstanceDataStepRate =3D 0;=0A=
=0A=
	polygonLayout[3].SemanticName =3D "COLOR";=0A=
	polygonLayout[3].SemanticIndex =3D 0;=0A=
	polygonLayout[3].Format =3D DXGI_FORMAT_R32G32B32A32_FLOAT;=0A=
	polygonLayout[3].InputSlot =3D 0;=0A=
	polygonLayout[3].AlignedByteOffset =3D D3D11_APPEND_ALIGNED_ELEMENT;=0A=
	polygonLayout[3].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[3].InstanceDataStepRate =3D 0;=0A=
=0A=
	// Get a count of the elements in the layout.=0A=
	numElements =3D sizeof(polygonLayout) / sizeof(polygonLayout[0]);=0A=
=0A=
	// Create the vertex input layout.=0A=
	result =3D device-&gt;CreateInputLayout(polygonLayout, numElements, =
vertexShaderBuffer-&gt;GetBufferPointer(), =
vertexShaderBuffer-&gt;GetBufferSize(), =0A=
					   &amp;m_layout);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Release the vertex shader buffer and pixel shader buffer since they =
are no longer needed.=0A=
	vertexShaderBuffer-&gt;Release();=0A=
	vertexShaderBuffer =3D 0;=0A=
=0A=
	pixelShaderBuffer-&gt;Release();=0A=
	pixelShaderBuffer =3D 0;=0A=
=0A=
	// Create a texture sampler state description.=0A=
	samplerDesc.Filter =3D D3D11_FILTER_MIN_MAG_MIP_LINEAR;=0A=
	samplerDesc.AddressU =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.AddressV =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.AddressW =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.MipLODBias =3D 0.0f;=0A=
	samplerDesc.MaxAnisotropy =3D 1;=0A=
	samplerDesc.ComparisonFunc =3D D3D11_COMPARISON_ALWAYS;=0A=
	samplerDesc.BorderColor[0] =3D 0;=0A=
	samplerDesc.BorderColor[1] =3D 0;=0A=
	samplerDesc.BorderColor[2] =3D 0;=0A=
	samplerDesc.BorderColor[3] =3D 0;=0A=
	samplerDesc.MinLOD =3D 0;=0A=
	samplerDesc.MaxLOD =3D D3D11_FLOAT32_MAX;=0A=
=0A=
	// Create the texture sampler state.=0A=
	result =3D device-&gt;CreateSamplerState(&amp;samplerDesc, =
&amp;m_sampleState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Setup the description of the dynamic matrix constant buffer that is =
in the vertex shader.=0A=
	matrixBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	matrixBufferDesc.ByteWidth =3D sizeof(MatrixBufferType);=0A=
	matrixBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	matrixBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	matrixBufferDesc.MiscFlags =3D 0;=0A=
	matrixBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Create the constant buffer pointer so we can access the vertex =
shader constant buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;matrixBufferDesc, NULL, =
&amp;m_matrixBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Setup the description of the light dynamic constant buffer that is =
in the pixel shader.=0A=
	// Note that ByteWidth always needs to be a multiple of 16 if using =
D3D11_BIND_CONSTANT_BUFFER or CreateBuffer will fail.=0A=
	lightBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	lightBufferDesc.ByteWidth =3D sizeof(LightBufferType);=0A=
	lightBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	lightBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	lightBufferDesc.MiscFlags =3D 0;=0A=
	lightBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Create the constant buffer pointer so we can access the pixel shader =
constant buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;lightBufferDesc, NULL, =
&amp;m_lightBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
new texture=20
information buffer description is setup here. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Setup the =
description of the texture info constant buffer that is in the pixel =
shader.=0A=
	textureInfoBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	textureInfoBufferDesc.ByteWidth =3D sizeof(TextureInfoBufferType);=0A=
	textureInfoBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	textureInfoBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	textureInfoBufferDesc.MiscFlags =3D 0;=0A=
	textureInfoBufferDesc.StructureByteStride =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Once =
the description=20
is setup the texture information buffer is then created. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
constant buffer pointer so we can access the pixel shader constant =
buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;textureInfoBufferDesc, NULL, =
&amp;m_textureInfoBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainShaderClass::ShutdownShader()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
texture=20
information buffer is released here in the ShutdownShader function. =
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Release the =
texture info constant buffer.=0A=
	if(m_textureInfoBuffer)=0A=
	{=0A=
		m_textureInfoBuffer-&gt;Release();=0A=
		m_textureInfoBuffer =3D 0;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	// Release the light constant buffer.=0A=
	if(m_lightBuffer)=0A=
	{=0A=
		m_lightBuffer-&gt;Release();=0A=
		m_lightBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the matrix constant buffer.=0A=
	if(m_matrixBuffer)=0A=
	{=0A=
		m_matrixBuffer-&gt;Release();=0A=
		m_matrixBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the sampler state.=0A=
	if(m_sampleState)=0A=
	{=0A=
		m_sampleState-&gt;Release();=0A=
		m_sampleState =3D 0;=0A=
	}=0A=
=0A=
	// Release the layout.=0A=
	if(m_layout)=0A=
	{=0A=
		m_layout-&gt;Release();=0A=
		m_layout =3D 0;=0A=
	}=0A=
=0A=
	// Release the pixel shader.=0A=
	if(m_pixelShader)=0A=
	{=0A=
		m_pixelShader-&gt;Release();=0A=
		m_pixelShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the vertex shader.=0A=
	if(m_vertexShader)=0A=
	{=0A=
		m_vertexShader-&gt;Release();=0A=
		m_vertexShader =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void TerrainShaderClass::OutputShaderErrorMessage(ID3D10Blob* =
errorMessage, HWND hwnd, WCHAR* shaderFilename)=0A=
{=0A=
	char* compileErrors;=0A=
	unsigned long bufferSize, i;=0A=
	ofstream fout;=0A=
=0A=
=0A=
	// Get a pointer to the error message text buffer.=0A=
	compileErrors =3D (char*)(errorMessage-&gt;GetBufferPointer());=0A=
=0A=
	// Get the length of the message.=0A=
	bufferSize =3D errorMessage-&gt;GetBufferSize();=0A=
=0A=
	// Open a file to write the error message to.=0A=
	fout.open("shader-error.txt");=0A=
=0A=
	// Write out the error message.=0A=
	for(i=3D0; i&lt;bufferSize; i++)=0A=
	{=0A=
		fout &lt;&lt; compileErrors[i];=0A=
	}=0A=
=0A=
	// Close the file.=0A=
	fout.close();=0A=
=0A=
	// Release the error message.=0A=
	errorMessage-&gt;Release();=0A=
	errorMessage =3D 0;=0A=
=0A=
	// Pop a message up on the screen to notify the user to check the text =
file for compile errors.=0A=
	MessageBox(hwnd, L"Error compiling shader.  Check shader-error.txt for =
message.", shaderFilename, MB_OK);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
setting of=20
textures has been removed from the SetShaderParameters function. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
TerrainShaderClass::SetShaderParameters(ID3D11DeviceContext* =
deviceContext, D3DXMATRIX worldMatrix, D3DXMATRIX viewMatrix, =0A=
					     D3DXMATRIX projectionMatrix, D3DXVECTOR4 ambientColor, =
D3DXVECTOR4 diffuseColor, D3DXVECTOR3 lightDirection)=0A=
{=0A=
	HRESULT result;=0A=
	D3D11_MAPPED_SUBRESOURCE mappedResource;=0A=
	unsigned int bufferNumber;=0A=
	MatrixBufferType* dataPtr;=0A=
	LightBufferType* dataPtr2;=0A=
=0A=
=0A=
	// Transpose the matrices to prepare them for the shader.=0A=
	D3DXMatrixTranspose(&amp;worldMatrix, &amp;worldMatrix);=0A=
	D3DXMatrixTranspose(&amp;viewMatrix, &amp;viewMatrix);=0A=
	D3DXMatrixTranspose(&amp;projectionMatrix, &amp;projectionMatrix);=0A=
=0A=
	// Lock the constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_matrixBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr =3D (MatrixBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the matrices into the constant buffer.=0A=
	dataPtr-&gt;world =3D worldMatrix;=0A=
	dataPtr-&gt;view =3D viewMatrix;=0A=
	dataPtr-&gt;projection =3D projectionMatrix;=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_matrixBuffer, 0);=0A=
=0A=
	// Set the position of the constant buffer in the vertex shader.=0A=
	bufferNumber =3D 0;=0A=
=0A=
	// Now set the constant buffer in the vertex shader with the updated =
values.=0A=
	deviceContext-&gt;VSSetConstantBuffers(bufferNumber, 1, =
&amp;m_matrixBuffer);=0A=
=0A=
	// Lock the light constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_lightBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr2 =3D (LightBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the lighting variables into the constant buffer.=0A=
	dataPtr2-&gt;ambientColor =3D ambientColor;=0A=
	dataPtr2-&gt;diffuseColor =3D diffuseColor;=0A=
	dataPtr2-&gt;lightDirection =3D lightDirection;=0A=
	dataPtr2-&gt;padding =3D 0.0f;=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_lightBuffer, 0);=0A=
=0A=
	// Set the position of the light constant buffer in the pixel shader.=0A=
	bufferNumber =3D 0;=0A=
=0A=
	// Finally set the light constant buffer in the pixel shader with the =
updated values.=0A=
	deviceContext-&gt;PSSetConstantBuffers(bufferNumber, 1, =
&amp;m_lightBuffer);=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">SetShaderTextures is=20
a new function which is used for setting textures in the shader. It was=20
separated from the SetShaderParameters function so the setting of =
textures could=20
happen more often. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
TerrainShaderClass::SetShaderTextures(ID3D11DeviceContext* =
deviceContext, ID3D11ShaderResourceView* texture1, =0A=
					   ID3D11ShaderResourceView* texture2, ID3D11ShaderResourceView* =
alphaMap, bool useAlpha)=0A=
{=0A=
	HRESULT result;=0A=
	D3D11_MAPPED_SUBRESOURCE mappedResource;=0A=
	TextureInfoBufferType* dataPtr;=0A=
	unsigned int bufferNumber;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
primary texture=20
is set in the pixel shader first. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Set shader =
texture resources in the pixel shader.=0A=
	deviceContext-&gt;PSSetShaderResources(0, 1, &amp;texture1);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">If =
this material=20
group uses blending then set the second color texture and the alpha map =
in the=20
shader so blending can occur. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// If this is a =
blended polygon then also set the second texture and the alpha map for =
blending.=0A=
	if(useAlpha)=0A=
	{=0A=
		deviceContext-&gt;PSSetShaderResources(1, 1, &amp;texture2);=0A=
		deviceContext-&gt;PSSetShaderResources(2, 1, &amp;alphaMap);=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
set the boolean=20
value in the shader letting it know to blend or not. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Lock the =
texture info constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_textureInfoBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr =3D (TextureInfoBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the texture info variables into the constant buffer.=0A=
	dataPtr-&gt;useAlplha =3D useAlpha;=0A=
	dataPtr-&gt;padding2 =3D D3DXVECTOR3(0.0f, 0.0f, 0.0f);=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_textureInfoBuffer, 0);=0A=
=0A=
	// Set the position of the texture info constant buffer in the pixel =
shader.=0A=
	bufferNumber =3D 1;=0A=
=0A=
	// Finally set the texture info constant buffer in the pixel shader =
with the updated values.=0A=
	deviceContext-&gt;PSSetConstantBuffers(bufferNumber, 1, =
&amp;m_textureInfoBuffer);=0A=
=0A=
	return true;=0A=
}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
=0A=
void TerrainShaderClass::RenderShader(ID3D11DeviceContext* =
deviceContext, int indexCount)=0A=
{=0A=
	// Set the vertex input layout.=0A=
	deviceContext-&gt;IASetInputLayout(m_layout);=0A=
=0A=
	// Set the vertex and pixel shaders that will be used to render this =
triangle.=0A=
	deviceContext-&gt;VSSetShader(m_vertexShader, NULL, 0);=0A=
	deviceContext-&gt;PSSetShader(m_pixelShader, NULL, 0);=0A=
=0A=
	// Set the sampler state in the pixel shader.=0A=
	deviceContext-&gt;PSSetSamplers(0, 1, &amp;m_sampleState);=0A=
=0A=
	// Render the triangle.=0A=
	deviceContext-&gt;DrawIndexed(indexCount, 0, 0);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrainclass.h</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrainclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _TERRAINCLASS_H_=0A=
#define _TERRAINCLASS_H_=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
#include &lt;stdio.h&gt;=0A=
#include &lt;fstream&gt;=0A=
using namespace std;=0A=
=0A=
=0A=
///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "textureclass.h"=0A=
#include "terrainshaderclass.h"=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: TerrainClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class TerrainClass=0A=
{=0A=
private:=0A=
	struct VertexType=0A=
	{=0A=
		D3DXVECTOR3 position;=0A=
		D3DXVECTOR2 texture;=0A=
		D3DXVECTOR3 normal;=0A=
		D3DXVECTOR4 color;=0A=
	};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
height map type=20
has been modified and has a red, green, and blue index. The indices are =
used to=20
indicate which material is used for each polygon in the terrain. The =
red, green,=20
and blue index will match up to the colors in the material map. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct =
HeightMapType =0A=
	{ =0A=
		float x, y, z;=0A=
		float nx, ny, nz;=0A=
		float r, g, b;</FONT><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">=0A=
		int rIndex, gIndex, bIndex;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
	};=0A=
=0A=
	struct VectorType =0A=
	{ =0A=
		float x, y, z;=0A=
	};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
is the new=20
structure for the material groups. The material group is made up of =
indexes to=20
the two textures and the alpha map for that group. It also has red, =
green, and=20
blue indexes to match up to the material map. It has a vertex and index =
buffer=20
to hold the polygon data from the terrain in each group instead of just =
one=20
large single buffer. It also has a temporary vertex and index array used =
for=20
building the vertex and index buffers. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	struct =
MaterialGroupType =0A=
	{ =0A=
		int textureIndex1, textureIndex2, alphaIndex;=0A=
		int red, green, blue;=0A=
		ID3D11Buffer *vertexBuffer, *indexBuffer;=0A=
		int vertexCount, indexCount;=0A=
		VertexType* vertices;=0A=
		unsigned long* indices;=0A=
	};</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
public:=0A=
	TerrainClass();=0A=
	TerrainClass(const TerrainClass&amp;);=0A=
	~TerrainClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, char*, char*, char*, char*);=0A=
	void Shutdown();=0A=
=0A=
	bool Render(ID3D11DeviceContext*, TerrainShaderClass*, D3DXMATRIX, =
D3DXMATRIX, D3DXMATRIX, D3DXVECTOR4, D3DXVECTOR4, D3DXVECTOR3);=0A=
=0A=
private:=0A=
	bool LoadHeightMap(char*);=0A=
	void NormalizeHeightMap();=0A=
	bool CalculateNormals();=0A=
	void ShutdownHeightMap();=0A=
=0A=
	bool LoadColorMap(char*);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">There are new=20
functions for loading and unloading the material groups. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	bool =
LoadMaterialFile(char*, char*, ID3D11Device*);=0A=
	bool LoadMaterialMap(char*);=0A=
	bool LoadMaterialBuffers(ID3D11Device*);=0A=
	void ReleaseMaterials();</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
=0A=
private:=0A=
	int m_terrainWidth, m_terrainHeight;=0A=
	HeightMapType* m_heightMap;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">There are new=20
variables for the texture array and material group arrays. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	int =
m_textureCount, m_materialCount;=0A=
	TextureClass* m_Textures;=0A=
	MaterialGroupType* m_Materials;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Terrainclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: terrainclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "terrainclass.h"=0A=
=0A=
=0A=
TerrainClass::TerrainClass()=0A=
{=0A=
	m_heightMap =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the=20
texture array and material group array to null in the class constructor. =

</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	m_Textures =3D 0;=0A=
	m_Materials =3D 0;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
}=0A=
=0A=
=0A=
TerrainClass::TerrainClass(const TerrainClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
TerrainClass::~TerrainClass()=0A=
{=0A=
}</FONT><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">=0A=
=0A=
=0A=
bool TerrainClass::Initialize(ID3D11Device* device, char* =
heightMapFilename, char* materialsFilename, char* materialMapFilename, =
char* colorMapFilename)=0A=
</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">{=0A=
	bool result;=0A=
=0A=
=0A=
	// Load in the height map for the terrain.=0A=
	result =3D LoadHeightMap(heightMapFilename);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Normalize the height of the height map.=0A=
	NormalizeHeightMap();=0A=
=0A=
	// Calculate the normals for the terrain data.=0A=
	result =3D CalculateNormals();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Load in the color map for the terrain.=0A=
	result =3D LoadColorMap(colorMapFilename);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
material groups=20
array is initialized instead of the single vertex and index buffer. Each =

material group will have its own vertex and index array with its own set =
of=20
textures. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Initialize =
the material groups for the terrain.=0A=
	result =3D LoadMaterialFile(materialsFilename, materialMapFilename, =
device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainClass::Shutdown()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">When =
the shutdown=20
occurs the material groups array is also released now. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Release the =
materials for the terrain.=0A=
	ReleaseMaterials();</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
=0A=
	// Release the height map data.=0A=
	ShutdownHeightMap();=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool TerrainClass::LoadHeightMap(char* filename)=0A=
{=0A=
	FILE* filePtr;=0A=
	int error;=0A=
	unsigned int count;=0A=
	BITMAPFILEHEADER bitmapFileHeader;=0A=
	BITMAPINFOHEADER bitmapInfoHeader;=0A=
	int imageSize, i, j, k, index;=0A=
	unsigned char* bitmapImage;=0A=
	unsigned char height;=0A=
=0A=
=0A=
	// Open the height map file in binary.=0A=
	error =3D fopen_s(&amp;filePtr, filename, "rb");=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read in the file header.=0A=
	count =3D fread(&amp;bitmapFileHeader, sizeof(BITMAPFILEHEADER), 1, =
filePtr);=0A=
	if(count !=3D 1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read in the bitmap info header.=0A=
	count =3D fread(&amp;bitmapInfoHeader, sizeof(BITMAPINFOHEADER), 1, =
filePtr);=0A=
	if(count !=3D 1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Save the dimensions of the terrain.=0A=
	m_terrainWidth =3D bitmapInfoHeader.biWidth;=0A=
	m_terrainHeight =3D bitmapInfoHeader.biHeight;=0A=
=0A=
	// Calculate the size of the bitmap image data.=0A=
	imageSize =3D m_terrainWidth * m_terrainHeight * 3;=0A=
=0A=
	// Allocate memory for the bitmap image data.=0A=
	bitmapImage =3D new unsigned char[imageSize];=0A=
	if(!bitmapImage)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Move to the beginning of the bitmap data.=0A=
	fseek(filePtr, bitmapFileHeader.bfOffBits, SEEK_SET);=0A=
=0A=
	// Read in the bitmap image data.=0A=
	count =3D fread(bitmapImage, 1, imageSize, filePtr);=0A=
	if(count !=3D imageSize)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Close the file.=0A=
	error =3D fclose(filePtr);=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the structure to hold the height map data.=0A=
	m_heightMap =3D new HeightMapType[m_terrainWidth * m_terrainHeight];=0A=
	if(!m_heightMap)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the position in the image data buffer.=0A=
	k=3D0;=0A=
=0A=
	// Read the image data into the height map.=0A=
	for(j=3D0; j&lt;m_terrainHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;m_terrainWidth; i++)=0A=
		{=0A=
			height =3D bitmapImage[k];=0A=
			=0A=
			index =3D (m_terrainHeight * j) + i;=0A=
=0A=
			m_heightMap[index].x =3D (float)i;=0A=
			m_heightMap[index].y =3D (float)height;=0A=
			m_heightMap[index].z =3D (float)j;=0A=
=0A=
			k+=3D3;=0A=
		}=0A=
	}=0A=
=0A=
	// Release the bitmap image data.=0A=
	delete [] bitmapImage;=0A=
	bitmapImage =3D 0;=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainClass::NormalizeHeightMap()=0A=
{=0A=
	int i, j;=0A=
=0A=
=0A=
	for(j=3D0; j&lt;m_terrainHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;m_terrainWidth; i++)=0A=
		{=0A=
			m_heightMap[(m_terrainHeight * j) + i].y /=3D 15.0f;=0A=
		}=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool TerrainClass::CalculateNormals()=0A=
{=0A=
	int i, j, index1, index2, index3, index, count;=0A=
	float vertex1[3], vertex2[3], vertex3[3], vector1[3], vector2[3], =
sum[3], length;=0A=
	VectorType* normals;=0A=
=0A=
=0A=
	// Create a temporary array to hold the un-normalized normal vectors.=0A=
	normals =3D new VectorType[(m_terrainHeight-1) * (m_terrainWidth-1)];=0A=
	if(!normals)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Go through all the faces in the mesh and calculate their normals.=0A=
	for(j=3D0; j&lt;(m_terrainHeight-1); j++)=0A=
	{=0A=
		for(i=3D0; i&lt;(m_terrainWidth-1); i++)=0A=
		{=0A=
			index1 =3D (j * m_terrainHeight) + i;=0A=
			index2 =3D (j * m_terrainHeight) + (i+1);=0A=
			index3 =3D ((j+1) * m_terrainHeight) + i;=0A=
=0A=
			// Get three vertices from the face.=0A=
			vertex1[0] =3D m_heightMap[index1].x;=0A=
			vertex1[1] =3D m_heightMap[index1].y;=0A=
			vertex1[2] =3D m_heightMap[index1].z;=0A=
		=0A=
			vertex2[0] =3D m_heightMap[index2].x;=0A=
			vertex2[1] =3D m_heightMap[index2].y;=0A=
			vertex2[2] =3D m_heightMap[index2].z;=0A=
		=0A=
			vertex3[0] =3D m_heightMap[index3].x;=0A=
			vertex3[1] =3D m_heightMap[index3].y;=0A=
			vertex3[2] =3D m_heightMap[index3].z;=0A=
=0A=
			// Calculate the two vectors for this face.=0A=
			vector1[0] =3D vertex1[0] - vertex3[0];=0A=
			vector1[1] =3D vertex1[1] - vertex3[1];=0A=
			vector1[2] =3D vertex1[2] - vertex3[2];=0A=
			vector2[0] =3D vertex3[0] - vertex2[0];=0A=
			vector2[1] =3D vertex3[1] - vertex2[1];=0A=
			vector2[2] =3D vertex3[2] - vertex2[2];=0A=
=0A=
			index =3D (j * (m_terrainHeight-1)) + i;=0A=
=0A=
			// Calculate the cross product of those two vectors to get the =
un-normalized value for this face normal.=0A=
			normals[index].x =3D (vector1[1] * vector2[2]) - (vector1[2] * =
vector2[1]);=0A=
			normals[index].y =3D (vector1[2] * vector2[0]) - (vector1[0] * =
vector2[2]);=0A=
			normals[index].z =3D (vector1[0] * vector2[1]) - (vector1[1] * =
vector2[0]);=0A=
		}=0A=
	}=0A=
=0A=
	// Now go through all the vertices and take an average of each face =
normal 	=0A=
	// that the vertex touches to get the averaged normal for that vertex.=0A=
	for(j=3D0; j&lt;m_terrainHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;m_terrainWidth; i++)=0A=
		{=0A=
			// Initialize the sum.=0A=
			sum[0] =3D 0.0f;=0A=
			sum[1] =3D 0.0f;=0A=
			sum[2] =3D 0.0f;=0A=
=0A=
			// Initialize the count.=0A=
			count =3D 0;=0A=
=0A=
			// Bottom left face.=0A=
			if(((i-1) &gt;=3D 0) &amp;&amp; ((j-1) &gt;=3D 0))=0A=
			{=0A=
				index =3D ((j-1) * (m_terrainHeight-1)) + (i-1);=0A=
=0A=
				sum[0] +=3D normals[index].x;=0A=
				sum[1] +=3D normals[index].y;=0A=
				sum[2] +=3D normals[index].z;=0A=
				count++;=0A=
			}=0A=
=0A=
			// Bottom right face.=0A=
			if((i &lt; (m_terrainWidth-1)) &amp;&amp; ((j-1) &gt;=3D 0))=0A=
			{=0A=
				index =3D ((j-1) * (m_terrainHeight-1)) + i;=0A=
=0A=
				sum[0] +=3D normals[index].x;=0A=
				sum[1] +=3D normals[index].y;=0A=
				sum[2] +=3D normals[index].z;=0A=
				count++;=0A=
			}=0A=
=0A=
			// Upper left face.=0A=
			if(((i-1) &gt;=3D 0) &amp;&amp; (j &lt; (m_terrainHeight-1)))=0A=
			{=0A=
				index =3D (j * (m_terrainHeight-1)) + (i-1);=0A=
=0A=
				sum[0] +=3D normals[index].x;=0A=
				sum[1] +=3D normals[index].y;=0A=
				sum[2] +=3D normals[index].z;=0A=
				count++;=0A=
			}=0A=
=0A=
			// Upper right face.=0A=
			if((i &lt; (m_terrainWidth-1)) &amp;&amp; (j &lt; =
(m_terrainHeight-1)))=0A=
			{=0A=
				index =3D (j * (m_terrainHeight-1)) + i;=0A=
=0A=
				sum[0] +=3D normals[index].x;=0A=
				sum[1] +=3D normals[index].y;=0A=
				sum[2] +=3D normals[index].z;=0A=
				count++;=0A=
			}=0A=
			=0A=
			// Take the average of the faces touching this vertex.=0A=
			sum[0] =3D (sum[0] / (float)count);=0A=
			sum[1] =3D (sum[1] / (float)count);=0A=
			sum[2] =3D (sum[2] / (float)count);=0A=
=0A=
			// Calculate the length of this normal.=0A=
			length =3D sqrt((sum[0] * sum[0]) + (sum[1] * sum[1]) + (sum[2] * =
sum[2]));=0A=
			=0A=
			// Get an index to the vertex location in the height map array.=0A=
			index =3D (j * m_terrainHeight) + i;=0A=
=0A=
			// Normalize the final shared normal for this vertex and store it in =
the height map array.=0A=
			m_heightMap[index].nx =3D (sum[0] / length);=0A=
			m_heightMap[index].ny =3D (sum[1] / length);=0A=
			m_heightMap[index].nz =3D (sum[2] / length);=0A=
		}=0A=
	}=0A=
=0A=
	// Release the temporary normals.=0A=
	delete [] normals;=0A=
	normals =3D 0;=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void TerrainClass::ShutdownHeightMap()=0A=
{=0A=
	if(m_heightMap)=0A=
	{=0A=
		delete [] m_heightMap;=0A=
		m_heightMap =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool TerrainClass::LoadColorMap(char* filename)=0A=
{=0A=
	int error, imageSize, i, j, k, index, colorMapWidth, colorMapHeight;=0A=
	FILE* filePtr;=0A=
	unsigned int count;=0A=
	BITMAPFILEHEADER bitmapFileHeader;=0A=
	BITMAPINFOHEADER bitmapInfoHeader;=0A=
	unsigned char* bitmapImage;=0A=
=0A=
=0A=
	// Open the color map file in binary.=0A=
	error =3D fopen_s(&amp;filePtr, filename, "rb");=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read in the file header.=0A=
	count =3D fread(&amp;bitmapFileHeader, sizeof(BITMAPFILEHEADER), 1, =
filePtr);=0A=
	if(count !=3D 1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read in the bitmap info header.=0A=
	count =3D fread(&amp;bitmapInfoHeader, sizeof(BITMAPINFOHEADER), 1, =
filePtr);=0A=
	if(count !=3D 1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Make sure the color map dimensions are the same as the terrain =
dimensions for easy 1 to 1 mapping.=0A=
	colorMapWidth =3D bitmapInfoHeader.biWidth;=0A=
	colorMapHeight =3D bitmapInfoHeader.biHeight;=0A=
=0A=
	if((colorMapWidth !=3D m_terrainWidth) || (colorMapHeight !=3D =
m_terrainHeight))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Calculate the size of the bitmap image data.=0A=
	imageSize =3D colorMapWidth * colorMapHeight * 3;=0A=
=0A=
	// Allocate memory for the bitmap image data.=0A=
	bitmapImage =3D new unsigned char[imageSize];=0A=
	if(!bitmapImage)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Move to the beginning of the bitmap data.=0A=
	fseek(filePtr, bitmapFileHeader.bfOffBits, SEEK_SET);=0A=
=0A=
	// Read in the bitmap image data.=0A=
	count =3D fread(bitmapImage, 1, imageSize, filePtr);=0A=
	if(count !=3D imageSize)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Close the file.=0A=
	error =3D fclose(filePtr);=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the position in the image data buffer.=0A=
	k=3D0;=0A=
=0A=
	// Read the image data into the color map portion of the height map =
structure.=0A=
	for(j=3D0; j&lt;colorMapHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;colorMapWidth; i++)=0A=
		{=0A=
			index =3D (colorMapHeight * j) + i;=0A=
=0A=
			m_heightMap[index].b =3D (float)bitmapImage[k]   / 255.0f;=0A=
			m_heightMap[index].g =3D (float)bitmapImage[k+1] / 255.0f;=0A=
			m_heightMap[index].r =3D (float)bitmapImage[k+2] / 255.0f;=0A=
=0A=
			k+=3D3;=0A=
		}=0A=
	}=0A=
=0A=
	// Release the bitmap image data.=0A=
	delete [] bitmapImage;=0A=
	bitmapImage =3D 0;=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
LoadMaterialFile=20
function reads in the text file containing the information about the =
textures=20
and the material groups the terrain uses. All of the textures used by =
the=20
terrain are first loaded into the texture array. Their position in that =
array is=20
also their index for the material group to access them by. After that =
the=20
material group is created and the indexes for it are read in from the =
material=20
file. Once the indexes are loaded the material map is read in and then =
the=20
vertex and index buffers for each material group is created based on the =

information from the indexes and the material map.  </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
TerrainClass::LoadMaterialFile(char* filename, char* =
materialMapFilename, ID3D11Device* device)=0A=
{=0A=
	ifstream fin;=0A=
	char input;=0A=
	int i, error;=0A=
	char inputFilename[128];=0A=
	unsigned int stringLength;=0A=
	WCHAR textureFilename[128];=0A=
	bool result;=0A=
=0A=
=0A=
	// Open the materials information text file.=0A=
	fin.open(filename);=0A=
	if(fin.fail())=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read up to the value of texture count.=0A=
	fin.get(input);=0A=
	while(input !=3D ':')=0A=
	{=0A=
		fin.get(input);=0A=
	}=0A=
=0A=
	// Read in the texture count.=0A=
	fin &gt;&gt; m_textureCount;=0A=
=0A=
	// Create the texture object array.=0A=
	m_Textures =3D new TextureClass[m_textureCount];=0A=
	if(!m_Textures)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Load each of the textures in.=0A=
	for(i=3D0; i&lt;m_textureCount; i++)=0A=
	{=0A=
		fin.get(input);=0A=
		while(input !=3D ':')=0A=
		{=0A=
			fin.get(input);=0A=
		}=0A=
=0A=
		fin &gt;&gt; inputFilename;=0A=
=0A=
		// Convert the character filename to WCHAR.=0A=
		error =3D mbstowcs_s(&amp;stringLength, textureFilename, 128, =
inputFilename, 128);=0A=
		if(error !=3D 0)=0A=
		{=0A=
			return false;=0A=
		}=0A=
=0A=
		// Load the texture or alpha map.=0A=
		result =3D m_Textures[i].Initialize(device, textureFilename);=0A=
		if(!result)=0A=
		{=0A=
			return false;=0A=
		}=0A=
	}=0A=
=0A=
	// Read up to the value of the material count.=0A=
	fin.get(input);=0A=
	while(input !=3D ':')=0A=
	{=0A=
		fin.get(input);=0A=
	}=0A=
=0A=
	// Read in the material count.=0A=
	fin &gt;&gt; m_materialCount;=0A=
=0A=
	// Create the material group array.=0A=
	m_Materials =3D new MaterialGroupType[m_materialCount];=0A=
	if(!m_Materials)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the material group array.=0A=
	for(i=3D0; i&lt;m_materialCount; i++)=0A=
	{=0A=
		m_Materials[i].vertexBuffer =3D 0;=0A=
		m_Materials[i].indexBuffer =3D 0;=0A=
		m_Materials[i].vertices =3D 0;=0A=
		m_Materials[i].indices =3D 0;=0A=
	}=0A=
=0A=
	// Load each of the material group indexes in.=0A=
	for(i=3D0; i&lt;m_materialCount; i++)=0A=
	{=0A=
		fin.get(input);=0A=
		while(input !=3D ':')=0A=
		{=0A=
			fin.get(input);=0A=
		}=0A=
=0A=
		fin &gt;&gt; m_Materials[i].textureIndex1 &gt;&gt; =
m_Materials[i].textureIndex2 &gt;&gt; m_Materials[i].alphaIndex;=0A=
		fin &gt;&gt; m_Materials[i].red &gt;&gt; m_Materials[i].green &gt;&gt; =
m_Materials[i].blue;=0A=
	}=0A=
=0A=
	// Close the materials information text file.=0A=
	fin.close();=0A=
	=0A=
	// Now load the material index map.=0A=
	result =3D LoadMaterialMap(materialMapFilename);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Load the vertex buffer for each material group with the terrain data.=0A=
	result =3D LoadMaterialBuffers(device);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">LoadMaterialMap is=20
the new function which loads the material map bitmap into the height map =
array.
 It takes the colors from the material map and stores them as indexes in =
the=20
rIndex, gIndex, and bIndex components of the height map array. This way =
each=20
polygon in the height map can be associated with a material. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
TerrainClass::LoadMaterialMap(char* filename)=0A=
{=0A=
	int error, imageSize, i, j, k, index;=0A=
	FILE* filePtr;=0A=
	unsigned int count;=0A=
	BITMAPFILEHEADER bitmapFileHeader;=0A=
	BITMAPINFOHEADER bitmapInfoHeader;=0A=
	unsigned char* bitmapImage;=0A=
=0A=
=0A=
	// Open the material map file in binary.=0A=
	error =3D fopen_s(&amp;filePtr, filename, "rb");=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read in the file header.=0A=
	count =3D fread(&amp;bitmapFileHeader, sizeof(BITMAPFILEHEADER), 1, =
filePtr);=0A=
	if(count !=3D 1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Read in the bitmap info header.=0A=
	count =3D fread(&amp;bitmapInfoHeader, sizeof(BITMAPINFOHEADER), 1, =
filePtr);=0A=
	if(count !=3D 1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Make sure the material index map dimensions are the same as the =
terrain dimensions for 1 to 1 mapping.=0A=
	if((bitmapInfoHeader.biWidth !=3D m_terrainWidth) || =
(bitmapInfoHeader.biHeight !=3D m_terrainHeight))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Calculate the size of the bitmap image data.=0A=
	imageSize =3D bitmapInfoHeader.biWidth * bitmapInfoHeader.biHeight * 3;=0A=
=0A=
	// Allocate memory for the bitmap image data.=0A=
	bitmapImage =3D new unsigned char[imageSize];=0A=
	if(!bitmapImage)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Move to the beginning of the bitmap data.=0A=
	fseek(filePtr, bitmapFileHeader.bfOffBits, SEEK_SET);=0A=
=0A=
	// Read in the bitmap image data.=0A=
	count =3D fread(bitmapImage, 1, imageSize, filePtr);=0A=
	if(count !=3D imageSize)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Close the file.=0A=
	error =3D fclose(filePtr);=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the position in the image data buffer so each vertice has =
an material index associated with it.=0A=
	k=3D0;=0A=
=0A=
	// Read the material index data into the height map structure.=0A=
	for(j=3D0; j&lt;m_terrainHeight; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;m_terrainWidth; i++)=0A=
		{=0A=
			index =3D (m_terrainHeight * j) + i;=0A=
=0A=
			m_heightMap[index].rIndex =3D (int)bitmapImage[k+2];=0A=
			m_heightMap[index].gIndex =3D (int)bitmapImage[k+1];=0A=
			m_heightMap[index].bIndex =3D (int)bitmapImage[k];=0A=
=0A=
			k+=3D3;=0A=
		}=0A=
	}=0A=
=0A=
	// Release the bitmap image data.=0A=
	delete [] bitmapImage;=0A=
	bitmapImage =3D 0;=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
LoadMaterialBuffers function does the work of associating a material =
with its=20
specific terrain vertices and then placing each vertice in the correct =
array=20
 inside the material groups array. It starts by first creating a =
temporary=20
vertex and index array for each material group. Then it goes through the =
height=20
map and stores the vertices for that material group in the correct =
temporary=20
vertex and index array. After the entire height map has its vertices in =
the=20
right material groups the vertex and index buffer for each material =
group is=20
created and the temporary vertex and index arrays are released. =
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
TerrainClass::LoadMaterialBuffers(ID3D11Device* device)=0A=
{=0A=
	int maxVertexCount, maxIndexCount, i, j, index1, index2, index3, =
index4, redIndex, greenIndex, blueIndex, index, vIndex;=0A=
	bool found;=0A=
	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;=0A=
	D3D11_SUBRESOURCE_DATA vertexData, indexData;=0A=
	HRESULT result;=0A=
=0A=
=0A=
	// Create the value for the maximum number of vertices a material group =
could possibly have.=0A=
	maxVertexCount =3D (m_terrainWidth - 1) * (m_terrainHeight - 1) * 6;=0A=
=0A=
	// Set the index count to the same as the maximum vertex count.=0A=
	maxIndexCount =3D maxVertexCount;=0A=
=0A=
	// Initialize vertex and index arrays for each material group to the =
maximum size.=0A=
	for(i=3D0; i&lt;m_materialCount; i++)=0A=
	{=0A=
		// Create the temporary vertex array for this material group.=0A=
		m_Materials[i].vertices =3D new VertexType[maxVertexCount];=0A=
		if(!m_Materials[i].vertices)=0A=
		{=0A=
			return false;=0A=
		}=0A=
=0A=
		// Create the temporary index array for this material group.=0A=
		m_Materials[i].indices =3D new unsigned long[maxIndexCount];=0A=
		if(!m_Materials[i].indices)=0A=
		{=0A=
			return false;=0A=
		}=0A=
=0A=
		// Initialize the counts to zero.=0A=
		m_Materials[i].vertexCount =3D 0;=0A=
		m_Materials[i].indexCount =3D 0;=0A=
	}=0A=
=0A=
	// Now loop through the terrain and build the vertex arrays for each =
material group.=0A=
	for(j=3D0; j&lt;(m_terrainHeight-1); j++)=0A=
	{=0A=
		for(i=3D0; i&lt;(m_terrainWidth-1); i++)=0A=
		{=0A=
			index1 =3D (m_terrainHeight * j) + i;          // Bottom left.=0A=
			index2 =3D (m_terrainHeight * j) + (i+1);      // Bottom right.=0A=
			index3 =3D (m_terrainHeight * (j+1)) + i;      // Upper left.=0A=
			index4 =3D (m_terrainHeight * (j+1)) + (i+1);  // Upper right.=0A=
=0A=
			// Query the upper left corner vertex for the material index.=0A=
			redIndex   =3D m_heightMap[index3].rIndex;=0A=
			greenIndex =3D m_heightMap[index3].gIndex;=0A=
			blueIndex  =3D m_heightMap[index3].bIndex;=0A=
=0A=
			// Find which material group this vertex belongs to.=0A=
			index =3D 0;=0A=
			found =3D false;=0A=
			while(!found)=0A=
			{=0A=
				if((redIndex =3D=3D m_Materials[index].red) &amp;&amp; (greenIndex =
=3D=3D m_Materials[index].green) &amp;&amp; (blueIndex =3D=3D =
m_Materials[index].blue))=0A=
				{=0A=
					found =3D true;=0A=
				}=0A=
				else=0A=
				{=0A=
					index++;=0A=
				}=0A=
			}=0A=
=0A=
			// Set the index position in the vertex and index array to the count.=0A=
			vIndex =3D m_Materials[index].vertexCount;=0A=
=0A=
			// Upper left.=0A=
			m_Materials[index].vertices[vIndex].position =3D =
D3DXVECTOR3(m_heightMap[index3].x, m_heightMap[index3].y, =
m_heightMap[index3].z);=0A=
			m_Materials[index].vertices[vIndex].texture =3D D3DXVECTOR2(0.0f, =
0.0f);=0A=
			m_Materials[index].vertices[vIndex].normal =3D =
D3DXVECTOR3(m_heightMap[index3].nx, m_heightMap[index3].ny, =
m_heightMap[index3].nz);=0A=
			m_Materials[index].vertices[vIndex].color =3D =
D3DXVECTOR4(m_heightMap[index3].r, m_heightMap[index3].g, =
m_heightMap[index3].b, 1.0f);=0A=
			m_Materials[index].indices[vIndex] =3D vIndex;=0A=
			vIndex++;=0A=
=0A=
			// Upper right.=0A=
			m_Materials[index].vertices[vIndex].position =3D =
D3DXVECTOR3(m_heightMap[index4].x, m_heightMap[index4].y, =
m_heightMap[index4].z);=0A=
			m_Materials[index].vertices[vIndex].texture =3D D3DXVECTOR2(1.0f, =
0.0f);=0A=
			m_Materials[index].vertices[vIndex].normal =3D =
D3DXVECTOR3(m_heightMap[index4].nx, m_heightMap[index4].ny, =
m_heightMap[index4].nz);=0A=
			m_Materials[index].vertices[vIndex].color =3D =
D3DXVECTOR4(m_heightMap[index4].r, m_heightMap[index4].g, =
m_heightMap[index4].b, 1.0f);=0A=
			m_Materials[index].indices[vIndex] =3D vIndex;=0A=
			vIndex++;=0A=
=0A=
			// Bottom left.=0A=
			m_Materials[index].vertices[vIndex].position =3D =
D3DXVECTOR3(m_heightMap[index1].x, m_heightMap[index1].y, =
m_heightMap[index1].z);=0A=
			m_Materials[index].vertices[vIndex].texture =3D D3DXVECTOR2(0.0f, =
1.0f);=0A=
			m_Materials[index].vertices[vIndex].normal =3D =
D3DXVECTOR3(m_heightMap[index1].nx, m_heightMap[index1].ny, =
m_heightMap[index1].nz);=0A=
			m_Materials[index].vertices[vIndex].color =3D =
D3DXVECTOR4(m_heightMap[index1].r, m_heightMap[index1].g, =
m_heightMap[index1].b, 1.0f);=0A=
			m_Materials[index].indices[vIndex] =3D vIndex;=0A=
			vIndex++;=0A=
=0A=
			// Bottom left.=0A=
			m_Materials[index].vertices[vIndex].position =3D =
D3DXVECTOR3(m_heightMap[index1].x, m_heightMap[index1].y, =
m_heightMap[index1].z);=0A=
			m_Materials[index].vertices[vIndex].texture =3D D3DXVECTOR2(0.0f, =
1.0f);=0A=
			m_Materials[index].vertices[vIndex].normal =3D =
D3DXVECTOR3(m_heightMap[index1].nx, m_heightMap[index1].ny, =
m_heightMap[index1].nz);=0A=
			m_Materials[index].vertices[vIndex].color =3D =
D3DXVECTOR4(m_heightMap[index1].r, m_heightMap[index1].g, =
m_heightMap[index1].b, 1.0f);=0A=
			m_Materials[index].indices[vIndex] =3D vIndex;=0A=
			vIndex++;=0A=
=0A=
			// Upper right.=0A=
			m_Materials[index].vertices[vIndex].position =3D =
D3DXVECTOR3(m_heightMap[index4].x, m_heightMap[index4].y, =
m_heightMap[index4].z);=0A=
			m_Materials[index].vertices[vIndex].texture =3D D3DXVECTOR2(1.0f, =
0.0f);=0A=
			m_Materials[index].vertices[vIndex].normal =3D =
D3DXVECTOR3(m_heightMap[index4].nx, m_heightMap[index4].ny, =
m_heightMap[index4].nz);=0A=
			m_Materials[index].vertices[vIndex].color =3D =
D3DXVECTOR4(m_heightMap[index4].r, m_heightMap[index4].g, =
m_heightMap[index4].b, 1.0f);=0A=
			m_Materials[index].indices[vIndex] =3D vIndex;=0A=
			vIndex++;=0A=
=0A=
			// Bottom right.=0A=
			m_Materials[index].vertices[vIndex].position =3D =
D3DXVECTOR3(m_heightMap[index2].x, m_heightMap[index2].y, =
m_heightMap[index2].z);=0A=
			m_Materials[index].vertices[vIndex].texture =3D D3DXVECTOR2(1.0f, =
1.0f);=0A=
			m_Materials[index].vertices[vIndex].normal =3D =
D3DXVECTOR3(m_heightMap[index2].nx, m_heightMap[index2].ny, =
m_heightMap[index2].nz);=0A=
			m_Materials[index].vertices[vIndex].color =3D =
D3DXVECTOR4(m_heightMap[index2].r, m_heightMap[index2].g, =
m_heightMap[index2].b, 1.0f);=0A=
			m_Materials[index].indices[vIndex] =3D vIndex;=0A=
			vIndex++;=0A=
=0A=
			// Increment the vertex and index array counts.=0A=
			m_Materials[index].vertexCount +=3D 6;=0A=
			m_Materials[index].indexCount +=3D 6;=0A=
		}=0A=
	}=0A=
=0A=
	// Now create the vertex and index buffers from the vertex and index =
arrays for each material group.=0A=
	for(i=3D0; i&lt;m_materialCount; i++)=0A=
	{=0A=
		vertexBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
		vertexBufferDesc.ByteWidth =3D sizeof(VertexType) * =
m_Materials[i].vertexCount;=0A=
		vertexBufferDesc.BindFlags =3D D3D11_BIND_VERTEX_BUFFER;=0A=
		vertexBufferDesc.CPUAccessFlags =3D 0;=0A=
		vertexBufferDesc.MiscFlags =3D 0;=0A=
		vertexBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
		vertexData.pSysMem =3D m_Materials[i].vertices;=0A=
		vertexData.SysMemPitch =3D 0;=0A=
		vertexData.SysMemSlicePitch =3D 0;=0A=
=0A=
		result =3D device-&gt;CreateBuffer(&amp;vertexBufferDesc, =
&amp;vertexData, &amp;m_Materials[i].vertexBuffer);=0A=
		if(FAILED(result))=0A=
		{=0A=
			return false;=0A=
		}=0A=
=0A=
		indexBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
		indexBufferDesc.ByteWidth =3D sizeof(unsigned long) * =
m_Materials[i].indexCount;=0A=
		indexBufferDesc.BindFlags =3D D3D11_BIND_INDEX_BUFFER;=0A=
		indexBufferDesc.CPUAccessFlags =3D 0;=0A=
		indexBufferDesc.MiscFlags =3D 0;=0A=
		indexBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
		indexData.pSysMem =3D m_Materials[i].indices;=0A=
		indexData.SysMemPitch =3D 0;=0A=
		indexData.SysMemSlicePitch =3D 0;=0A=
=0A=
		result =3D device-&gt;CreateBuffer(&amp;indexBufferDesc, =
&amp;indexData, &amp;m_Materials[i].indexBuffer);=0A=
		if(FAILED(result))=0A=
		{=0A=
			return false;=0A=
		}=0A=
=0A=
		delete [] m_Materials[i].vertices;=0A=
		m_Materials[i].vertices =3D 0;=0A=
=0A=
		delete [] m_Materials[i].indices;=0A=
		m_Materials[i].indices =3D 0;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
ReleaseMaterials=20
function cleans up the material groups array and the texture array =
during=20
shutdown. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">void =
TerrainClass::ReleaseMaterials()=0A=
{=0A=
	int i;=0A=
=0A=
=0A=
	// Release the material groups.=0A=
	if(m_Materials)=0A=
	{=0A=
		for(i=3D0; i&lt;m_materialCount; i++)=0A=
		{=0A=
			if(m_Materials[i].vertexBuffer)=0A=
			{=0A=
				m_Materials[i].vertexBuffer-&gt;Release();=0A=
				m_Materials[i].vertexBuffer =3D 0;=0A=
			}=0A=
=0A=
			if(m_Materials[i].indexBuffer)=0A=
			{=0A=
				m_Materials[i].indexBuffer-&gt;Release();=0A=
				m_Materials[i].indexBuffer =3D 0;=0A=
			}=0A=
=0A=
			if(m_Materials[i].vertices)=0A=
			{=0A=
				delete [] m_Materials[i].vertices;=0A=
				m_Materials[i].vertices =3D 0;=0A=
			}=0A=
=0A=
			if(m_Materials[i].indices)=0A=
			{=0A=
				delete [] m_Materials[i].indices;=0A=
				m_Materials[i].indices =3D 0;=0A=
			}=0A=
		}=0A=
=0A=
		delete [] m_Materials;=0A=
		m_Materials =3D 0;=0A=
	}=0A=
=0A=
	// Release the terrain textures and alpha maps.=0A=
	if(m_Textures)=0A=
	{=0A=
		for(i=3D0; i&lt;m_textureCount; i++)=0A=
		{=0A=
			m_Textures[i].Shutdown();=0A=
		}=0A=
=0A=
		delete [] m_Textures;=0A=
		m_Textures =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Render draws the=20
terrain using the material groups array as the vertex and index buffer =
source.
 It goes through each material group, sets its textures, and then draws =
the=20
terrain vertex data that is associated with those textures. When it is =
done with=20
one group in the changes the textures to the next group and then draws =
that=20
groups vertices. This is continued until all material groups have been =
rendered.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
TerrainClass::Render(ID3D11DeviceContext* deviceContext, =
TerrainShaderClass* shader, D3DXMATRIX worldMatrix, D3DXMATRIX =
viewMatrix,=0A=
			  D3DXMATRIX projectionMatrix, D3DXVECTOR4 ambientColor, D3DXVECTOR4 =
diffuseColor, D3DXVECTOR3 lightDirection)=0A=
{=0A=
	unsigned int stride;=0A=
	unsigned int offset;=0A=
	int i;=0A=
	bool result;=0A=
=0A=
=0A=
	// Set vertex buffer stride and offset.=0A=
	stride =3D sizeof(VertexType); =0A=
	offset =3D 0;=0A=
=0A=
	// Set the shader parameters that it will use for rendering.=0A=
	result =3D shader-&gt;SetShaderParameters(deviceContext, worldMatrix, =
viewMatrix, projectionMatrix, ambientColor, diffuseColor, =
lightDirection);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Set the type of primitive that should be rendered from the vertex =
buffers, in this case triangles.=0A=
	=
deviceContext-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGL=
ELIST);=0A=
=0A=
	// Render each material group.=0A=
	for(i=3D0; i&lt;m_materialCount; i++)=0A=
	{=0A=
		// Set the vertex buffer to active in the input assembler so it can be =
rendered.=0A=
		deviceContext-&gt;IASetVertexBuffers(0, 1, =
&amp;m_Materials[i].vertexBuffer, &amp;stride, &amp;offset);=0A=
=0A=
		// Set the index buffer to active in the input assembler so it can be =
rendered.=0A=
		deviceContext-&gt;IASetIndexBuffer(m_Materials[i].indexBuffer, =
DXGI_FORMAT_R32_UINT, 0);=0A=
=0A=
		// If the material group has a valid second texture index then this is =
a blended terrain polygon.=0A=
		if(m_Materials[i].textureIndex2 !=3D -1)=0A=
		{=0A=
			result =3D shader-&gt;SetShaderTextures(deviceContext,  =
m_Textures[m_Materials[i].textureIndex1].GetTexture(),  =0A=
							   m_Textures[m_Materials[i].textureIndex2].GetTexture(),  =
m_Textures[m_Materials[i].alphaIndex].GetTexture(),=0A=
							   true);=0A=
		}=0A=
=0A=
		// If not then it is just a single textured polygon.=0A=
		else=0A=
		{=0A=
			result =3D shader-&gt;SetShaderTextures(deviceContext, =
m_Textures[m_Materials[i].textureIndex1].GetTexture(), NULL, NULL, =
false);=0A=
		}=0A=
=0A=
		// Check if the textures were set or not.=0A=
		if(!result)=0A=
		{=0A=
			return false;=0A=
		}=0A=
=0A=
		// Now render the prepared buffers with the shader.=0A=
		shader-&gt;RenderShader(deviceContext, m_Materials[i].indexCount);=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Applicationclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
ApplicationClass=20
header has not changed for this tutorial. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: applicationclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _APPLICATIONCLASS_H_=0A=
#define _APPLICATIONCLASS_H_=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
const bool FULL_SCREEN =3D true;=0A=
const bool VSYNC_ENABLED =3D true;=0A=
const float SCREEN_DEPTH =3D 1000.0f;=0A=
const float SCREEN_NEAR =3D 0.1f;=0A=
=0A=
=0A=
///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "inputclass.h"=0A=
#include "d3dclass.h"=0A=
#include "cameraclass.h"=0A=
#include "terrainclass.h"=0A=
#include "timerclass.h"=0A=
#include "positionclass.h"=0A=
#include "fpsclass.h"=0A=
#include "cpuclass.h"=0A=
#include "fontshaderclass.h"=0A=
#include "textclass.h"=0A=
#include "terrainshaderclass.h"=0A=
#include "lightclass.h"=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: ApplicationClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class ApplicationClass=0A=
{=0A=
public:=0A=
	ApplicationClass();=0A=
	ApplicationClass(const ApplicationClass&amp;);=0A=
	~ApplicationClass();=0A=
=0A=
	bool Initialize(HINSTANCE, HWND, int, int);=0A=
	void Shutdown();=0A=
	bool Frame();=0A=
=0A=
private:=0A=
	bool HandleInput(float);=0A=
	bool RenderGraphics();=0A=
=0A=
private:=0A=
	InputClass* m_Input;=0A=
	D3DClass* m_Direct3D;=0A=
	CameraClass* m_Camera;=0A=
	TerrainClass* m_Terrain;=0A=
	TimerClass* m_Timer;=0A=
	PositionClass* m_Position;=0A=
	FpsClass* m_Fps;=0A=
	CpuClass* m_Cpu;=0A=
	FontShaderClass* m_FontShader;=0A=
	TextClass* m_Text;=0A=
	TerrainShaderClass* m_TerrainShader;=0A=
	LightClass* m_Light;=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Applicationclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: applicationclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "applicationclass.h"=0A=
=0A=
=0A=
ApplicationClass::ApplicationClass()=0A=
{=0A=
	m_Input =3D 0;=0A=
	m_Direct3D =3D 0;=0A=
	m_Camera =3D 0;=0A=
	m_Terrain =3D 0;=0A=
	m_Timer =3D 0;=0A=
	m_Position =3D 0;=0A=
	m_Fps =3D 0;=0A=
	m_Cpu =3D 0;=0A=
	m_FontShader =3D 0;=0A=
	m_Text =3D 0;=0A=
	m_TerrainShader =3D 0;=0A=
	m_Light =3D 0;=0A=
}=0A=
=0A=
=0A=
ApplicationClass::ApplicationClass(const ApplicationClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
ApplicationClass::~ApplicationClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::Initialize(HINSTANCE hinstance, HWND hwnd, int =
screenWidth, int screenHeight)=0A=
{=0A=
	bool result;=0A=
	float cameraX, cameraY, cameraZ;=0A=
	D3DXMATRIX baseViewMatrix;=0A=
	char videoCard[128];=0A=
	int videoMemory;=0A=
=0A=
	=0A=
	// Create the input object.  The input object will be used to handle =
reading the keyboard and mouse input from the user.=0A=
	m_Input =3D new InputClass;=0A=
	if(!m_Input)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the input object.=0A=
	result =3D m_Input-&gt;Initialize(hinstance, hwnd, screenWidth, =
screenHeight);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the input object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the Direct3D object.=0A=
	m_Direct3D =3D new D3DClass;=0A=
	if(!m_Direct3D)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the Direct3D object.=0A=
	result =3D m_Direct3D-&gt;Initialize(screenWidth, screenHeight, =
VSYNC_ENABLED, hwnd, FULL_SCREEN, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize DirectX 11.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the camera object.=0A=
	m_Camera =3D new CameraClass;=0A=
	if(!m_Camera)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize a base view matrix with the camera for 2D user interface =
rendering.=0A=
	m_Camera-&gt;SetPosition(0.0f, 0.0f, -1.0f);=0A=
	m_Camera-&gt;Render();=0A=
	m_Camera-&gt;GetViewMatrix(baseViewMatrix);=0A=
=0A=
	// Set the initial position of the camera.=0A=
	cameraX =3D 32.0f;=0A=
	cameraY =3D 1.0f;=0A=
	cameraZ =3D 1.0f;=0A=
=0A=
	m_Camera-&gt;SetPosition(cameraX, cameraY, cameraZ);=0A=
=0A=
	// Create the terrain object.=0A=
	m_Terrain =3D new TerrainClass;=0A=
	if(!m_Terrain)=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
terrain now=20
takes as input a file name of the textures and material indexes =
(legend.txt) and=20
a bitmap representing the material map (materialmap01.bmp). </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Initialize =
the terrain object.</FONT><FONT color=3D"#aaaaff" face=3D"arial" =
size=3D"2">=0A=
	result =3D m_Terrain-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
"../Engine/data/heightmap01.bmp", "../Engine/data/legend.txt", =0A=
				       "../Engine/data/materialmap01.bmp", =
"../Engine/data/colorm01.bmp");</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the terrain object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the timer object.=0A=
	m_Timer =3D new TimerClass;=0A=
	if(!m_Timer)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the timer object.=0A=
	result =3D m_Timer-&gt;Initialize();=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the timer object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the position object.=0A=
	m_Position =3D new PositionClass;=0A=
	if(!m_Position)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Set the initial position of the viewer to the same as the initial =
camera position.=0A=
	m_Position-&gt;SetPosition(cameraX, cameraY, cameraZ);=0A=
=0A=
	// Create the fps object.=0A=
	m_Fps =3D new FpsClass;=0A=
	if(!m_Fps)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the fps object.=0A=
	m_Fps-&gt;Initialize();=0A=
=0A=
	// Create the cpu object.=0A=
	m_Cpu =3D new CpuClass;=0A=
	if(!m_Cpu)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the cpu object.=0A=
	m_Cpu-&gt;Initialize();=0A=
=0A=
	// Create the font shader object.=0A=
	m_FontShader =3D new FontShaderClass;=0A=
	if(!m_FontShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the font shader object.=0A=
	result =3D m_FontShader-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the font shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the text object.=0A=
	m_Text =3D new TextClass;=0A=
	if(!m_Text)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the text object.=0A=
	result =3D m_Text-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
m_Direct3D-&gt;GetDeviceContext(), hwnd, screenWidth, screenHeight, =
baseViewMatrix);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the text object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Retrieve the video card information.=0A=
	m_Direct3D-&gt;GetVideoCardInfo(videoCard, videoMemory);=0A=
=0A=
	// Set the video card information in the text object.=0A=
	result =3D m_Text-&gt;SetVideoCardInfo(videoCard, videoMemory, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not set video card info in the text object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the terrain shader object.=0A=
	m_TerrainShader =3D new TerrainShaderClass;=0A=
	if(!m_TerrainShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the terrain shader object.=0A=
	result =3D m_TerrainShader-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the terrain shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the light object.=0A=
	m_Light =3D new LightClass;=0A=
	if(!m_Light)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the light object.=0A=
	m_Light-&gt;SetAmbientColor(0.05f, 0.05f, 0.05f, 1.0f);=0A=
	m_Light-&gt;SetDiffuseColor(1.0f, 1.0f, 1.0f, 1.0f);=0A=
	m_Light-&gt;SetDirection(-0.5f, -1.0f, 0.0f);=0A=
=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void ApplicationClass::Shutdown()=0A=
{=0A=
	// Release the light object.=0A=
	if(m_Light)=0A=
	{=0A=
		delete m_Light;=0A=
		m_Light =3D 0;=0A=
	}=0A=
=0A=
	// Release the terrain shader object.=0A=
	if(m_TerrainShader)=0A=
	{=0A=
		m_TerrainShader-&gt;Shutdown();=0A=
		delete m_TerrainShader;=0A=
		m_TerrainShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the text object.=0A=
	if(m_Text)=0A=
	{=0A=
		m_Text-&gt;Shutdown();=0A=
		delete m_Text;=0A=
		m_Text =3D 0;=0A=
	}=0A=
=0A=
	// Release the font shader object.=0A=
	if(m_FontShader)=0A=
	{=0A=
		m_FontShader-&gt;Shutdown();=0A=
		delete m_FontShader;=0A=
		m_FontShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the cpu object.=0A=
	if(m_Cpu)=0A=
	{=0A=
		m_Cpu-&gt;Shutdown();=0A=
		delete m_Cpu;=0A=
		m_Cpu =3D 0;=0A=
	}=0A=
=0A=
	// Release the fps object.=0A=
	if(m_Fps)=0A=
	{=0A=
		delete m_Fps;=0A=
		m_Fps =3D 0;=0A=
	}=0A=
=0A=
	// Release the position object.=0A=
	if(m_Position)=0A=
	{=0A=
		delete m_Position;=0A=
		m_Position =3D 0;=0A=
	}=0A=
=0A=
	// Release the timer object.=0A=
	if(m_Timer)=0A=
	{=0A=
		delete m_Timer;=0A=
		m_Timer =3D 0;=0A=
	}=0A=
=0A=
	// Release the terrain object.=0A=
	if(m_Terrain)=0A=
	{=0A=
		m_Terrain-&gt;Shutdown();=0A=
		delete m_Terrain;=0A=
		m_Terrain =3D 0;=0A=
	}=0A=
=0A=
	// Release the camera object.=0A=
	if(m_Camera)=0A=
	{=0A=
		delete m_Camera;=0A=
		m_Camera =3D 0;=0A=
	}=0A=
=0A=
	// Release the Direct3D object.=0A=
	if(m_Direct3D)=0A=
	{=0A=
		m_Direct3D-&gt;Shutdown();=0A=
		delete m_Direct3D;=0A=
		m_Direct3D =3D 0;=0A=
	}=0A=
=0A=
	// Release the input object.=0A=
	if(m_Input)=0A=
	{=0A=
		m_Input-&gt;Shutdown();=0A=
		delete m_Input;=0A=
		m_Input =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::Frame()=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Read the user input.=0A=
	result =3D m_Input-&gt;Frame();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
	=0A=
	// Check if the user pressed escape and wants to exit the application.=0A=
	if(m_Input-&gt;IsEscapePressed() =3D=3D true)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Update the system stats.=0A=
	m_Timer-&gt;Frame();=0A=
	m_Fps-&gt;Frame();=0A=
	m_Cpu-&gt;Frame();=0A=
=0A=
	// Update the FPS value in the text object.=0A=
	result =3D m_Text-&gt;SetFps(m_Fps-&gt;GetFps(), =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
	=0A=
	// Update the CPU usage value in the text object.=0A=
	result =3D m_Text-&gt;SetCpu(m_Cpu-&gt;GetCpuPercentage(), =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Do the frame input processing.=0A=
	result =3D HandleInput(m_Timer-&gt;GetTime());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Render the graphics.=0A=
	result =3D RenderGraphics();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return result;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::HandleInput(float frameTime)=0A=
{=0A=
	bool keyDown, result;=0A=
	float posX, posY, posZ, rotX, rotY, rotZ;=0A=
=0A=
=0A=
	// Set the frame time for calculating the updated position.=0A=
	m_Position-&gt;SetFrameTime(frameTime);=0A=
=0A=
	// Handle the input.=0A=
	keyDown =3D m_Input-&gt;IsLeftPressed();=0A=
	m_Position-&gt;TurnLeft(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsRightPressed();=0A=
	m_Position-&gt;TurnRight(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsUpPressed();=0A=
	m_Position-&gt;MoveForward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsDownPressed();=0A=
	m_Position-&gt;MoveBackward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsAPressed();=0A=
	m_Position-&gt;MoveUpward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsZPressed();=0A=
	m_Position-&gt;MoveDownward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsPgUpPressed();=0A=
	m_Position-&gt;LookUpward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsPgDownPressed();=0A=
	m_Position-&gt;LookDownward(keyDown);=0A=
	=0A=
	// Get the view point position/rotation.=0A=
	m_Position-&gt;GetPosition(posX, posY, posZ);=0A=
	m_Position-&gt;GetRotation(rotX, rotY, rotZ);=0A=
=0A=
	// Set the position of the camera.=0A=
	m_Camera-&gt;SetPosition(posX, posY, posZ);=0A=
	m_Camera-&gt;SetRotation(rotX, rotY, rotZ);=0A=
=0A=
	// Update the position values in the text object.=0A=
	result =3D m_Text-&gt;SetCameraPosition(posX, posY, posZ, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Update the rotation values in the text object.=0A=
	result =3D m_Text-&gt;SetCameraRotation(rotX, rotY, rotZ, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::RenderGraphics()=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, projectionMatrix, orthoMatrix;=0A=
	bool result;=0A=
=0A=
=0A=
	// Clear the scene.=0A=
	m_Direct3D-&gt;BeginScene(0.0f, 0.0f, 0.0f, 1.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world, view, projection, and ortho matrices from the camera =
and Direct3D objects.=0A=
	m_Direct3D-&gt;GetWorldMatrix(worldMatrix);=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_Direct3D-&gt;GetProjectionMatrix(projectionMatrix);=0A=
	m_Direct3D-&gt;GetOrthoMatrix(orthoMatrix);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
terrain Render=20
function now takes as input the TerrainShaderClass object and does all =
the=20
rendering work inside the TerrainClass. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Render the =
terrain buffers using the terrain shader.</FONT><FONT color=3D"#aaaaff" =
face=3D"arial" size=3D"2">=0A=
	result =3D m_Terrain-&gt;Render(m_Direct3D-&gt;GetDeviceContext(), =
m_TerrainShader, worldMatrix, viewMatrix, projectionMatrix, =
m_Light-&gt;GetAmbientColor(), =0A=
				   m_Light-&gt;GetDiffuseColor(), =
m_Light-&gt;GetDirection());</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn off the Z buffer to begin all 2D rendering.=0A=
	m_Direct3D-&gt;TurnZBufferOff();=0A=
		=0A=
	// Turn on the alpha blending before rendering the text.=0A=
	m_Direct3D-&gt;TurnOnAlphaBlending();=0A=
=0A=
	// Render the text user interface elements.=0A=
	result =3D m_Text-&gt;Render(m_Direct3D-&gt;GetDeviceContext(), =
m_FontShader, worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn off alpha blending after rendering the text.=0A=
	m_Direct3D-&gt;TurnOffAlphaBlending();=0A=
=0A=
	// Turn the Z buffer back on now that all 2D rendering has completed.=0A=
	m_Direct3D-&gt;TurnZBufferOn();=0A=
=0A=
	// Present the rendered scene to the screen.=0A=
	m_Direct3D-&gt;EndScene();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Summary</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
terrain now=20
smoothly blends textures using alpha maps where transitions are =
required. The=20
color map is also combined to help hide repetition and give the terrain =
an added=20
touch of color. </FONT></P>
<P align=3D"left"><IMG width=3D"500" height=3D"282" =
src=3D"http://web.archive.org/web/20140722204927im_/http://rastertek.com/=
pic0188.gif"=20
border=3D"0"></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>To Do=20
Exercises</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">1. =
Recompile and run=20
the program.  You will see blended textures on the terrain.  Press =
escape to=20
quit. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">2. =
In the pixel=20
shader comment out the last line of the color map addition so you can =
clearly=20
see the blending of the textures on the terrain. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">3. =
Modify the=20
material map bitmap using the same colors to place materials elsewhere =
on the=20
terrain. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">4. =
Create your own=20
material and material group and add it to the terrain. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>Source=20
Code</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Visual Studio 2010=20
Project: <A =
href=3D"http://web.archive.org/web/20140722204927/http://rastertek.com/te=
rtut09.zip">tertut09.zip</A></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Source Only: <A=20
href=3D"http://web.archive.org/web/20140722204927/http://rastertek.com/te=
rsrc09.zip">tersrc09.zip</A></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Executable Only: <A=20
href=3D"http://web.archive.org/web/20140722204927/http://rastertek.com/te=
rexe09.zip">terexe09.zip</A></FONT></P>
<P align=3D"left"><IMG width=3D"800" height=3D"1" =
src=3D"http://web.archive.org/web/20140722204927im_/http://rastertek.com/=
pic1002.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#cccccc" face=3D"Arial, Helvetica, =
sans-serif" size=3D"2"><A=20
href=3D"http://web.archive.org/web/20140722204927/http://rastertek.com/tu=
tindex.html">Back=20
to Tutorial Index</A></FONT></P></BODY></HTML><!--=0A=
     FILE ARCHIVED ON 20:49:27 Jul 22, 2014 AND RETRIEVED FROM THE=0A=
     INTERNET ARCHIVE ON 12:32:08 Aug 7, 2014.=0A=
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.=0A=
=0A=
     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.=0A=
     SECTION 108(a)(3)).=0A=
-->

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wayback-toolbar-logo.png

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

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wm_tb_prv_on.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMZJREFUeNqU07EKQWEUwHEuSSaLkicgg3TZzCySvIKk2GVgJZmsBg9g
8QK8gcHoASwGNoMS/l+db6Au3zn1W279b+fe796w779Cyimi7ymCFBbYox51CGLoYIS0XHv+C2uY
ynofExRmJWgG3fE7TGKMHuK/VrFhRJ7DRBmXN2XCBibIa87Ek5US2sM04Ro5DHDRhGbumMu6Szxc
QztndFHGVhPaOaCKFo6a0Iz5+jcoYYira2jnhhkKWNlO83ec0EYFu7cAAwCVABzGI3/GxAAAAABJ
RU5ErkJggg==

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wm_tb_nxt_off.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMhJREFUeNqU0s8KAUEcwPHBJjm5KHkCVy/BRZKnUMpBuXKmHGz+pDbl
CVwdOCoH5U8pD+DiwM1BSb5TO7WHjfn96tPW1reZndnI1Jt7SqkR9kowUZSwwwBpSfjxnw2cUEfc
JgxOBkNsUZSEZvJYYoGcJDRT8Q+tj5Qk1JNAE2fUELMNzWQxwRFlSWgmqXfhCII7unDxsgnfmKGN
m3n5L1yhhYPtdVxQRSEsClvxgZ7/9zx/bcUJrKq/o4OrzUnpcI0xNpI7+QowAGDEIqP9eOV2AAAA
AElFTkSuQmCC

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/jsp/graph.jsp?graphdata=475_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000101_2012:-1:000000000010_2013:-1:100000000000_2014:6:000000100000

iVBORw0KGgoAAAANSUhEUgAAAdsAAAAbCAYAAAA05SU0AAABPklEQVR42u3VPQqEMBCA0Tmntcex
9Fg5infIqqywSeUWA/68QAol8EgY+KKUUiN5MRgMBoPxZmNH1jVkbgaDwWDc11hTscWo9t8Z9+it
bwibfzlvNc7/7CWmuu1z52MQWwaDwWCIrdgyGAwGQ2zF1vAyGAyG2Iqt2DIYDAZDbMWWwWAwGGIr
toaXwWAwxFZsxZbBYDAYYiu2DAaDwRBbsTVYDAaDwRBbsWUwGAyG2Iqt4WUwGAyxFVuxZTAYDIbY
ii2DwWAwxFZsDS+DwWCIrdiKLYPBYDDEVmwZDAaDIbZia3gZDAaDIbZiy2AwGAyxFVvDy2AwGGIr
tgaLwWAwGGIrtgwGg8EQW7E1vAwGgyG2Yiu2DAaDwRBbsWUwGAyG2D46tpG8GAwGg3Fr4whe8510
j8b6je2V3uqI7dnzH5JzuRahLFWYAAAAAElFTkSuQmCC

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/transp-yellow-pixel.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP4/5/hPwAH/QL+ecrX
pAAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/transp-red-pixel.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A
/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAA1JREFUCNdjeMPQ8x8ABcwCeP+6qaAAAAAA
SUVORK5CYII=

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722204927im_/http://rastertek.com/pic1001.gif

R0lGODlhIAMBAPcAAAAAAP///wht//7+//b5//z9//L3//f6/wlu/wlt/wtu/wxv/w1w/w9x/xFy
/xN0/xNz/xV0/xZ1/xd2/xl3/xp3/xt4/xx5/x16/x96/yB7/yF8/yJ9/yR9/yV+/yZ//yeA/ymA
/yqB/yuC/y2D/y6D/y+E/zCF/zKG/zSH/zWI/zeI/ziJ/zmK/zuL/z2M/z6N/z+O/0GP/0KP/0OQ
/0SR/0aR/0eS/0iT/0mU/0uU/0yV/02W/0+X/1CY/1KZ/1Oa/1Sa/1ab/1ec/1md/1qd/1ue/1yf
/1+g/2Ch/2Gi/2Ki/2Sj/2Wk/2al/2il/2mm/2qn/2uo/22o/26p/2+q/3Cr/3Os/3St/3Wu/3eu
/3iv/3mw/3qx/3yx/32y/3+z/4G0/4K1/4O2/4W3/4a3/4e4/4i5/4q6/4y7/428/4+9/5C9/5G+
/5K//5TA/5bB/5fC/5jC/5rD/5vE/57F/5/G/6DH/6PI/6TJ/6XK/6fL/6jL/6nM/6rN/6zO/67P
/6/Q/7HR/7LR/7PS/7TT/7fU/7jV/7rW/7zX/73Y/7/Z/8Ha/8Lb/8Xc/8bd/8fe/8nf/8zh/87i
/9Dj/9Hk/9Pl/9fn/9no/9rp/93r/97r/9/s/+Lu/+Tv/+jx/+ny/+vz/+71//D2/4m6/5PA/5zF
/6HI/6vO/7nW/7/a/8Pc/8rg/83i/9Tm/9vq/+Dt/+Hu/+Xw/+fx/+z0//P4//j7/+v0/+/2//T5
//X6//n8//v9//3+/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4ALAAAAAAgAwEA
AAj/AAMIHEiwoEGCAxIO6MWQYYGHD3lJnLirosVdtjJqtHWg4wECIAnoCpmrZK2TKA2oXDmqZUtc
uETJnEmrps1boXKGAsWz56efs4LOkkVUlqejSD11WtopFqynTzlJ3URVk1VNr7K+ysQ1E6avYC+J
HeuqbFlLaC1VWluJklu3k+JOaiWprl1WeFlF2hsJkl9IjwI7Gjx4VaPDjRgpVqxqkeNFiiInmjwZ
keVUqQ5pNsS5c6HPhQiJHkRakOlAqFEDWg3oj+s/qPzI9tOnNh8+e3Lr2b07j288wIGfukOcuB07
dZInN0WnefM50OfImS4nDpzr199o117Kjfc24Nuw/xm/prya8+fTqFePpj0aUmfixzdDv4x9MvjJ
jNm/X4z/MAAGCMaABH5hoBcIdqEgFwwyuMWDWkSYxYRZYGEhFldkqKEVHFpRxYdVUEHFFCRKYaIU
UaSYIhRQPOGiEzA60cSMTTBho41L5KhEEjwmgcSPPx4h5BFGFGlEEUgSoeQQTA4hxJNCBCFlEED8
YOUPPmSZZQ9c9sDDlzzsIKYOZOZgJg5o4nDDmja0WcObNdAgJw0zzCDDnTHkGQMMfMLwwp9/uiDo
oC0UysKhKySqwqKLpuBoCihEGukJlJ5gwqUmlKApCZyO4OmnIoQawqgglFrqB6h6oKqqHbTKwasb
xFgaqwa0apDBrRlgoCsGF/TqqwXAWlDBsBQUW+wEyCYrwbISROBsBA9EGy0E1FYLgQPYZottA9x2
2wAD4IYL7gLkLqDAuegioO666ibgrgDwxivvvPTWG29AADs=

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722204927im_/http://rastertek.com/pic0189.gif

R0lGODlhQABAALMAAAAAAP///wAA/wAAgAD//wD/AP8AAIAAAICAgP///wAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAkALAAAAABAAEAAAAShMMhJq7046827/2AojmRpnmiqrmzrvnAsz3Rt33iu73zv
/8CgcEgsGo/IpHLJbDqf0Kh0Sq1ar9hsZ3Doer/gsHh8UCEK6LR6zW67C+a3fN6O0+9zO37P1vP/
cClnagQGAoB5gmuFh4hvfgWMjo+KhIaTbpCSmH2VaZucapqXoaKeaKClgSiDn6SqqyetqK+qo42w
t7Bouru9uaeRtaW/qhEAOw==

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722204927im_/http://rastertek.com/pic0188.gif

R0lGODlh9AEaAfcAAAAAAP///0RNSDZCOktSSy01LCuaGDZCNDSDHj5KO0JOPzI+LjpGNjI6L0JK
PztwIjY+MjpCNj5GOjpGMj5KNkJOOkhORFBWTEBeI0JONjI6KjY+LjpCMj5GNkJKOkZOPkxSRUhg
K0JOMlZbTzY+Kj5GMkJKNkZOOkZKP0JKMkZONjY6Ljo+Mj5CNkJGOkZOMi0xIzY6Kjo+Lj5CMkJG
NjM2KkZKOjY7JUxQPkJGMkZKNlVbPDo+KU1SOD5CLUlPKVFWNkJGLkZKMkpONk5TLFFWMVVaNEJG
KkZKLUpOMkdMI0JGIkJGJkpOLnJ0XD5BGDQ1JEFCJmlrQU5PMkxNOlhZRUVGHUFCIEZGIk5OKUZG
JkpKKlZWMk5OLkZGKlJSMkpKLlZWNkJCKlJSNkZGLkpKMj4+Kk5ONkJCLkZGMjo6KkpKNj4+LmZm
TEJCMkZGNl1dSGpqVDo6LkJCNlxbNUxKJmJgM21rRV1bPGVjQ1RTO0pHIlJPKlJPLj07JGZjPVhW
P21qS0ZCIlhTLUpGJkI+Ik5KKkZCJkpGKlZSMk5KLlJOMlZSNlpWOnFtTmRhS05IIlJMJUA7HkI+
JkZCKkpGLk5KMndxTlJONlZOKWJaNXNsSWtkREI+KkZCLkpGMk5KNkpCIk5GJjs1HVJKKlZOLlxU
NGNcPWNdQz46Kl5YQFNOOkI+LldSPkZCMkpGNkY+IV9ULkpCJk5GKlJKLlZOMl5WOlZKKkI6IkY+
JkpCKk5GLlJKMlZONlpSOm5lSntyWT46LkZCNkpGOk5BIlJFJkI6JkY+KkpCLk5GMlJKNpCIdJ+Y
h05CJlZKLjApGj01I2JWPGteQoV7ZbSuoUY6Iko+JWNUNVZKMl5SOkI6KkY+LkpCMnZqUk5GNkQ+
Ml9OLltLLk9CKlRGLTcuHlxNM0Y6Jko+K1JGMlZKNlpOOl5SPj02KkI2JE9CLkI6LkpCNiUdEmJO
M0Y6Kk5CMlpGLks5JUI2KlE9KltGMkc6LkYwJEw1LFM7NgMCAv///yH5BAEAAP8ALAAAAAD0ARoB
AAj/AAMIHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePBfOJLEeyZLiTKFOWXLlSnstr
MGG6nPkyJk15JG/SZLkypUqeLV2a9BkOHNGi4IymTMo0XL2nT53VG0e16kmgOmcCBepzqLOvYI+K
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

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722204927im_/http://rastertek.com/pic1002.gif

R0lGODlhIAMBAPcAAAAAAP///wht//7+//b5//z9//L3//f6/wlu/wlt/wtu/wxv/w1w/w9x/xFy
/xN0/xNz/xV0/xZ1/xd2/xl3/xp3/xt4/xx5/x16/x96/yB7/yF8/yJ9/yR9/yV+/yZ//yeA/ymA
/yqB/yuC/y2D/y6D/y+E/zCF/zKG/zSH/zWI/zeI/ziJ/zmK/zuL/z2M/z6N/z+O/0GP/0KP/0OQ
/0SR/0aR/0eS/0iT/0mU/0uU/0yV/02W/0+X/1CY/1KZ/1Oa/1Sa/1ab/1ec/1md/1qd/1ue/1yf
/1+g/2Ch/2Gi/2Ki/2Sj/2Wk/2al/2il/2mm/2qn/2uo/22o/26p/2+q/3Cr/3Os/3St/3Wu/3eu
/3iv/3mw/3qx/3yx/32y/3+z/4G0/4K1/4O2/4W3/4a3/4e4/4i5/4q6/4y7/428/4+9/5C9/5G+
/5K//5TA/5bB/5fC/5jC/5rD/5vE/57F/5/G/6DH/6PI/6TJ/6XK/6fL/6jL/6nM/6rN/6zO/67P
/6/Q/7HR/7LR/7PS/7TT/7fU/7jV/7rW/7zX/73Y/7/Z/8Ha/8Lb/8Xc/8bd/8fe/8nf/8zh/87i
/9Dj/9Hk/9Pl/9fn/9no/9rp/93r/97r/9/s/+Lu/+Tv/+jx/+ny/+vz/+71//D2/4m6/5PA/5zF
/6HI/6vO/7nW/7/a/8Pc/8rg/83i/9Tm/9vq/+Dt/+Hu/+Xw/+fx/+z0//P4//j7/+v0/+/2//T5
//X6//n8//v9//3+/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4ALAAAAAAgAwEA
AAj/AAUIHEiwoMGDAxMoRMCwIUMFECMumLiAgcWLFhto3NjAgcePHiGIHAnhgUmTEVJGkMBSwoSX
MCnIlFmhpoWbFi7o3ImhJ4YMQDNoGKphg1GjHJJ2WOqhadMPUEFIlRqiqoirI7JqJcG1hFcTYE2c
GHsChVmzKdKmUMGW7Yq3LOK2mOuirt0XePHC2Asjht8YMgLPmEGjMI0aiGvYWHyjMY7HOHJI1kF5
h2UemHn02NzDh2fPP0L/ABKkdBAhqIUMWT2EiOsisI3INnKk9hEkuHEn2Z1EyZLfTIIHb0K8iZPj
Tp4ohwIlinPnUqJLmUKdCpUq2KtY2W7livfvWMJj/8lCPouW81vSc1m/vot7L/C/yAdDv36Y+/jF
6B/Dnz+Z/2SUIaAZBJ5hoIGkoKEgGmk02KAaEEK4xoRsVNjGhW24oWEpb3TYIRwgghiHHCTKMceJ
c9Chooqm1OGii3bYcceMM56Cx4035qGjHjzyuMePfPDRx5B+FOkHKn8k+QcgTAISyJNPCiLlIFQS
YmUhWBZiyJZcHuJlKqkgImYiZJKpyJmLpLmIKoy02WYjcDayiiN00vnInZDkCUkkfEbCyp+sSCLo
oK1MYugklCSaaCWMVmLJo5a4Iqmkl1RqKSaYZprJppm84ukrmoSqySakcmIqLKiiGksnrHbiyauw
elgiy6yyzGLrLJ/kCsquvIbiayi30CLssKIUaywuuIyirLIGNOtsLdBGm8u0BFSrS7XVHqDtAbZ0
660tu4Qr7i68lGtuAeii28u66w7g7gABxCvvvPTWO29AADs=

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/css/banner-styles.css

.__wb_overlay {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; border: 0px currentColor !important; border-image: none =
!important; left: 0px; top: 0px; width: 100%; height: 100%; position: =
fixed; z-index: 2147483643 !important; opacity: 0.6; background-color: =
rgb(0, 0, 0); -moz-opacity: 0.6;
}
#__wb_record_overlay_div {
	cursor: wait !important;
}
.__wb_record_content {
	margin: 0px !important; padding: 0px !important; border-radius: 8px; =
left: 50%; top: 50%; position: fixed; z-index: 2147483644 !important; =
opacity: 1; box-shadow: 0px 0px 30px 5px #000; background-color: =
rgb(255, 255, 255) !important; -moz-box-shadow: 0 0 30px 5px #000; =
-webkit-box-shadow: 0 0 30px 5px #000;
}
#__wb_record_content_loader {
	width: 574px !important; height: 355px !important; padding-top: 30px =
!important; margin-top: -177px !important; margin-left: -287px =
!important; cursor: wait !important;
}
#__wb_record_content_done {
	width: 855px !important; height: 355px !important; margin-top: -177px =
!important; margin-left: -427px !important;
}
.__wb_record_content > * {
	margin: auto !important; text-align: center !important; font-family: =
"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
display: block !important;
}
.__wb_record_content > wb_h1 {
	margin: 0px !important; padding: 0px !important; width: auto =
!important; height: auto !important; color: rgb(34, 34, 34) !important; =
line-height: 2em; font-size: 36px !important; font-weight: normal =
!important;
}
.__wb_record_content > wb_p {
	margin: 8px 0px !important; padding: 0px !important; color: rgb(34, 34, =
34) !important; line-height: 2em; font-size: 17px !important;
}
.__wb_record_content > #_wb_logo {
	margin-bottom: 10px !important;
}
.__wb_record_content > #_wb_spinner {
	margin-top: 30px !important; margin-bottom: 30px !important;
}
.__wb_record_content > #_wb_curr_url {
	font-weight: bold !important; text-decoration: underline !important;
}
#__wb_record_content_done > #__wb_link {
	padding: 3px !important; border: 1px solid rgb(170, 170, 170) =
!important; border-image: none !important; width: 80% !important; =
height: auto !important; text-align: center !important; font-size: 20px =
!important;
}
#__wb_record_content_done > #__wb_link:focus {
	border-color: rgb(66, 139, 202) !important; outline: 0px !important;
}
#__wb_record_content_done > #__wb_donate_close {
	margin: 0px !important; padding: 8px 8px 0px 0px !important; width: =
auto !important; font-size: 18px !important; float: right; display: =
inline-block;
}
#__wb_donate_close > #__wb_record_done_close {
	vertical-align: bottom !important; display: inline-block; cursor: =
pointer !important;
}
#__wb_record_content_done > #__wb_donate_close a {
	color: rgb(66, 139, 202) !important;
}
#__wb_record_content_done > #__wb_donate_close a:link {
	color: rgb(66, 139, 202) !important; text-decoration: none !important; =
margin-right: 16px !important;
}
#__wb_record_content_done > #__wb_donate_close a:visited {
	color: rgb(66, 139, 202) !important;
}
#__wb_record_content_done > #__wb_donate_close a:hover {
	color: rgb(0, 177, 247) !important;
}
.__wb_banner_div {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; width: inherit !important; z-index: 2147483640 !important;
}
#__wb_spinningSquaresG {
	margin: 30px 0px 30px 160px !important; padding: 0px !important; =
border-radius: 0px !important; border: 0px currentColor !important; =
border-image: none !important; width: 240px; height: 20px; position: =
relative;
}
.__wb_spinningSquaresG {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; border: 0px currentColor !important; border-image: none =
!important; top: 0px; width: 22px; height: 22px; position: absolute; =
transform: scale(0.3); animation-name: bounce_spinningSquaresG; =
animation-duration: 1.9s; animation-iteration-count: infinite; =
background-color: rgb(0, 0, 0); -moz-animation-name: =
bounce_spinningSquaresG; -moz-animation-duration: 1.9s; =
-moz-animation-iteration-count: infinite; -moz-animation-direction: =
linear; -moz-transform: scale(.3); -webkit-animation-name: =
bounce_spinningSquaresG; -webkit-animation-duration: 1.9s; =
-webkit-animation-iteration-count: infinite; =
-webkit-animation-direction: linear; -webkit-transform: scale(.3); =
-o-animation-name: bounce_spinningSquaresG; -o-animation-duration: 1.9s; =
-o-animation-iteration-count: infinite; -o-animation-direction: linear; =
-o-transform: scale(.3);
}
#__wb_spinningSquaresG_1 {
	left: 0px; animation-delay: 0.76s; -moz-animation-delay: 0.76s; =
-webkit-animation-delay: 0.76s; -o-animation-delay: 0.76s;
}
#__wb_spinningSquaresG_2 {
	left: 30px; animation-delay: 0.95s; -moz-animation-delay: 0.95s; =
-webkit-animation-delay: 0.95s; -o-animation-delay: 0.95s;
}
#__wb_spinningSquaresG_3 {
	left: 60px; animation-delay: 1.14s; -moz-animation-delay: 1.14s; =
-webkit-animation-delay: 1.14s; -o-animation-delay: 1.14s;
}
#__wb_spinningSquaresG_4 {
	left: 90px; animation-delay: 1.33s; -moz-animation-delay: 1.33s; =
-webkit-animation-delay: 1.33s; -o-animation-delay: 1.33s;
}
#__wb_spinningSquaresG_5 {
	left: 120px; animation-delay: 1.52s; -moz-animation-delay: 1.52s; =
-webkit-animation-delay: 1.52s; -o-animation-delay: 1.52s;
}
#__wb_spinningSquaresG_6 {
	left: 150px; animation-delay: 1.71s; -moz-animation-delay: 1.71s; =
-webkit-animation-delay: 1.71s; -o-animation-delay: 1.71s;
}
#__wb_spinningSquaresG_7 {
	left: 180px; animation-delay: 1.9s; -moz-animation-delay: 1.9s; =
-webkit-animation-delay: 1.9s; -o-animation-delay: 1.9s;
}
#__wb_spinningSquaresG_8 {
	left: 210px; animation-delay: 2.09s; -moz-animation-delay: 2.09s; =
-webkit-animation-delay: 2.09s; -o-animation-delay: 2.09s;
}

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/analytics.js

var archive_analytics =3D {=0A=
    startTime: new Date(),=0A=
    img_src: "//analytics.archive.org/0.gif",=0A=
    values: { service: 'wb' },=0A=
    =0A=
    onload_func: function() {=0A=
	var now =3D new Date();=0A=
	var loadtime =3D now - archive_analytics.startTime;=0A=
=0A=
	var v =3D archive_analytics.values;=0A=
	v.loadtime =3D loadtime;=0A=
	v.timediff =3D -(now.getTimezoneOffset()/60);=0A=
	v.locale =3D archive_analytics.get_locale();=0A=
	// if no referrer set '-' as referrer=0A=
	v.referrer =3D document.referrer || '-';=0A=
=0A=
        var string =3D archive_analytics.format_bug(v);=0A=
        var loadtime_img =3D new Image(100,25);=0A=
        loadtime_img.src =3D archive_analytics.img_src + "?" + string;=0A=
    },=0A=
    format_bug: function(values) {=0A=
        var ret =3D ['version=3D2'], count =3D 2;=0A=
        =0A=
        for (var data in values) {=0A=
            ret.push(encodeURIComponent(data) + "=3D" + =
encodeURIComponent(values[data]));=0A=
            count =3D count + 1;=0A=
        }=0A=
        ret.push('count=3D' + count);=0A=
        return ret.join("&");=0A=
    },=0A=
    get_locale: function() {=0A=
        if (navigator) {=0A=
	    return navigator.language || navigator.browserLanguage ||=0A=
		navigator.systemLanguage || navigator.userLanguage || '';=0A=
        }=0A=
        return '';=0A=
    },=0A=
    get_cookie: function(name) {=0A=
      var parts =3D document.cookie.split(name + "=3D");=0A=
      if (parts.length =3D=3D 2) return parts.pop().split(";").shift();=0A=
      return 0;=0A=
    }=0A=
};=0A=
=0A=
if (window.addEventListener) {=0A=
    window.addEventListener('load', archive_analytics.onload_func, =
false);=0A=
} else if (window.attachEvent) {=0A=
    window.attachEvent('onload', archive_analytics.onload_func);=0A=
}=0A=
=0A=
window.archive_analytics.values['server_ms'] =3D =
window.archive_analytics.get_cookie("wb_total_perf"); =0A=

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/disclaim-element.js

function getFrameArea(frame) {=0A=
  if(frame.innerWidth) return frame.innerWidth * frame.innerHeight;=0A=
  if(frame.document.documentElement && =
frame.document.documentElement.clientHeight) return =
frame.document.documentElement.clientWidth * =
frame.document.documentElement.clientHeight;=0A=
  if(frame.document.body) return frame.document.body.clientWidth * =
frame.document.body.clientHeight;=0A=
  return 0;=0A=
}=0A=
=0A=
function isLargestFrame() {=0A=
	if(top =3D=3D self) {=0A=
		return true;=0A=
	}=0A=
	if(top.document.body.tagName =3D=3D "BODY") {=0A=
		return false;=0A=
	}=0A=
	largestArea =3D 0;=0A=
	largestFrame =3D null;=0A=
	for(i=3D0;i<top.frames.length;i++) {=0A=
		frame =3D top.frames[i];=0A=
		area =3D getFrameArea(frame);=0A=
		if(area > largestArea) {=0A=
			largestFrame =3D frame;=0A=
			largestArea =3D area;=0A=
		}=0A=
	}=0A=
	return (self =3D=3D largestFrame);=0A=
}=0A=
=0A=
function disclaimElement(element) {=0A=
	if(isLargestFrame()) {=0A=
		element.style.display=3D"block";=0A=
		document.body.insertBefore(element,document.body.firstChild);=0A=
	}=0A=
}=0A=
=0A=
function disclaimToggle(largest, nonLargest) {=0A=
	if(isLargestFrame()) {=0A=
		largest.style.display=3D"block";=0A=
		nonLargest.style.display=3D"none";=0A=
	} else {=0A=
		largest.style.display=3D"none";=0A=
		nonLargest.style.display=3D"block";=0A=
	}=0A=
}=0A=
=0A=

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/graph-calc.js

function getEventX(event) {=0A=
	var posx =3D 0;=0A=
	if (event.pageX || event.pageY) {=0A=
		posx =3D  event.pageX;=0A=
	}=0A=
	else if (event.clientX || event.clientY) 	{=0A=
		posx =3D event.clientX + document.body.scrollLeft=0A=
			+ document.documentElement.scrollLeft;=0A=
	}=0A=
	return posx;=0A=
}=0A=
function getElementX(obj) {=0A=
	var x =3D 0;=0A=
	if (obj.offsetParent) {=0A=
		do {=0A=
			x +=3D obj.offsetLeft;=0A=
		} while (obj =3D obj.offsetParent);=0A=
	}=0A=
	return x;=0A=
}=0A=
function zeroPad(str,len) {=0A=
	var i;=0A=
	var pad =3D "";=0A=
	var s =3D str.toString();=0A=
	for(i=3Ds.length; i < len; i++) {=0A=
		pad =3D "0".toString() + pad.toString();=0A=
	}=0A=
	return pad.toString() + s.toString();=0A=
}=0A=
=0A=
function dateToTimestamp(date) {=0A=
	return date.getFullYear() +=0A=
		zeroPad(date.getMonth()+1,2) +=0A=
		zeroPad(date.getDay()+1,2) +=0A=
		zeroPad(date.getHours(),2) +=0A=
		zeroPad(date.getMinutes(),2) +=0A=
		zeroPad(date.getSeconds(),2);=0A=
}=0A=
=0A=
function calcTimestamp(event,element,firstMS,lastMS) {=0A=
	  var eventX =3D getEventX(event);=0A=
	  var elementX =3D getElementX(element);=0A=
	  var elementWidth =3D element.width;=0A=
	  var msWidth =3D lastMS - firstMS;=0A=
	  var x =3D eventX - elementX;=0A=
	  var pct =3D x / elementWidth;=0A=
	  var pctDate =3D pct * msWidth;=0A=
	  var date =3D pctDate + firstMS;=0A=
	  return dateToTimestamp(new Date(date));=0A=
}=0A=

------=_NextPart_000_0000_01CFB21A.1B1C3140
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/jflot/jquery.min.js

/*=0A=
 * jQuery JavaScript Library v1.3.2=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Copyright (c) 2009 John Resig=0A=
 * Dual licensed under the MIT and GPL licenses.=0A=
 * http://docs.jquery.com/License=0A=
 *=0A=
 * Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)=0A=
 * Revision: 6246=0A=
 */=0A=
(function(){var =
window=3Dthis,undefined,_jQuery=3Dwindow.jQuery,_$=3Dwindow.$,jQuery=3Dwi=
ndow.jQuery=3Dwindow.$=3Dfunction(selector,context){return new =
jQuery.fn.init(selector,context)},quickExpr=3D/^[^<]*(<(.|\s)+>)[^>]*$|^#=
([\w-]+)$/,isSimple=3D/^.[^:#\[\.,]*$/;jQuery.fn=3DjQuery.prototype=3D{in=
it:function(selector,context){selector=3Dselector||document;if(selector.n=
odeType){this[0]=3Dselector;this.length=3D1;this.context=3Dselector;retur=
n this}if(typeof selector=3D=3D=3D"string"){var =
match=3DquickExpr.exec(selector);if(match&&(match[1]||!context)){if(match=
[1]){selector=3DjQuery.clean([match[1]],context)}else{var =
elem=3Ddocument.getElementById(match[3]);if(elem&&elem.id!=3Dmatch[3]){re=
turn jQuery().find(selector)}var =
ret=3DjQuery(elem||[]);ret.context=3Ddocument;ret.selector=3Dselector;ret=
urn ret}}else{return =
jQuery(context).find(selector)}}else{if(jQuery.isFunction(selector)){retu=
rn =
jQuery(document).ready(selector)}}if(selector.selector&&selector.context)=
{this.selector=3Dselector.selector;this.context=3Dselector.context}return=
 =
this.setArray(jQuery.isArray(selector)?selector:jQuery.makeArray(selector=
))},selector:"",jquery:"1.3.2",size:function(){return =
this.length},get:function(num){return =
num=3D=3D=3Dundefined?Array.prototype.slice.call(this):this[num]},pushSta=
ck:function(elems,name,selector){var =
ret=3DjQuery(elems);ret.prevObject=3Dthis;ret.context=3Dthis.context;if(n=
ame=3D=3D=3D"find"){ret.selector=3Dthis.selector+(this.selector?" =
":"")+selector}else{if(name){ret.selector=3Dthis.selector+"."+name+"("+se=
lector+")"}}return =
ret},setArray:function(elems){this.length=3D0;Array.prototype.push.apply(=
this,elems);return this},each:function(callback,args){return =
jQuery.each(this,callback,args)},index:function(elem){return =
jQuery.inArray(elem&&elem.jquery?elem[0]:elem,this)},attr:function(name,v=
alue,type){var options=3Dname;if(typeof =
name=3D=3D=3D"string"){if(value=3D=3D=3Dundefined){return =
this[0]&&jQuery[type||"attr"](this[0],name)}else{options=3D{};options[nam=
e]=3Dvalue}}return this.each(function(i){for(name in =
options){jQuery.attr(type?this.style:this,name,jQuery.prop(this,options[n=
ame],type,i,name))}})},css:function(key,value){if((key=3D=3D"width"||key=3D=
=3D"height")&&parseFloat(value)<0){value=3Dundefined}return =
this.attr(key,value,"curCSS")},text:function(text){if(typeof =
text!=3D=3D"object"&&text!=3Dnull){return =
this.empty().append((this[0]&&this[0].ownerDocument||document).createText=
Node(text))}var =
ret=3D"";jQuery.each(text||this,function(){jQuery.each(this.childNodes,fu=
nction(){if(this.nodeType!=3D8){ret+=3Dthis.nodeType!=3D1?this.nodeValue:=
jQuery.fn.text([this])}})});return =
ret},wrapAll:function(html){if(this[0]){var =
wrap=3DjQuery(html,this[0].ownerDocument).clone();if(this[0].parentNode){=
wrap.insertBefore(this[0])}wrap.map(function(){var =
elem=3Dthis;while(elem.firstChild){elem=3Delem.firstChild}return =
elem}).append(this)}return this},wrapInner:function(html){return =
this.each(function(){jQuery(this).contents().wrapAll(html)})},wrap:functi=
on(html){return =
this.each(function(){jQuery(this).wrapAll(html)})},append:function(){retu=
rn =
this.domManip(arguments,true,function(elem){if(this.nodeType=3D=3D1){this=
.appendChild(elem)}})},prepend:function(){return =
this.domManip(arguments,true,function(elem){if(this.nodeType=3D=3D1){this=
.insertBefore(elem,this.firstChild)}})},before:function(){return =
this.domManip(arguments,false,function(elem){this.parentNode.insertBefore=
(elem,this)})},after:function(){return =
this.domManip(arguments,false,function(elem){this.parentNode.insertBefore=
(elem,this.nextSibling)})},end:function(){return =
this.prevObject||jQuery([])},push:[].push,sort:[].sort,splice:[].splice,f=
ind:function(selector){if(this.length=3D=3D=3D1){var =
ret=3Dthis.pushStack([],"find",selector);ret.length=3D0;jQuery.find(selec=
tor,this[0],ret);return ret}else{return =
this.pushStack(jQuery.unique(jQuery.map(this,function(elem){return =
jQuery.find(selector,elem)})),"find",selector)}},clone:function(events){v=
ar =
ret=3Dthis.map(function(){if(!jQuery.support.noCloneEvent&&!jQuery.isXMLD=
oc(this)){var html=3Dthis.outerHTML;if(!html){var =
div=3Dthis.ownerDocument.createElement("div");div.appendChild(this.cloneN=
ode(true));html=3Ddiv.innerHTML}return jQuery.clean([html.replace(/ =
jQuery\d+=3D"(?:\d+|null)"/g,"").replace(/^\s*/,"")])[0]}else{return =
this.cloneNode(true)}});if(events=3D=3D=3Dtrue){var =
orig=3Dthis.find("*").andSelf(),i=3D0;ret.find("*").andSelf().each(functi=
on(){if(this.nodeName!=3D=3Dorig[i].nodeName){return }var =
events=3DjQuery.data(orig[i],"events");for(var type in events){for(var =
handler in =
events[type]){jQuery.event.add(this,type,events[type][handler],events[typ=
e][handler].data)}}i++})}return ret},filter:function(selector){return =
this.pushStack(jQuery.isFunction(selector)&&jQuery.grep(this,function(ele=
m,i){return =
selector.call(elem,i)})||jQuery.multiFilter(selector,jQuery.grep(this,fun=
ction(elem){return =
elem.nodeType=3D=3D=3D1})),"filter",selector)},closest:function(selector)=
{var =
pos=3DjQuery.expr.match.POS.test(selector)?jQuery(selector):null,closer=3D=
0;return this.map(function(){var =
cur=3Dthis;while(cur&&cur.ownerDocument){if(pos?pos.index(cur)>-1:jQuery(=
cur).is(selector)){jQuery.data(cur,"closest",closer);return =
cur}cur=3Dcur.parentNode;closer++}})},not:function(selector){if(typeof =
selector=3D=3D=3D"string"){if(isSimple.test(selector)){return =
this.pushStack(jQuery.multiFilter(selector,this,true),"not",selector)}els=
e{selector=3DjQuery.multiFilter(selector,this)}}var =
isArrayLike=3Dselector.length&&selector[selector.length-1]!=3D=3Dundefine=
d&&!selector.nodeType;return this.filter(function(){return =
isArrayLike?jQuery.inArray(this,selector)<0:this!=3Dselector})},add:funct=
ion(selector){return =
this.pushStack(jQuery.unique(jQuery.merge(this.get(),typeof =
selector=3D=3D=3D"string"?jQuery(selector):jQuery.makeArray(selector))))}=
,is:function(selector){return =
!!selector&&jQuery.multiFilter(selector,this).length>0},hasClass:function=
(selector){return =
!!selector&&this.is("."+selector)},val:function(value){if(value=3D=3D=3Du=
ndefined){var =
elem=3Dthis[0];if(elem){if(jQuery.nodeName(elem,"option")){return(elem.at=
tributes.value||{}).specified?elem.value:elem.text}if(jQuery.nodeName(ele=
m,"select")){var =
index=3Delem.selectedIndex,values=3D[],options=3Delem.options,one=3Delem.=
type=3D=3D"select-one";if(index<0){return null}for(var =
i=3Done?index:0,max=3Done?index+1:options.length;i<max;i++){var =
option=3Doptions[i];if(option.selected){value=3DjQuery(option).val();if(o=
ne){return value}values.push(value)}}return =
values}return(elem.value||"").replace(/\r/g,"")}return =
undefined}if(typeof value=3D=3D=3D"number"){value+=3D""}return =
this.each(function(){if(this.nodeType!=3D1){return =
}if(jQuery.isArray(value)&&/radio|checkbox/.test(this.type)){this.checked=
=3D(jQuery.inArray(this.value,value)>=3D0||jQuery.inArray(this.name,value=
)>=3D0)}else{if(jQuery.nodeName(this,"select")){var =
values=3DjQuery.makeArray(value);jQuery("option",this).each(function(){th=
is.selected=3D(jQuery.inArray(this.value,values)>=3D0||jQuery.inArray(thi=
s.text,values)>=3D0)});if(!values.length){this.selectedIndex=3D-1}}else{t=
his.value=3Dvalue}}})},html:function(value){return =
value=3D=3D=3Dundefined?(this[0]?this[0].innerHTML.replace(/ =
jQuery\d+=3D"(?:\d+|null)"/g,""):null):this.empty().append(value)},replac=
eWith:function(value){return =
this.after(value).remove()},eq:function(i){return =
this.slice(i,+i+1)},slice:function(){return =
this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.=
prototype.slice.call(arguments).join(","))},map:function(callback){return=
 this.pushStack(jQuery.map(this,function(elem,i){return =
callback.call(elem,i,elem)}))},andSelf:function(){return =
this.add(this.prevObject)},domManip:function(args,table,callback){if(this=
[0]){var =
fragment=3D(this[0].ownerDocument||this[0]).createDocumentFragment(),scri=
pts=3DjQuery.clean(args,(this[0].ownerDocument||this[0]),fragment),first=3D=
fragment.firstChild;if(first){for(var =
i=3D0,l=3Dthis.length;i<l;i++){callback.call(root(this[i],first),this.len=
gth>1||i>0?fragment.cloneNode(true):fragment)}}if(scripts){jQuery.each(sc=
ripts,evalScript)}}return this;function root(elem,cur){return =
table&&jQuery.nodeName(elem,"table")&&jQuery.nodeName(cur,"tr")?(elem.get=
ElementsByTagName("tbody")[0]||elem.appendChild(elem.ownerDocument.create=
Element("tbody"))):elem}}};jQuery.fn.init.prototype=3DjQuery.fn;function =
evalScript(i,elem){if(elem.src){jQuery.ajax({url:elem.src,async:false,dat=
aType:"script"})}else{jQuery.globalEval(elem.text||elem.textContent||elem=
.innerHTML||"")}if(elem.parentNode){elem.parentNode.removeChild(elem)}}fu=
nction now(){return +new =
Date}jQuery.extend=3DjQuery.fn.extend=3Dfunction(){var =
target=3Darguments[0]||{},i=3D1,length=3Darguments.length,deep=3Dfalse,op=
tions;if(typeof =
target=3D=3D=3D"boolean"){deep=3Dtarget;target=3Darguments[1]||{};i=3D2}i=
f(typeof =
target!=3D=3D"object"&&!jQuery.isFunction(target)){target=3D{}}if(length=3D=
=3Di){target=3Dthis;--i}for(;i<length;i++){if((options=3Darguments[i])!=3D=
null){for(var name in options){var =
src=3Dtarget[name],copy=3Doptions[name];if(target=3D=3D=3Dcopy){continue}=
if(deep&&copy&&typeof =
copy=3D=3D=3D"object"&&!copy.nodeType){target[name]=3DjQuery.extend(deep,=
src||(copy.length!=3Dnull?[]:{}),copy)}else{if(copy!=3D=3Dundefined){targ=
et[name]=3Dcopy}}}}}return target};var =
exclude=3D/z-?index|font-?weight|opacity|zoom|line-?height/i,defaultView=3D=
document.defaultView||{},toString=3DObject.prototype.toString;jQuery.exte=
nd({noConflict:function(deep){window.$=3D_$;if(deep){window.jQuery=3D_jQu=
ery}return jQuery},isFunction:function(obj){return =
toString.call(obj)=3D=3D=3D"[object =
Function]"},isArray:function(obj){return =
toString.call(obj)=3D=3D=3D"[object =
Array]"},isXMLDoc:function(elem){return =
elem.nodeType=3D=3D=3D9&&elem.documentElement.nodeName!=3D=3D"HTML"||!!el=
em.ownerDocument&&jQuery.isXMLDoc(elem.ownerDocument)},globalEval:functio=
n(data){if(data&&/\S/.test(data)){var =
head=3Ddocument.getElementsByTagName("head")[0]||document.documentElement=
,script=3Ddocument.createElement("script");script.type=3D"text/javascript=
";if(jQuery.support.scriptEval){script.appendChild(document.createTextNod=
e(data))}else{script.text=3Ddata}head.insertBefore(script,head.firstChild=
);head.removeChild(script)}},nodeName:function(elem,name){return =
elem.nodeName&&elem.nodeName.toUpperCase()=3D=3Dname.toUpperCase()},each:=
function(object,callback,args){var =
name,i=3D0,length=3Dobject.length;if(args){if(length=3D=3D=3Dundefined){f=
or(name in =
object){if(callback.apply(object[name],args)=3D=3D=3Dfalse){break}}}else{=
for(;i<length;){if(callback.apply(object[i++],args)=3D=3D=3Dfalse){break}=
}}}else{if(length=3D=3D=3Dundefined){for(name in =
object){if(callback.call(object[name],name,object[name])=3D=3D=3Dfalse){b=
reak}}}else{for(var =
value=3Dobject[0];i<length&&callback.call(value,i,value)!=3D=3Dfalse;valu=
e=3Dobject[++i]){}}}return =
object},prop:function(elem,value,type,i,name){if(jQuery.isFunction(value)=
){value=3Dvalue.call(elem,i)}return typeof =
value=3D=3D=3D"number"&&type=3D=3D"curCSS"&&!exclude.test(name)?value+"px=
":value},className:{add:function(elem,classNames){jQuery.each((classNames=
||"").split(/\s+/),function(i,className){if(elem.nodeType=3D=3D1&&!jQuery=
.className.has(elem.className,className)){elem.className+=3D(elem.classNa=
me?" =
":"")+className}})},remove:function(elem,classNames){if(elem.nodeType=3D=3D=
1){elem.className=3DclassNames!=3D=3Dundefined?jQuery.grep(elem.className=
.split(/\s+/),function(className){return =
!jQuery.className.has(classNames,className)}).join(" =
"):""}},has:function(elem,className){return =
elem&&jQuery.inArray(className,(elem.className||elem).toString().split(/\=
s+/))>-1}},swap:function(elem,options,callback){var old=3D{};for(var =
name in =
options){old[name]=3Delem.style[name];elem.style[name]=3Doptions[name]}ca=
llback.call(elem);for(var name in =
options){elem.style[name]=3Dold[name]}},css:function(elem,name,force,extr=
a){if(name=3D=3D"width"||name=3D=3D"height"){var =
val,props=3D{position:"absolute",visibility:"hidden",display:"block"},whi=
ch=3Dname=3D=3D"width"?["Left","Right"]:["Top","Bottom"];function =
getWH(){val=3Dname=3D=3D"width"?elem.offsetWidth:elem.offsetHeight;if(ext=
ra=3D=3D=3D"border"){return =
}jQuery.each(which,function(){if(!extra){val-=3DparseFloat(jQuery.curCSS(=
elem,"padding"+this,true))||0}if(extra=3D=3D=3D"margin"){val+=3DparseFloa=
t(jQuery.curCSS(elem,"margin"+this,true))||0}else{val-=3DparseFloat(jQuer=
y.curCSS(elem,"border"+this+"Width",true))||0}})}if(elem.offsetWidth!=3D=3D=
0){getWH()}else{jQuery.swap(elem,props,getWH)}return =
Math.max(0,Math.round(val))}return =
jQuery.curCSS(elem,name,force)},curCSS:function(elem,name,force){var =
ret,style=3Delem.style;if(name=3D=3D"opacity"&&!jQuery.support.opacity){r=
et=3DjQuery.attr(style,"opacity");return =
ret=3D=3D""?"1":ret}if(name.match(/float/i)){name=3DstyleFloat}if(!force&=
&style&&style[name]){ret=3Dstyle[name]}else{if(defaultView.getComputedSty=
le){if(name.match(/float/i)){name=3D"float"}name=3Dname.replace(/([A-Z])/=
g,"-$1").toLowerCase();var =
computedStyle=3DdefaultView.getComputedStyle(elem,null);if(computedStyle)=
{ret=3DcomputedStyle.getPropertyValue(name)}if(name=3D=3D"opacity"&&ret=3D=
=3D""){ret=3D"1"}}else{if(elem.currentStyle){var =
camelCase=3Dname.replace(/\-(\w)/g,function(all,letter){return =
letter.toUpperCase()});ret=3Delem.currentStyle[name]||elem.currentStyle[c=
amelCase];if(!/^\d+(px)?$/i.test(ret)&&/^\d/.test(ret)){var =
left=3Dstyle.left,rsLeft=3Delem.runtimeStyle.left;elem.runtimeStyle.left=3D=
elem.currentStyle.left;style.left=3Dret||0;ret=3Dstyle.pixelLeft+"px";sty=
le.left=3Dleft;elem.runtimeStyle.left=3DrsLeft}}}}return =
ret},clean:function(elems,context,fragment){context=3Dcontext||document;i=
f(typeof =
context.createElement=3D=3D=3D"undefined"){context=3Dcontext.ownerDocumen=
t||context[0]&&context[0].ownerDocument||document}if(!fragment&&elems.len=
gth=3D=3D=3D1&&typeof elems[0]=3D=3D=3D"string"){var =
match=3D/^<(\w+)\s*\/?>$/.exec(elems[0]);if(match){return[context.createE=
lement(match[1])]}}var =
ret=3D[],scripts=3D[],div=3Dcontext.createElement("div");jQuery.each(elem=
s,function(i,elem){if(typeof =
elem=3D=3D=3D"number"){elem+=3D""}if(!elem){return }if(typeof =
elem=3D=3D=3D"string"){elem=3Delem.replace(/(<(\w+)[^>]*?)\/>/g,function(=
all,front,tag){return =
tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?all=
:front+"></"+tag+">"});var =
tags=3Delem.replace(/^\s+/,"").substring(0,10).toLowerCase();var =
wrap=3D!tags.indexOf("<opt")&&[1,"<select =
multiple=3D'multiple'>","</select>"]||!tags.indexOf("<leg")&&[1,"<fieldse=
t>","</fieldset>"]||tags.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,"<ta=
ble>","</table>"]||!tags.indexOf("<tr")&&[2,"<table><tbody>","</tbody></t=
able>"]||(!tags.indexOf("<td")||!tags.indexOf("<th"))&&[3,"<table><tbody>=
<tr>","</tr></tbody></table>"]||!tags.indexOf("<col")&&[2,"<table><tbody>=
</tbody><colgroup>","</colgroup></table>"]||!jQuery.support.htmlSerialize=
&&[1,"div<div>","</div>"]||[0,"",""];div.innerHTML=3Dwrap[1]+elem+wrap[2]=
;while(wrap[0]--){div=3Ddiv.lastChild}if(!jQuery.support.tbody){var =
hasBody=3D/<tbody/i.test(elem),tbody=3D!tags.indexOf("<table")&&!hasBody?=
div.firstChild&&div.firstChild.childNodes:wrap[1]=3D=3D"<table>"&&!hasBod=
y?div.childNodes:[];for(var =
j=3Dtbody.length-1;j>=3D0;--j){if(jQuery.nodeName(tbody[j],"tbody")&&!tbo=
dy[j].childNodes.length){tbody[j].parentNode.removeChild(tbody[j])}}}if(!=
jQuery.support.leadingWhitespace&&/^\s/.test(elem)){div.insertBefore(cont=
ext.createTextNode(elem.match(/^\s*/)[0]),div.firstChild)}elem=3DjQuery.m=
akeArray(div.childNodes)}if(elem.nodeType){ret.push(elem)}else{ret=3DjQue=
ry.merge(ret,elem)}});if(fragment){for(var =
i=3D0;ret[i];i++){if(jQuery.nodeName(ret[i],"script")&&(!ret[i].type||ret=
[i].type.toLowerCase()=3D=3D=3D"text/javascript")){scripts.push(ret[i].pa=
rentNode?ret[i].parentNode.removeChild(ret[i]):ret[i])}else{if(ret[i].nod=
eType=3D=3D=3D1){ret.splice.apply(ret,[i+1,0].concat(jQuery.makeArray(ret=
[i].getElementsByTagName("script"))))}fragment.appendChild(ret[i])}}retur=
n scripts}return =
ret},attr:function(elem,name,value){if(!elem||elem.nodeType=3D=3D3||elem.=
nodeType=3D=3D8){return undefined}var =
notxml=3D!jQuery.isXMLDoc(elem),set=3Dvalue!=3D=3Dundefined;name=3Dnotxml=
&&jQuery.props[name]||name;if(elem.tagName){var =
special=3D/href|src|style/.test(name);if(name=3D=3D"selected"&&elem.paren=
tNode){elem.parentNode.selectedIndex}if(name in =
elem&&notxml&&!special){if(set){if(name=3D=3D"type"&&jQuery.nodeName(elem=
,"input")&&elem.parentNode){throw"type property can't be =
changed"}elem[name]=3Dvalue}if(jQuery.nodeName(elem,"form")&&elem.getAttr=
ibuteNode(name)){return =
elem.getAttributeNode(name).nodeValue}if(name=3D=3D"tabIndex"){var =
attributeNode=3Delem.getAttributeNode("tabIndex");return =
attributeNode&&attributeNode.specified?attributeNode.value:elem.nodeName.=
match(/(button|input|object|select|textarea)/i)?0:elem.nodeName.match(/^(=
a|area)$/i)&&elem.href?0:undefined}return =
elem[name]}if(!jQuery.support.style&&notxml&&name=3D=3D"style"){return =
jQuery.attr(elem.style,"cssText",value)}if(set){elem.setAttribute(name,""=
+value)}var =
attr=3D!jQuery.support.hrefNormalized&&notxml&&special?elem.getAttribute(=
name,2):elem.getAttribute(name);return =
attr=3D=3D=3Dnull?undefined:attr}if(!jQuery.support.opacity&&name=3D=3D"o=
pacity"){if(set){elem.zoom=3D1;elem.filter=3D(elem.filter||"").replace(/a=
lpha\([^)]*\)/,"")+(parseInt(value)+""=3D=3D"NaN"?"":"alpha(opacity=3D"+v=
alue*100+")")}return =
elem.filter&&elem.filter.indexOf("opacity=3D")>=3D0?(parseFloat(elem.filt=
er.match(/opacity=3D([^)]*)/)[1])/100)+"":""}name=3Dname.replace(/-([a-z]=
)/ig,function(all,letter){return =
letter.toUpperCase()});if(set){elem[name]=3Dvalue}return =
elem[name]},trim:function(text){return(text||"").replace(/^\s+|\s+$/g,"")=
},makeArray:function(array){var ret=3D[];if(array!=3Dnull){var =
i=3Darray.length;if(i=3D=3Dnull||typeof =
array=3D=3D=3D"string"||jQuery.isFunction(array)||array.setInterval){ret[=
0]=3Darray}else{while(i){ret[--i]=3Darray[i]}}}return =
ret},inArray:function(elem,array){for(var =
i=3D0,length=3Darray.length;i<length;i++){if(array[i]=3D=3D=3Delem){retur=
n i}}return -1},merge:function(first,second){var =
i=3D0,elem,pos=3Dfirst.length;if(!jQuery.support.getAll){while((elem=3Dse=
cond[i++])!=3Dnull){if(elem.nodeType!=3D8){first[pos++]=3Delem}}}else{whi=
le((elem=3Dsecond[i++])!=3Dnull){first[pos++]=3Delem}}return =
first},unique:function(array){var ret=3D[],done=3D{};try{for(var =
i=3D0,length=3Darray.length;i<length;i++){var =
id=3DjQuery.data(array[i]);if(!done[id]){done[id]=3Dtrue;ret.push(array[i=
])}}}catch(e){ret=3Darray}return =
ret},grep:function(elems,callback,inv){var ret=3D[];for(var =
i=3D0,length=3Delems.length;i<length;i++){if(!inv!=3D!callback(elems[i],i=
)){ret.push(elems[i])}}return ret},map:function(elems,callback){var =
ret=3D[];for(var i=3D0,length=3Delems.length;i<length;i++){var =
value=3Dcallback(elems[i],i);if(value!=3Dnull){ret[ret.length]=3Dvalue}}r=
eturn ret.concat.apply([],ret)}});var =
userAgent=3Dnavigator.userAgent.toLowerCase();jQuery.browser=3D{version:(=
userAgent.match(/.+(?:rv|it|ra|ie)[\/: =
]([\d.]+)/)||[0,"0"])[1],safari:/webkit/.test(userAgent),opera:/opera/.te=
st(userAgent),msie:/msie/.test(userAgent)&&!/opera/.test(userAgent),mozil=
la:/mozilla/.test(userAgent)&&!/(compatible|webkit)/.test(userAgent)};jQu=
ery.each({parent:function(elem){return =
elem.parentNode},parents:function(elem){return =
jQuery.dir(elem,"parentNode")},next:function(elem){return =
jQuery.nth(elem,2,"nextSibling")},prev:function(elem){return =
jQuery.nth(elem,2,"previousSibling")},nextAll:function(elem){return =
jQuery.dir(elem,"nextSibling")},prevAll:function(elem){return =
jQuery.dir(elem,"previousSibling")},siblings:function(elem){return =
jQuery.sibling(elem.parentNode.firstChild,elem)},children:function(elem){=
return jQuery.sibling(elem.firstChild)},contents:function(elem){return =
jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.contentWindow.d=
ocument:jQuery.makeArray(elem.childNodes)}},function(name,fn){jQuery.fn[n=
ame]=3Dfunction(selector){var =
ret=3DjQuery.map(this,fn);if(selector&&typeof =
selector=3D=3D"string"){ret=3DjQuery.multiFilter(selector,ret)}return =
this.pushStack(jQuery.unique(ret),name,selector)}});jQuery.each({appendTo=
:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",r=
eplaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=3Dfuncti=
on(selector){var ret=3D[],insert=3DjQuery(selector);for(var =
i=3D0,l=3Dinsert.length;i<l;i++){var =
elems=3D(i>0?this.clone(true):this).get();jQuery.fn[original].apply(jQuer=
y(insert[i]),elems);ret=3Dret.concat(elems)}return =
this.pushStack(ret,name,selector)}});jQuery.each({removeAttr:function(nam=
e){jQuery.attr(this,name,"");if(this.nodeType=3D=3D1){this.removeAttribut=
e(name)}},addClass:function(classNames){jQuery.className.add(this,classNa=
mes)},removeClass:function(classNames){jQuery.className.remove(this,class=
Names)},toggleClass:function(classNames,state){if(typeof =
state!=3D=3D"boolean"){state=3D!jQuery.className.has(this,classNames)}jQu=
ery.className[state?"add":"remove"](this,classNames)},remove:function(sel=
ector){if(!selector||jQuery.filter(selector,[this]).length){jQuery("*",th=
is).add([this]).each(function(){jQuery.event.remove(this);jQuery.removeDa=
ta(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},empty=
:function(){jQuery(this).children().remove();while(this.firstChild){this.=
removeChild(this.firstChild)}}},function(name,fn){jQuery.fn[name]=3Dfunct=
ion(){return this.each(fn,arguments)}});function num(elem,prop){return =
elem[0]&&parseInt(jQuery.curCSS(elem[0],prop,true),10)||0}var =
expando=3D"jQuery"+now(),uuid=3D0,windowData=3D{};jQuery.extend({cache:{}=
,data:function(elem,name,data){elem=3Delem=3D=3Dwindow?windowData:elem;va=
r =
id=3Delem[expando];if(!id){id=3Delem[expando]=3D++uuid}if(name&&!jQuery.c=
ache[id]){jQuery.cache[id]=3D{}}if(data!=3D=3Dundefined){jQuery.cache[id]=
[name]=3Ddata}return =
name?jQuery.cache[id][name]:id},removeData:function(elem,name){elem=3Dele=
m=3D=3Dwindow?windowData:elem;var =
id=3Delem[expando];if(name){if(jQuery.cache[id]){delete =
jQuery.cache[id][name];name=3D"";for(name in =
jQuery.cache[id]){break}if(!name){jQuery.removeData(elem)}}}else{try{dele=
te =
elem[expando]}catch(e){if(elem.removeAttribute){elem.removeAttribute(expa=
ndo)}}delete =
jQuery.cache[id]}},queue:function(elem,type,data){if(elem){type=3D(type||=
"fx")+"queue";var =
q=3DjQuery.data(elem,type);if(!q||jQuery.isArray(data)){q=3DjQuery.data(e=
lem,type,jQuery.makeArray(data))}else{if(data){q.push(data)}}}return =
q},dequeue:function(elem,type){var =
queue=3DjQuery.queue(elem,type),fn=3Dqueue.shift();if(!type||type=3D=3D=3D=
"fx"){fn=3Dqueue[0]}if(fn!=3D=3Dundefined){fn.call(elem)}}});jQuery.fn.ex=
tend({data:function(key,value){var =
parts=3Dkey.split(".");parts[1]=3Dparts[1]?"."+parts[1]:"";if(value=3D=3D=
=3Dundefined){var =
data=3Dthis.triggerHandler("getData"+parts[1]+"!",[parts[0]]);if(data=3D=3D=
=3Dundefined&&this.length){data=3DjQuery.data(this[0],key)}return =
data=3D=3D=3Dundefined&&parts[1]?this.data(parts[0]):data}else{return =
this.trigger("setData"+parts[1]+"!",[parts[0],value]).each(function(){jQu=
ery.data(this,key,value)})}},removeData:function(key){return =
this.each(function(){jQuery.removeData(this,key)})},queue:function(type,d=
ata){if(typeof =
type!=3D=3D"string"){data=3Dtype;type=3D"fx"}if(data=3D=3D=3Dundefined){r=
eturn jQuery.queue(this[0],type)}return this.each(function(){var =
queue=3DjQuery.queue(this,type,data);if(type=3D=3D"fx"&&queue.length=3D=3D=
1){queue[0].call(this)}})},dequeue:function(type){return =
this.each(function(){jQuery.dequeue(this,type)})}});=0A=
/*=0A=
 * Sizzle CSS Selector Engine - v0.9.3=0A=
 *  Copyright 2009, The Dojo Foundation=0A=
 *  Released under the MIT, BSD, and GPL Licenses.=0A=
 *  More information: http://sizzlejs.com/=0A=
 */=0A=
(function(){var =
chunker=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]=
|[^[\]'"]+)+\]|\\.|[^ =
>+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g,done=3D0,toString=3DObject.prototype.toS=
tring;var =
Sizzle=3Dfunction(selector,context,results,seed){results=3Dresults||[];co=
ntext=3Dcontext||document;if(context.nodeType!=3D=3D1&&context.nodeType!=3D=
=3D9){return[]}if(!selector||typeof selector!=3D=3D"string"){return =
results}var =
parts=3D[],m,set,checkSet,check,mode,extra,prune=3Dtrue;chunker.lastIndex=
=3D0;while((m=3Dchunker.exec(selector))!=3D=3Dnull){parts.push(m[1]);if(m=
[2]){extra=3DRegExp.rightContext;break}}if(parts.length>1&&origPOS.exec(s=
elector)){if(parts.length=3D=3D=3D2&&Expr.relative[parts[0]]){set=3DposPr=
ocess(parts[0]+parts[1],context)}else{set=3DExpr.relative[parts[0]]?[cont=
ext]:Sizzle(parts.shift(),context);while(parts.length){selector=3Dparts.s=
hift();if(Expr.relative[selector]){selector+=3Dparts.shift()}set=3DposPro=
cess(selector,set)}}}else{var =
ret=3Dseed?{expr:parts.pop(),set:makeArray(seed)}:Sizzle.find(parts.pop()=
,parts.length=3D=3D=3D1&&context.parentNode?context.parentNode:context,is=
XML(context));set=3DSizzle.filter(ret.expr,ret.set);if(parts.length>0){ch=
eckSet=3DmakeArray(set)}else{prune=3Dfalse}while(parts.length){var =
cur=3Dparts.pop(),pop=3Dcur;if(!Expr.relative[cur]){cur=3D""}else{pop=3Dp=
arts.pop()}if(pop=3D=3Dnull){pop=3Dcontext}Expr.relative[cur](checkSet,po=
p,isXML(context))}}if(!checkSet){checkSet=3Dset}if(!checkSet){throw"Synta=
x error, unrecognized expression: =
"+(cur||selector)}if(toString.call(checkSet)=3D=3D=3D"[object =
Array]"){if(!prune){results.push.apply(results,checkSet)}else{if(context.=
nodeType=3D=3D=3D1){for(var =
i=3D0;checkSet[i]!=3Dnull;i++){if(checkSet[i]&&(checkSet[i]=3D=3D=3Dtrue|=
|checkSet[i].nodeType=3D=3D=3D1&&contains(context,checkSet[i]))){results.=
push(set[i])}}}else{for(var =
i=3D0;checkSet[i]!=3Dnull;i++){if(checkSet[i]&&checkSet[i].nodeType=3D=3D=
=3D1){results.push(set[i])}}}}}else{makeArray(checkSet,results)}if(extra)=
{Sizzle(extra,context,results,seed);if(sortOrder){hasDuplicate=3Dfalse;re=
sults.sort(sortOrder);if(hasDuplicate){for(var =
i=3D1;i<results.length;i++){if(results[i]=3D=3D=3Dresults[i-1]){results.s=
plice(i--,1)}}}}}return =
results};Sizzle.matches=3Dfunction(expr,set){return =
Sizzle(expr,null,null,set)};Sizzle.find=3Dfunction(expr,context,isXML){va=
r set,match;if(!expr){return[]}for(var =
i=3D0,l=3DExpr.order.length;i<l;i++){var =
type=3DExpr.order[i],match;if((match=3DExpr.match[type].exec(expr))){var =
left=3DRegExp.leftContext;if(left.substr(left.length-1)!=3D=3D"\\"){match=
[1]=3D(match[1]||"").replace(/\\/g,"");set=3DExpr.find[type](match,contex=
t,isXML);if(set!=3Dnull){expr=3Dexpr.replace(Expr.match[type],"");break}}=
}}if(!set){set=3Dcontext.getElementsByTagName("*")}return{set:set,expr:ex=
pr}};Sizzle.filter=3Dfunction(expr,set,inplace,not){var =
old=3Dexpr,result=3D[],curLoop=3Dset,match,anyFound,isXMLFilter=3Dset&&se=
t[0]&&isXML(set[0]);while(expr&&set.length){for(var type in =
Expr.filter){if((match=3DExpr.match[type].exec(expr))!=3Dnull){var =
filter=3DExpr.filter[type],found,item;anyFound=3Dfalse;if(curLoop=3D=3Dre=
sult){result=3D[]}if(Expr.preFilter[type]){match=3DExpr.preFilter[type](m=
atch,curLoop,inplace,result,not,isXMLFilter);if(!match){anyFound=3Dfound=3D=
true}else{if(match=3D=3D=3Dtrue){continue}}}if(match){for(var =
i=3D0;(item=3DcurLoop[i])!=3Dnull;i++){if(item){found=3Dfilter(item,match=
,i,curLoop);var =
pass=3Dnot^!!found;if(inplace&&found!=3Dnull){if(pass){anyFound=3Dtrue}el=
se{curLoop[i]=3Dfalse}}else{if(pass){result.push(item);anyFound=3Dtrue}}}=
}}if(found!=3D=3Dundefined){if(!inplace){curLoop=3Dresult}expr=3Dexpr.rep=
lace(Expr.match[type],"");if(!anyFound){return[]}break}}}if(expr=3D=3Dold=
){if(anyFound=3D=3Dnull){throw"Syntax error, unrecognized expression: =
"+expr}else{break}}old=3Dexpr}return curLoop};var =
Expr=3DSizzle.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\=
u00c0-\uFFFF_-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,NAME:/\[=
name=3D['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00=
c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=3D)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\=
u00c0-\uFFFF\*_-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|o=
dd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(=
?=3D[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\=
)]+\)|[^\2\(\)]*)+)\2\))?/},attrMap:{"class":"className","for":"htmlFor"}=
,attrHandle:{href:function(elem){return =
elem.getAttribute("href")}},relative:{"+":function(checkSet,part,isXML){v=
ar isPartStr=3Dtypeof =
part=3D=3D=3D"string",isTag=3DisPartStr&&!/\W/.test(part),isPartStrNotTag=
=3DisPartStr&&!isTag;if(isTag&&!isXML){part=3Dpart.toUpperCase()}for(var =
i=3D0,l=3DcheckSet.length,elem;i<l;i++){if((elem=3DcheckSet[i])){while((e=
lem=3Delem.previousSibling)&&elem.nodeType!=3D=3D1){}checkSet[i]=3DisPart=
StrNotTag||elem&&elem.nodeName=3D=3D=3Dpart?elem||false:elem=3D=3D=3Dpart=
}}if(isPartStrNotTag){Sizzle.filter(part,checkSet,true)}},">":function(ch=
eckSet,part,isXML){var isPartStr=3Dtypeof =
part=3D=3D=3D"string";if(isPartStr&&!/\W/.test(part)){part=3DisXML?part:p=
art.toUpperCase();for(var i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){var =
parent=3Delem.parentNode;checkSet[i]=3Dparent.nodeName=3D=3D=3Dpart?paren=
t:false}}}else{for(var i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){checkSet[i]=3DisPartStr?elem.parentNode:elem.=
parentNode=3D=3D=3Dpart}}if(isPartStr){Sizzle.filter(part,checkSet,true)}=
}},"":function(checkSet,part,isXML){var =
doneName=3Ddone++,checkFn=3DdirCheck;if(!part.match(/\W/)){var =
nodeCheck=3Dpart=3DisXML?part:part.toUpperCase();checkFn=3DdirNodeCheck}c=
heckFn("parentNode",part,doneName,checkSet,nodeCheck,isXML)},"~":function=
(checkSet,part,isXML){var doneName=3Ddone++,checkFn=3DdirCheck;if(typeof =
part=3D=3D=3D"string"&&!part.match(/\W/)){var =
nodeCheck=3Dpart=3DisXML?part:part.toUpperCase();checkFn=3DdirNodeCheck}c=
heckFn("previousSibling",part,doneName,checkSet,nodeCheck,isXML)}},find:{=
ID:function(match,context,isXML){if(typeof =
context.getElementById!=3D=3D"undefined"&&!isXML){var =
m=3Dcontext.getElementById(match[1]);return =
m?[m]:[]}},NAME:function(match,context,isXML){if(typeof =
context.getElementsByName!=3D=3D"undefined"){var =
ret=3D[],results=3Dcontext.getElementsByName(match[1]);for(var =
i=3D0,l=3Dresults.length;i<l;i++){if(results[i].getAttribute("name")=3D=3D=
=3Dmatch[1]){ret.push(results[i])}}return =
ret.length=3D=3D=3D0?null:ret}},TAG:function(match,context){return =
context.getElementsByTagName(match[1])}},preFilter:{CLASS:function(match,=
curLoop,inplace,result,not,isXML){match=3D" =
"+match[1].replace(/\\/g,"")+" ";if(isXML){return match}for(var =
i=3D0,elem;(elem=3DcurLoop[i])!=3Dnull;i++){if(elem){if(not^(elem.classNa=
me&&(" "+elem.className+" =
").indexOf(match)>=3D0)){if(!inplace){result.push(elem)}}else{if(inplace)=
{curLoop[i]=3Dfalse}}}}return false},ID:function(match){return =
match[1].replace(/\\/g,"")},TAG:function(match,curLoop){for(var =
i=3D0;curLoop[i]=3D=3D=3Dfalse;i++){}return =
curLoop[i]&&isXML(curLoop[i])?match[1]:match[1].toUpperCase()},CHILD:func=
tion(match){if(match[1]=3D=3D"nth"){var =
test=3D/(-?)(\d*)n((?:\+|-)?\d*)/.exec(match[2]=3D=3D"even"&&"2n"||match[=
2]=3D=3D"odd"&&"2n+1"||!/\D/.test(match[2])&&"0n+"+match[2]||match[2]);ma=
tch[2]=3D(test[1]+(test[2]||1))-0;match[3]=3Dtest[3]-0}match[0]=3Ddone++;=
return match},ATTR:function(match,curLoop,inplace,result,not,isXML){var =
name=3Dmatch[1].replace(/\\/g,"");if(!isXML&&Expr.attrMap[name]){match[1]=
=3DExpr.attrMap[name]}if(match[2]=3D=3D=3D"~=3D"){match[4]=3D" =
"+match[4]+" "}return =
match},PSEUDO:function(match,curLoop,inplace,result,not){if(match[1]=3D=3D=
=3D"not"){if(match[3].match(chunker).length>1||/^\w/.test(match[3])){matc=
h[3]=3DSizzle(match[3],null,null,curLoop)}else{var =
ret=3DSizzle.filter(match[3],curLoop,inplace,true^not);if(!inplace){resul=
t.push.apply(result,ret)}return =
false}}else{if(Expr.match.POS.test(match[0])||Expr.match.CHILD.test(match=
[0])){return true}}return =
match},POS:function(match){match.unshift(true);return =
match}},filters:{enabled:function(elem){return =
elem.disabled=3D=3D=3Dfalse&&elem.type!=3D=3D"hidden"},disabled:function(=
elem){return elem.disabled=3D=3D=3Dtrue},checked:function(elem){return =
elem.checked=3D=3D=3Dtrue},selected:function(elem){elem.parentNode.select=
edIndex;return elem.selected=3D=3D=3Dtrue},parent:function(elem){return =
!!elem.firstChild},empty:function(elem){return =
!elem.firstChild},has:function(elem,i,match){return =
!!Sizzle(match[3],elem).length},header:function(elem){return/h\d/i.test(e=
lem.nodeName)},text:function(elem){return"text"=3D=3D=3Delem.type},radio:=
function(elem){return"radio"=3D=3D=3Delem.type},checkbox:function(elem){r=
eturn"checkbox"=3D=3D=3Delem.type},file:function(elem){return"file"=3D=3D=
=3Delem.type},password:function(elem){return"password"=3D=3D=3Delem.type}=
,submit:function(elem){return"submit"=3D=3D=3Delem.type},image:function(e=
lem){return"image"=3D=3D=3Delem.type},reset:function(elem){return"reset"=3D=
=3D=3Delem.type},button:function(elem){return"button"=3D=3D=3Delem.type||=
elem.nodeName.toUpperCase()=3D=3D=3D"BUTTON"},input:function(elem){return=
/input|select|textarea|button/i.test(elem.nodeName)}},setFilters:{first:f=
unction(elem,i){return =
i=3D=3D=3D0},last:function(elem,i,match,array){return =
i=3D=3D=3Darray.length-1},even:function(elem,i){return =
i%2=3D=3D=3D0},odd:function(elem,i){return =
i%2=3D=3D=3D1},lt:function(elem,i,match){return =
i<match[3]-0},gt:function(elem,i,match){return =
i>match[3]-0},nth:function(elem,i,match){return =
match[3]-0=3D=3Di},eq:function(elem,i,match){return =
match[3]-0=3D=3Di}},filter:{PSEUDO:function(elem,match,i,array){var =
name=3Dmatch[1],filter=3DExpr.filters[name];if(filter){return =
filter(elem,i,match,array)}else{if(name=3D=3D=3D"contains"){return(elem.t=
extContent||elem.innerText||"").indexOf(match[3])>=3D0}else{if(name=3D=3D=
=3D"not"){var not=3Dmatch[3];for(var =
i=3D0,l=3Dnot.length;i<l;i++){if(not[i]=3D=3D=3Delem){return =
false}}return true}}}},CHILD:function(elem,match){var =
type=3Dmatch[1],node=3Delem;switch(type){case"only":case"first":while(nod=
e=3Dnode.previousSibling){if(node.nodeType=3D=3D=3D1){return =
false}}if(type=3D=3D"first"){return =
true}node=3Delem;case"last":while(node=3Dnode.nextSibling){if(node.nodeTy=
pe=3D=3D=3D1){return false}}return true;case"nth":var =
first=3Dmatch[2],last=3Dmatch[3];if(first=3D=3D1&&last=3D=3D0){return =
true}var =
doneName=3Dmatch[0],parent=3Delem.parentNode;if(parent&&(parent.sizcache!=
=3D=3DdoneName||!elem.nodeIndex)){var =
count=3D0;for(node=3Dparent.firstChild;node;node=3Dnode.nextSibling){if(n=
ode.nodeType=3D=3D=3D1){node.nodeIndex=3D++count}}parent.sizcache=3DdoneN=
ame}var diff=3Delem.nodeIndex-last;if(first=3D=3D0){return =
diff=3D=3D0}else{return(diff%first=3D=3D0&&diff/first>=3D0)}}},ID:functio=
n(elem,match){return =
elem.nodeType=3D=3D=3D1&&elem.getAttribute("id")=3D=3D=3Dmatch},TAG:funct=
ion(elem,match){return(match=3D=3D=3D"*"&&elem.nodeType=3D=3D=3D1)||elem.=
nodeName=3D=3D=3Dmatch},CLASS:function(elem,match){return(" =
"+(elem.className||elem.getAttribute("class"))+" =
").indexOf(match)>-1},ATTR:function(elem,match){var =
name=3Dmatch[1],result=3DExpr.attrHandle[name]?Expr.attrHandle[name](elem=
):elem[name]!=3Dnull?elem[name]:elem.getAttribute(name),value=3Dresult+""=
,type=3Dmatch[2],check=3Dmatch[4];return =
result=3D=3Dnull?type=3D=3D=3D"!=3D":type=3D=3D=3D"=3D"?value=3D=3D=3Dche=
ck:type=3D=3D=3D"*=3D"?value.indexOf(check)>=3D0:type=3D=3D=3D"~=3D"?(" =
"+value+" =
").indexOf(check)>=3D0:!check?value&&result!=3D=3Dfalse:type=3D=3D=3D"!=3D=
"?value!=3Dcheck:type=3D=3D=3D"^=3D"?value.indexOf(check)=3D=3D=3D0:type=3D=
=3D=3D"$=3D"?value.substr(value.length-check.length)=3D=3D=3Dcheck:type=3D=
=3D=3D"|=3D"?value=3D=3D=3Dcheck||value.substr(0,check.length+1)=3D=3D=3D=
check+"-":false},POS:function(elem,match,i,array){var =
name=3Dmatch[2],filter=3DExpr.setFilters[name];if(filter){return =
filter(elem,i,match,array)}}}};var origPOS=3DExpr.match.POS;for(var type =
in =
Expr.match){Expr.match[type]=3DRegExp(Expr.match[type].source+/(?![^\[]*\=
])(?![^\(]*\))/.source)}var =
makeArray=3Dfunction(array,results){array=3DArray.prototype.slice.call(ar=
ray);if(results){results.push.apply(results,array);return results}return =
array};try{Array.prototype.slice.call(document.documentElement.childNodes=
)}catch(e){makeArray=3Dfunction(array,results){var =
ret=3Dresults||[];if(toString.call(array)=3D=3D=3D"[object =
Array]"){Array.prototype.push.apply(ret,array)}else{if(typeof =
array.length=3D=3D=3D"number"){for(var =
i=3D0,l=3Darray.length;i<l;i++){ret.push(array[i])}}else{for(var =
i=3D0;array[i];i++){ret.push(array[i])}}}return ret}}var =
sortOrder;if(document.documentElement.compareDocumentPosition){sortOrder=3D=
function(a,b){var =
ret=3Da.compareDocumentPosition(b)&4?-1:a=3D=3D=3Db?0:1;if(ret=3D=3D=3D0)=
{hasDuplicate=3Dtrue}return ret}}else{if("sourceIndex" in =
document.documentElement){sortOrder=3Dfunction(a,b){var =
ret=3Da.sourceIndex-b.sourceIndex;if(ret=3D=3D=3D0){hasDuplicate=3Dtrue}r=
eturn ret}}else{if(document.createRange){sortOrder=3Dfunction(a,b){var =
aRange=3Da.ownerDocument.createRange(),bRange=3Db.ownerDocument.createRan=
ge();aRange.selectNode(a);aRange.collapse(true);bRange.selectNode(b);bRan=
ge.collapse(true);var =
ret=3DaRange.compareBoundaryPoints(Range.START_TO_END,bRange);if(ret=3D=3D=
=3D0){hasDuplicate=3Dtrue}return ret}}}}(function(){var =
form=3Ddocument.createElement("form"),id=3D"script"+(new =
Date).getTime();form.innerHTML=3D"<input name=3D'"+id+"'/>";var =
root=3Ddocument.documentElement;root.insertBefore(form,root.firstChild);i=
f(!!document.getElementById(id)){Expr.find.ID=3Dfunction(match,context,is=
XML){if(typeof context.getElementById!=3D=3D"undefined"&&!isXML){var =
m=3Dcontext.getElementById(match[1]);return =
m?m.id=3D=3D=3Dmatch[1]||typeof =
m.getAttributeNode!=3D=3D"undefined"&&m.getAttributeNode("id").nodeValue=3D=
=3D=3Dmatch[1]?[m]:undefined:[]}};Expr.filter.ID=3Dfunction(elem,match){v=
ar node=3Dtypeof =
elem.getAttributeNode!=3D=3D"undefined"&&elem.getAttributeNode("id");retu=
rn =
elem.nodeType=3D=3D=3D1&&node&&node.nodeValue=3D=3D=3Dmatch}}root.removeC=
hild(form)})();(function(){var =
div=3Ddocument.createElement("div");div.appendChild(document.createCommen=
t(""));if(div.getElementsByTagName("*").length>0){Expr.find.TAG=3Dfunctio=
n(match,context){var =
results=3Dcontext.getElementsByTagName(match[1]);if(match[1]=3D=3D=3D"*")=
{var tmp=3D[];for(var =
i=3D0;results[i];i++){if(results[i].nodeType=3D=3D=3D1){tmp.push(results[=
i])}}results=3Dtmp}return results}}div.innerHTML=3D"<a =
href=3D'#'></a>";if(div.firstChild&&typeof =
div.firstChild.getAttribute!=3D=3D"undefined"&&div.firstChild.getAttribut=
e("href")!=3D=3D"#"){Expr.attrHandle.href=3Dfunction(elem){return =
elem.getAttribute("href",2)}}})();if(document.querySelectorAll){(function=
(){var =
oldSizzle=3DSizzle,div=3Ddocument.createElement("div");div.innerHTML=3D"<=
p =
class=3D'TEST'></p>";if(div.querySelectorAll&&div.querySelectorAll(".TEST=
").length=3D=3D=3D0){return =
}Sizzle=3Dfunction(query,context,extra,seed){context=3Dcontext||document;=
if(!seed&&context.nodeType=3D=3D=3D9&&!isXML(context)){try{return =
makeArray(context.querySelectorAll(query),extra)}catch(e){}}return =
oldSizzle(query,context,extra,seed)};Sizzle.find=3DoldSizzle.find;Sizzle.=
filter=3DoldSizzle.filter;Sizzle.selectors=3DoldSizzle.selectors;Sizzle.m=
atches=3DoldSizzle.matches})()}if(document.getElementsByClassName&&docume=
nt.documentElement.getElementsByClassName){(function(){var =
div=3Ddocument.createElement("div");div.innerHTML=3D"<div class=3D'test =
e'></div><div =
class=3D'test'></div>";if(div.getElementsByClassName("e").length=3D=3D=3D=
0){return =
}div.lastChild.className=3D"e";if(div.getElementsByClassName("e").length=3D=
=3D=3D1){return =
}Expr.order.splice(1,0,"CLASS");Expr.find.CLASS=3Dfunction(match,context,=
isXML){if(typeof =
context.getElementsByClassName!=3D=3D"undefined"&&!isXML){return =
context.getElementsByClassName(match[1])}}})()}function =
dirNodeCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var =
sibDir=3Ddir=3D=3D"previousSibling"&&!isXML;for(var =
i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){if(sibDir&&elem.nodeType=3D=3D=3D1){elem.sizc=
ache=3DdoneName;elem.sizset=3Di}elem=3Delem[dir];var =
match=3Dfalse;while(elem){if(elem.sizcache=3D=3D=3DdoneName){match=3Dchec=
kSet[elem.sizset];break}if(elem.nodeType=3D=3D=3D1&&!isXML){elem.sizcache=
=3DdoneName;elem.sizset=3Di}if(elem.nodeName=3D=3D=3Dcur){match=3Delem;br=
eak}elem=3Delem[dir]}checkSet[i]=3Dmatch}}}function =
dirCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var =
sibDir=3Ddir=3D=3D"previousSibling"&&!isXML;for(var =
i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){if(sibDir&&elem.nodeType=3D=3D=3D1){elem.sizc=
ache=3DdoneName;elem.sizset=3Di}elem=3Delem[dir];var =
match=3Dfalse;while(elem){if(elem.sizcache=3D=3D=3DdoneName){match=3Dchec=
kSet[elem.sizset];break}if(elem.nodeType=3D=3D=3D1){if(!isXML){elem.sizca=
che=3DdoneName;elem.sizset=3Di}if(typeof =
cur!=3D=3D"string"){if(elem=3D=3D=3Dcur){match=3Dtrue;break}}else{if(Sizz=
le.filter(cur,[elem]).length>0){match=3Delem;break}}}elem=3Delem[dir]}che=
ckSet[i]=3Dmatch}}}var =
contains=3Ddocument.compareDocumentPosition?function(a,b){return =
a.compareDocumentPosition(b)&16}:function(a,b){return =
a!=3D=3Db&&(a.contains?a.contains(b):true)};var =
isXML=3Dfunction(elem){return =
elem.nodeType=3D=3D=3D9&&elem.documentElement.nodeName!=3D=3D"HTML"||!!el=
em.ownerDocument&&isXML(elem.ownerDocument)};var =
posProcess=3Dfunction(selector,context){var =
tmpSet=3D[],later=3D"",match,root=3Dcontext.nodeType?[context]:context;wh=
ile((match=3DExpr.match.PSEUDO.exec(selector))){later+=3Dmatch[0];selecto=
r=3Dselector.replace(Expr.match.PSEUDO,"")}selector=3DExpr.relative[selec=
tor]?selector+"*":selector;for(var =
i=3D0,l=3Droot.length;i<l;i++){Sizzle(selector,root[i],tmpSet)}return =
Sizzle.filter(later,tmpSet)};jQuery.find=3DSizzle;jQuery.filter=3DSizzle.=
filter;jQuery.expr=3DSizzle.selectors;jQuery.expr[":"]=3DjQuery.expr.filt=
ers;Sizzle.selectors.filters.hidden=3Dfunction(elem){return =
elem.offsetWidth=3D=3D=3D0||elem.offsetHeight=3D=3D=3D0};Sizzle.selectors=
.filters.visible=3Dfunction(elem){return =
elem.offsetWidth>0||elem.offsetHeight>0};Sizzle.selectors.filters.animate=
d=3Dfunction(elem){return jQuery.grep(jQuery.timers,function(fn){return =
elem=3D=3D=3Dfn.elem}).length};jQuery.multiFilter=3Dfunction(expr,elems,n=
ot){if(not){expr=3D":not("+expr+")"}return =
Sizzle.matches(expr,elems)};jQuery.dir=3Dfunction(elem,dir){var =
matched=3D[],cur=3Delem[dir];while(cur&&cur!=3Ddocument){if(cur.nodeType=3D=
=3D1){matched.push(cur)}cur=3Dcur[dir]}return =
matched};jQuery.nth=3Dfunction(cur,result,dir,elem){result=3Dresult||1;va=
r =
num=3D0;for(;cur;cur=3Dcur[dir]){if(cur.nodeType=3D=3D1&&++num=3D=3Dresul=
t){break}}return cur};jQuery.sibling=3Dfunction(n,elem){var =
r=3D[];for(;n;n=3Dn.nextSibling){if(n.nodeType=3D=3D1&&n!=3Delem){r.push(=
n)}}return r};return =
;window.Sizzle=3DSizzle})();jQuery.event=3D{add:function(elem,types,handl=
er,data){if(elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){return =
}if(elem.setInterval&&elem!=3Dwindow){elem=3Dwindow}if(!handler.guid){han=
dler.guid=3Dthis.guid++}if(data!=3D=3Dundefined){var =
fn=3Dhandler;handler=3Dthis.proxy(fn);handler.data=3Ddata}var =
events=3DjQuery.data(elem,"events")||jQuery.data(elem,"events",{}),handle=
=3DjQuery.data(elem,"handle")||jQuery.data(elem,"handle",function(){retur=
n typeof =
jQuery!=3D=3D"undefined"&&!jQuery.event.triggered?jQuery.event.handle.app=
ly(arguments.callee.elem,arguments):undefined});handle.elem=3Delem;jQuery=
.each(types.split(/\s+/),function(index,type){var =
namespaces=3Dtype.split(".");type=3Dnamespaces.shift();handler.type=3Dnam=
espaces.slice().sort().join(".");var =
handlers=3Devents[type];if(jQuery.event.specialAll[type]){jQuery.event.sp=
ecialAll[type].setup.call(elem,data,namespaces)}if(!handlers){handlers=3D=
events[type]=3D{};if(!jQuery.event.special[type]||jQuery.event.special[ty=
pe].setup.call(elem,data,namespaces)=3D=3D=3Dfalse){if(elem.addEventListe=
ner){elem.addEventListener(type,handle,false)}else{if(elem.attachEvent){e=
lem.attachEvent("on"+type,handle)}}}}handlers[handler.guid]=3Dhandler;jQu=
ery.event.global[type]=3Dtrue});elem=3Dnull},guid:1,global:{},remove:func=
tion(elem,types,handler){if(elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){r=
eturn }var =
events=3DjQuery.data(elem,"events"),ret,index;if(events){if(types=3D=3D=3D=
undefined||(typeof =
types=3D=3D=3D"string"&&types.charAt(0)=3D=3D".")){for(var type in =
events){this.remove(elem,type+(types||""))}}else{if(types.type){handler=3D=
types.handler;types=3Dtypes.type}jQuery.each(types.split(/\s+/),function(=
index,type){var =
namespaces=3Dtype.split(".");type=3Dnamespaces.shift();var =
namespace=3DRegExp("(^|\\.)"+namespaces.slice().sort().join(".*\\.")+"(\\=
.|$)");if(events[type]){if(handler){delete =
events[type][handler.guid]}else{for(var handle in =
events[type]){if(namespace.test(events[type][handle].type)){delete =
events[type][handle]}}}if(jQuery.event.specialAll[type]){jQuery.event.spe=
cialAll[type].teardown.call(elem,namespaces)}for(ret in =
events[type]){break}if(!ret){if(!jQuery.event.special[type]||jQuery.event=
.special[type].teardown.call(elem,namespaces)=3D=3D=3Dfalse){if(elem.remo=
veEventListener){elem.removeEventListener(type,jQuery.data(elem,"handle")=
,false)}else{if(elem.detachEvent){elem.detachEvent("on"+type,jQuery.data(=
elem,"handle"))}}}ret=3Dnull;delete events[type]}}})}for(ret in =
events){break}if(!ret){var =
handle=3DjQuery.data(elem,"handle");if(handle){handle.elem=3Dnull}jQuery.=
removeData(elem,"events");jQuery.removeData(elem,"handle")}}},trigger:fun=
ction(event,data,elem,bubbling){var =
type=3Devent.type||event;if(!bubbling){event=3Dtypeof =
event=3D=3D=3D"object"?event[expando]?event:jQuery.extend(jQuery.Event(ty=
pe),event):jQuery.Event(type);if(type.indexOf("!")>=3D0){event.type=3Dtyp=
e=3Dtype.slice(0,-1);event.exclusive=3Dtrue}if(!elem){event.stopPropagati=
on();if(this.global[type]){jQuery.each(jQuery.cache,function(){if(this.ev=
ents&&this.events[type]){jQuery.event.trigger(event,data,this.handle.elem=
)}})}}if(!elem||elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){return =
undefined}event.result=3Dundefined;event.target=3Delem;data=3DjQuery.make=
Array(data);data.unshift(event)}event.currentTarget=3Delem;var =
handle=3DjQuery.data(elem,"handle");if(handle){handle.apply(elem,data)}if=
((!elem[type]||(jQuery.nodeName(elem,"a")&&type=3D=3D"click"))&&elem["on"=
+type]&&elem["on"+type].apply(elem,data)=3D=3D=3Dfalse){event.result=3Dfa=
lse}if(!bubbling&&elem[type]&&!event.isDefaultPrevented()&&!(jQuery.nodeN=
ame(elem,"a")&&type=3D=3D"click")){this.triggered=3Dtrue;try{elem[type]()=
}catch(e){}}this.triggered=3Dfalse;if(!event.isPropagationStopped()){var =
parent=3Delem.parentNode||elem.ownerDocument;if(parent){jQuery.event.trig=
ger(event,data,parent,true)}}},handle:function(event){var =
all,handlers;event=3Darguments[0]=3DjQuery.event.fix(event||window.event)=
;event.currentTarget=3Dthis;var =
namespaces=3Devent.type.split(".");event.type=3Dnamespaces.shift();all=3D=
!namespaces.length&&!event.exclusive;var =
namespace=3DRegExp("(^|\\.)"+namespaces.slice().sort().join(".*\\.")+"(\\=
.|$)");handlers=3D(jQuery.data(this,"events")||{})[event.type];for(var j =
in handlers){var =
handler=3Dhandlers[j];if(all||namespace.test(handler.type)){event.handler=
=3Dhandler;event.data=3Dhandler.data;var =
ret=3Dhandler.apply(this,arguments);if(ret!=3D=3Dundefined){event.result=3D=
ret;if(ret=3D=3D=3Dfalse){event.preventDefault();event.stopPropagation()}=
}if(event.isImmediatePropagationStopped()){break}}}},props:"altKey =
attrChange attrName bubbles button cancelable charCode clientX clientY =
ctrlKey currentTarget data detail eventPhase fromElement handler keyCode =
metaKey newValue originalTarget pageX pageY prevValue relatedNode =
relatedTarget screenX screenY shiftKey srcElement target toElement view =
wheelDelta which".split(" =
"),fix:function(event){if(event[expando]){return event}var =
originalEvent=3Devent;event=3DjQuery.Event(originalEvent);for(var =
i=3Dthis.props.length,prop;i;){prop=3Dthis.props[--i];event[prop]=3Dorigi=
nalEvent[prop]}if(!event.target){event.target=3Devent.srcElement||documen=
t}if(event.target.nodeType=3D=3D3){event.target=3Devent.target.parentNode=
}if(!event.relatedTarget&&event.fromElement){event.relatedTarget=3Devent.=
fromElement=3D=3Devent.target?event.toElement:event.fromElement}if(event.=
pageX=3D=3Dnull&&event.clientX!=3Dnull){var =
doc=3Ddocument.documentElement,body=3Ddocument.body;event.pageX=3Devent.c=
lientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc.clientLeft||0=
);event.pageY=3Devent.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||=
0)-(doc.clientTop||0)}if(!event.which&&((event.charCode||event.charCode=3D=
=3D=3D0)?event.charCode:event.keyCode)){event.which=3Devent.charCode||eve=
nt.keyCode}if(!event.metaKey&&event.ctrlKey){event.metaKey=3Devent.ctrlKe=
y}if(!event.which&&event.button){event.which=3D(event.button&1?1:(event.b=
utton&2?3:(event.button&4?2:0)))}return =
event},proxy:function(fn,proxy){proxy=3Dproxy||function(){return =
fn.apply(this,arguments)};proxy.guid=3Dfn.guid=3Dfn.guid||proxy.guid||thi=
s.guid++;return =
proxy},special:{ready:{setup:bindReady,teardown:function(){}}},specialAll=
:{live:{setup:function(selector,namespaces){jQuery.event.add(this,namespa=
ces[0],liveHandler)},teardown:function(namespaces){if(namespaces.length){=
var =
remove=3D0,name=3DRegExp("(^|\\.)"+namespaces[0]+"(\\.|$)");jQuery.each((=
jQuery.data(this,"events").live||{}),function(){if(name.test(this.type)){=
remove++}});if(remove<1){jQuery.event.remove(this,namespaces[0],liveHandl=
er)}}}}}};jQuery.Event=3Dfunction(src){if(!this.preventDefault){return =
new =
jQuery.Event(src)}if(src&&src.type){this.originalEvent=3Dsrc;this.type=3D=
src.type}else{this.type=3Dsrc}this.timeStamp=3Dnow();this[expando]=3Dtrue=
};function returnFalse(){return false}function returnTrue(){return =
true}jQuery.Event.prototype=3D{preventDefault:function(){this.isDefaultPr=
evented=3DreturnTrue;var e=3Dthis.originalEvent;if(!e){return =
}if(e.preventDefault){e.preventDefault()}e.returnValue=3Dfalse},stopPropa=
gation:function(){this.isPropagationStopped=3DreturnTrue;var =
e=3Dthis.originalEvent;if(!e){return =
}if(e.stopPropagation){e.stopPropagation()}e.cancelBubble=3Dtrue},stopImm=
ediatePropagation:function(){this.isImmediatePropagationStopped=3DreturnT=
rue;this.stopPropagation()},isDefaultPrevented:returnFalse,isPropagationS=
topped:returnFalse,isImmediatePropagationStopped:returnFalse};var =
withinElement=3Dfunction(event){var =
parent=3Devent.relatedTarget;while(parent&&parent!=3Dthis){try{parent=3Dp=
arent.parentNode}catch(e){parent=3Dthis}}if(parent!=3Dthis){event.type=3D=
event.data;jQuery.event.handle.apply(this,arguments)}};jQuery.each({mouse=
over:"mouseenter",mouseout:"mouseleave"},function(orig,fix){jQuery.event.=
special[fix]=3D{setup:function(){jQuery.event.add(this,orig,withinElement=
,fix)},teardown:function(){jQuery.event.remove(this,orig,withinElement)}}=
});jQuery.fn.extend({bind:function(type,data,fn){return =
type=3D=3D"unload"?this.one(type,data,fn):this.each(function(){jQuery.eve=
nt.add(this,type,fn||data,fn&&data)})},one:function(type,data,fn){var =
one=3DjQuery.event.proxy(fn||data,function(event){jQuery(this).unbind(eve=
nt,one);return(fn||data).apply(this,arguments)});return =
this.each(function(){jQuery.event.add(this,type,one,fn&&data)})},unbind:f=
unction(type,fn){return =
this.each(function(){jQuery.event.remove(this,type,fn)})},trigger:functio=
n(type,data){return =
this.each(function(){jQuery.event.trigger(type,data,this)})},triggerHandl=
er:function(type,data){if(this[0]){var =
event=3DjQuery.Event(type);event.preventDefault();event.stopPropagation()=
;jQuery.event.trigger(event,data,this[0]);return =
event.result}},toggle:function(fn){var =
args=3Darguments,i=3D1;while(i<args.length){jQuery.event.proxy(fn,args[i+=
+])}return =
this.click(jQuery.event.proxy(fn,function(event){this.lastToggle=3D(this.=
lastToggle||0)%i;event.preventDefault();return =
args[this.lastToggle++].apply(this,arguments)||false}))},hover:function(f=
nOver,fnOut){return =
this.mouseenter(fnOver).mouseleave(fnOut)},ready:function(fn){bindReady()=
;if(jQuery.isReady){fn.call(document,jQuery)}else{jQuery.readyList.push(f=
n)}return this},live:function(type,fn){var =
proxy=3DjQuery.event.proxy(fn);proxy.guid+=3Dthis.selector+type;jQuery(do=
cument).bind(liveConvert(type,this.selector),this.selector,proxy);return =
this},die:function(type,fn){jQuery(document).unbind(liveConvert(type,this=
.selector),fn?{guid:fn.guid+this.selector+type}:null);return =
this}});function liveHandler(event){var =
check=3DRegExp("(^|\\.)"+event.type+"(\\.|$)"),stop=3Dtrue,elems=3D[];jQu=
ery.each(jQuery.data(this,"events").live||[],function(i,fn){if(check.test=
(fn.type)){var =
elem=3DjQuery(event.target).closest(fn.data)[0];if(elem){elems.push({elem=
:elem,fn:fn})}}});elems.sort(function(a,b){return =
jQuery.data(a.elem,"closest")-jQuery.data(b.elem,"closest")});jQuery.each=
(elems,function(){if(this.fn.call(this.elem,event,this.fn.data)=3D=3D=3Df=
alse){return(stop=3Dfalse)}});return stop}function =
liveConvert(type,selector){return["live",type,selector.replace(/\./g,"`")=
.replace(/ =
/g,"|")].join(".")}jQuery.extend({isReady:false,readyList:[],ready:functi=
on(){if(!jQuery.isReady){jQuery.isReady=3Dtrue;if(jQuery.readyList){jQuer=
y.each(jQuery.readyList,function(){this.call(document,jQuery)});jQuery.re=
adyList=3Dnull}jQuery(document).triggerHandler("ready")}}});var =
readyBound=3Dfalse;function bindReady(){if(readyBound){return =
}readyBound=3Dtrue;if(document.addEventListener){document.addEventListene=
r("DOMContentLoaded",function(){document.removeEventListener("DOMContentL=
oaded",arguments.callee,false);jQuery.ready()},false)}else{if(document.at=
tachEvent){document.attachEvent("onreadystatechange",function(){if(docume=
nt.readyState=3D=3D=3D"complete"){document.detachEvent("onreadystatechang=
e",arguments.callee);jQuery.ready()}});if(document.documentElement.doScro=
ll&&window=3D=3Dwindow.top){(function(){if(jQuery.isReady){return =
}try{document.documentElement.doScroll("left")}catch(error){setTimeout(ar=
guments.callee,0);return =
}jQuery.ready()})()}}}jQuery.event.add(window,"load",jQuery.ready)}jQuery=
.each(("blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mou=
seup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,sub=
mit,keydown,keypress,keyup,error").split(","),function(i,name){jQuery.fn[=
name]=3Dfunction(fn){return =
fn?this.bind(name,fn):this.trigger(name)}});jQuery(window).bind("unload",=
function(){for(var id in =
jQuery.cache){if(id!=3D1&&jQuery.cache[id].handle){jQuery.event.remove(jQ=
uery.cache[id].handle.elem)}}});(function(){jQuery.support=3D{};var =
root=3Ddocument.documentElement,script=3Ddocument.createElement("script")=
,div=3Ddocument.createElement("div"),id=3D"script"+(new =
Date).getTime();div.style.display=3D"none";div.innerHTML=3D'   =
<link/><table></table><a href=3D"/a" =
style=3D"color:red;float:left;opacity:.5;">a</a><select><option>text</opt=
ion></select><object><param/></object>';var =
all=3Ddiv.getElementsByTagName("*"),a=3Ddiv.getElementsByTagName("a")[0];=
if(!all||!all.length||!a){return =
}jQuery.support=3D{leadingWhitespace:div.firstChild.nodeType=3D=3D3,tbody=
:!div.getElementsByTagName("tbody").length,objectAll:!!div.getElementsByT=
agName("object")[0].getElementsByTagName("*").length,htmlSerialize:!!div.=
getElementsByTagName("link").length,style:/red/.test(a.getAttribute("styl=
e")),hrefNormalized:a.getAttribute("href")=3D=3D=3D"/a",opacity:a.style.o=
pacity=3D=3D=3D"0.5",cssFloat:!!a.style.cssFloat,scriptEval:false,noClone=
Event:true,boxModel:null};script.type=3D"text/javascript";try{script.appe=
ndChild(document.createTextNode("window."+id+"=3D1;"))}catch(e){}root.ins=
ertBefore(script,root.firstChild);if(window[id]){jQuery.support.scriptEva=
l=3Dtrue;delete =
window[id]}root.removeChild(script);if(div.attachEvent&&div.fireEvent){di=
v.attachEvent("onclick",function(){jQuery.support.noCloneEvent=3Dfalse;di=
v.detachEvent("onclick",arguments.callee)});div.cloneNode(true).fireEvent=
("onclick")}jQuery(function(){var =
div=3Ddocument.createElement("div");div.style.width=3Ddiv.style.paddingLe=
ft=3D"1px";document.body.appendChild(div);jQuery.boxModel=3DjQuery.suppor=
t.boxModel=3Ddiv.offsetWidth=3D=3D=3D2;document.body.removeChild(div).sty=
le.display=3D"none"})})();var =
styleFloat=3DjQuery.support.cssFloat?"cssFloat":"styleFloat";jQuery.props=
=3D{"for":"htmlFor","class":"className","float":styleFloat,cssFloat:style=
Float,styleFloat:styleFloat,readonly:"readOnly",maxlength:"maxLength",cel=
lspacing:"cellSpacing",rowspan:"rowSpan",tabindex:"tabIndex"};jQuery.fn.e=
xtend({_load:jQuery.fn.load,load:function(url,params,callback){if(typeof =
url!=3D=3D"string"){return this._load(url)}var off=3Durl.indexOf(" =
");if(off>=3D0){var =
selector=3Durl.slice(off,url.length);url=3Durl.slice(0,off)}var =
type=3D"GET";if(params){if(jQuery.isFunction(params)){callback=3Dparams;p=
arams=3Dnull}else{if(typeof =
params=3D=3D=3D"object"){params=3DjQuery.param(params);type=3D"POST"}}}va=
r =
self=3Dthis;jQuery.ajax({url:url,type:type,dataType:"html",data:params,co=
mplete:function(res,status){if(status=3D=3D"success"||status=3D=3D"notmod=
ified"){self.html(selector?jQuery("<div/>").append(res.responseText.repla=
ce(/<script(.|\s)*?\/script>/g,"")).find(selector):res.responseText)}if(c=
allback){self.each(callback,[res.responseText,status,res])}}});return =
this},serialize:function(){return =
jQuery.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?jQuery.makeArray(this.elements):this}).filter(function(){re=
turn =
this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.no=
deName)||/text|hidden|password|search/i.test(this.type))}).map(function(i=
,elem){var val=3DjQuery(this).val();return =
val=3D=3Dnull?null:jQuery.isArray(val)?jQuery.map(val,function(val,i){ret=
urn{name:elem.name,value:val}}):{name:elem.name,value:val}}).get()}});jQu=
ery.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend"=
.split(","),function(i,o){jQuery.fn[o]=3Dfunction(f){return =
this.bind(o,f)}});var =
jsc=3Dnow();jQuery.extend({get:function(url,data,callback,type){if(jQuery=
.isFunction(data)){callback=3Ddata;data=3Dnull}return =
jQuery.ajax({type:"GET",url:url,data:data,success:callback,dataType:type}=
)},getScript:function(url,callback){return =
jQuery.get(url,null,callback,"script")},getJSON:function(url,data,callbac=
k){return =
jQuery.get(url,data,callback,"json")},post:function(url,data,callback,typ=
e){if(jQuery.isFunction(data)){callback=3Ddata;data=3D{}}return =
jQuery.ajax({type:"POST",url:url,data:data,success:callback,dataType:type=
})},ajaxSetup:function(settings){jQuery.extend(jQuery.ajaxSettings,settin=
gs)},ajaxSettings:{url:location.href,global:true,type:"GET",contentType:"=
application/x-www-form-urlencoded",processData:true,async:true,xhr:functi=
on(){return window.ActiveXObject?new =
ActiveXObject("Microsoft.XMLHTTP"):new =
XMLHttpRequest()},accepts:{xml:"application/xml, =
text/xml",html:"text/html",script:"text/javascript, =
application/javascript",json:"application/json, =
text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:=
function(s){s=3DjQuery.extend(true,s,jQuery.extend(true,{},jQuery.ajaxSet=
tings,s));var =
jsonp,jsre=3D/=3D\?(&|$)/g,status,data,type=3Ds.type.toUpperCase();if(s.d=
ata&&s.processData&&typeof =
s.data!=3D=3D"string"){s.data=3DjQuery.param(s.data)}if(s.dataType=3D=3D"=
jsonp"){if(type=3D=3D"GET"){if(!s.url.match(jsre)){s.url+=3D(s.url.match(=
/\?/)?"&":"?")+(s.jsonp||"callback")+"=3D?"}}else{if(!s.data||!s.data.mat=
ch(jsre)){s.data=3D(s.data?s.data+"&":"")+(s.jsonp||"callback")+"=3D?"}}s=
.dataType=3D"json"}if(s.dataType=3D=3D"json"&&(s.data&&s.data.match(jsre)=
||s.url.match(jsre))){jsonp=3D"jsonp"+jsc++;if(s.data){s.data=3D(s.data+"=
").replace(jsre,"=3D"+jsonp+"$1")}s.url=3Ds.url.replace(jsre,"=3D"+jsonp+=
"$1");s.dataType=3D"script";window[jsonp]=3Dfunction(tmp){data=3Dtmp;succ=
ess();complete();window[jsonp]=3Dundefined;try{delete =
window[jsonp]}catch(e){}if(head){head.removeChild(script)}}}if(s.dataType=
=3D=3D"script"&&s.cache=3D=3Dnull){s.cache=3Dfalse}if(s.cache=3D=3D=3Dfal=
se&&type=3D=3D"GET"){var ts=3Dnow();var =
ret=3Ds.url.replace(/(\?|&)_=3D.*?(&|$)/,"$1_=3D"+ts+"$2");s.url=3Dret+((=
ret=3D=3Ds.url)?(s.url.match(/\?/)?"&":"?")+"_=3D"+ts:"")}if(s.data&&type=
=3D=3D"GET"){s.url+=3D(s.url.match(/\?/)?"&":"?")+s.data;s.data=3Dnull}if=
(s.global&&!jQuery.active++){jQuery.event.trigger("ajaxStart")}var =
parts=3D/^(\w+:)?\/\/([^\/?#]+)/.exec(s.url);if(s.dataType=3D=3D"script"&=
&type=3D=3D"GET"&&parts&&(parts[1]&&parts[1]!=3Dlocation.protocol||parts[=
2]!=3Dlocation.host)){var =
head=3Ddocument.getElementsByTagName("head")[0];var =
script=3Ddocument.createElement("script");script.src=3Ds.url;if(s.scriptC=
harset){script.charset=3Ds.scriptCharset}if(!jsonp){var =
done=3Dfalse;script.onload=3Dscript.onreadystatechange=3Dfunction(){if(!d=
one&&(!this.readyState||this.readyState=3D=3D"loaded"||this.readyState=3D=
=3D"complete")){done=3Dtrue;success();complete();script.onload=3Dscript.o=
nreadystatechange=3Dnull;head.removeChild(script)}}}head.appendChild(scri=
pt);return undefined}var requestDone=3Dfalse;var =
xhr=3Ds.xhr();if(s.username){xhr.open(type,s.url,s.async,s.username,s.pas=
sword)}else{xhr.open(type,s.url,s.async)}try{if(s.data){xhr.setRequestHea=
der("Content-Type",s.contentType)}if(s.ifModified){xhr.setRequestHeader("=
If-Modified-Since",jQuery.lastModified[s.url]||"Thu, 01 Jan 1970 =
00:00:00 =
GMT")}xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.setRe=
questHeader("Accept",s.dataType&&s.accepts[s.dataType]?s.accepts[s.dataTy=
pe]+", =
*/*":s.accepts._default)}catch(e){}if(s.beforeSend&&s.beforeSend(xhr,s)=3D=
=3D=3Dfalse){if(s.global&&!--jQuery.active){jQuery.event.trigger("ajaxSto=
p")}xhr.abort();return =
false}if(s.global){jQuery.event.trigger("ajaxSend",[xhr,s])}var =
onreadystatechange=3Dfunction(isTimeout){if(xhr.readyState=3D=3D0){if(iva=
l){clearInterval(ival);ival=3Dnull;if(s.global&&!--jQuery.active){jQuery.=
event.trigger("ajaxStop")}}}else{if(!requestDone&&xhr&&(xhr.readyState=3D=
=3D4||isTimeout=3D=3D"timeout")){requestDone=3Dtrue;if(ival){clearInterva=
l(ival);ival=3Dnull}status=3DisTimeout=3D=3D"timeout"?"timeout":!jQuery.h=
ttpSuccess(xhr)?"error":s.ifModified&&jQuery.httpNotModified(xhr,s.url)?"=
notmodified":"success";if(status=3D=3D"success"){try{data=3DjQuery.httpDa=
ta(xhr,s.dataType,s)}catch(e){status=3D"parsererror"}}if(status=3D=3D"suc=
cess"){var =
modRes;try{modRes=3Dxhr.getResponseHeader("Last-Modified")}catch(e){}if(s=
.ifModified&&modRes){jQuery.lastModified[s.url]=3DmodRes}if(!jsonp){succe=
ss()}}else{jQuery.handleError(s,xhr,status)}complete();if(isTimeout){xhr.=
abort()}if(s.async){xhr=3Dnull}}}};if(s.async){var =
ival=3DsetInterval(onreadystatechange,13);if(s.timeout>0){setTimeout(func=
tion(){if(xhr&&!requestDone){onreadystatechange("timeout")}},s.timeout)}}=
try{xhr.send(s.data)}catch(e){jQuery.handleError(s,xhr,null,e)}if(!s.asyn=
c){onreadystatechange()}function =
success(){if(s.success){s.success(data,status)}if(s.global){jQuery.event.=
trigger("ajaxSuccess",[xhr,s])}}function =
complete(){if(s.complete){s.complete(xhr,status)}if(s.global){jQuery.even=
t.trigger("ajaxComplete",[xhr,s])}if(s.global&&!--jQuery.active){jQuery.e=
vent.trigger("ajaxStop")}}return =
xhr},handleError:function(s,xhr,status,e){if(s.error){s.error(xhr,status,=
e)}if(s.global){jQuery.event.trigger("ajaxError",[xhr,s,e])}},active:0,ht=
tpSuccess:function(xhr){try{return =
!xhr.status&&location.protocol=3D=3D"file:"||(xhr.status>=3D200&&xhr.stat=
us<300)||xhr.status=3D=3D304||xhr.status=3D=3D1223}catch(e){}return =
false},httpNotModified:function(xhr,url){try{var =
xhrRes=3Dxhr.getResponseHeader("Last-Modified");return =
xhr.status=3D=3D304||xhrRes=3D=3DjQuery.lastModified[url]}catch(e){}retur=
n false},httpData:function(xhr,type,s){var =
ct=3Dxhr.getResponseHeader("content-type"),xml=3Dtype=3D=3D"xml"||!type&&=
ct&&ct.indexOf("xml")>=3D0,data=3Dxml?xhr.responseXML:xhr.responseText;if=
(xml&&data.documentElement.tagName=3D=3D"parsererror"){throw"parsererror"=
}if(s&&s.dataFilter){data=3Ds.dataFilter(data,type)}if(typeof =
data=3D=3D=3D"string"){if(type=3D=3D"script"){jQuery.globalEval(data)}if(=
type=3D=3D"json"){data=3Dwindow["eval"]("("+data+")")}}return =
data},param:function(a){var s=3D[];function =
add(key,value){s[s.length]=3DencodeURIComponent(key)+"=3D"+encodeURICompo=
nent(value)}if(jQuery.isArray(a)||a.jquery){jQuery.each(a,function(){add(=
this.name,this.value)})}else{for(var j in =
a){if(jQuery.isArray(a[j])){jQuery.each(a[j],function(){add(j,this)})}els=
e{add(j,jQuery.isFunction(a[j])?a[j]():a[j])}}}return =
s.join("&").replace(/%20/g,"+")}});var =
elemdisplay=3D{},timerId,fxAttrs=3D[["height","marginTop","marginBottom",=
"paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddin=
gLeft","paddingRight"],["opacity"]];function genFx(type,num){var =
obj=3D{};jQuery.each(fxAttrs.concat.apply([],fxAttrs.slice(0,num)),functi=
on(){obj[this]=3Dtype});return =
obj}jQuery.fn.extend({show:function(speed,callback){if(speed){return =
this.animate(genFx("show",3),speed,callback)}else{for(var =
i=3D0,l=3Dthis.length;i<l;i++){var =
old=3DjQuery.data(this[i],"olddisplay");this[i].style.display=3Dold||"";i=
f(jQuery.css(this[i],"display")=3D=3D=3D"none"){var =
tagName=3Dthis[i].tagName,display;if(elemdisplay[tagName]){display=3Delem=
display[tagName]}else{var elem=3DjQuery("<"+tagName+" =
/>").appendTo("body");display=3Delem.css("display");if(display=3D=3D=3D"n=
one"){display=3D"block"}elem.remove();elemdisplay[tagName]=3Ddisplay}jQue=
ry.data(this[i],"olddisplay",display)}}for(var =
i=3D0,l=3Dthis.length;i<l;i++){this[i].style.display=3DjQuery.data(this[i=
],"olddisplay")||""}return =
this}},hide:function(speed,callback){if(speed){return =
this.animate(genFx("hide",3),speed,callback)}else{for(var =
i=3D0,l=3Dthis.length;i<l;i++){var =
old=3DjQuery.data(this[i],"olddisplay");if(!old&&old!=3D=3D"none"){jQuery=
.data(this[i],"olddisplay",jQuery.css(this[i],"display"))}}for(var =
i=3D0,l=3Dthis.length;i<l;i++){this[i].style.display=3D"none"}return =
this}},_toggle:jQuery.fn.toggle,toggle:function(fn,fn2){var =
bool=3Dtypeof fn=3D=3D=3D"boolean";return =
jQuery.isFunction(fn)&&jQuery.isFunction(fn2)?this._toggle.apply(this,arg=
uments):fn=3D=3Dnull||bool?this.each(function(){var =
state=3Dbool?fn:jQuery(this).is(":hidden");jQuery(this)[state?"show":"hid=
e"]()}):this.animate(genFx("toggle",3),fn,fn2)},fadeTo:function(speed,to,=
callback){return =
this.animate({opacity:to},speed,callback)},animate:function(prop,speed,ea=
sing,callback){var optall=3DjQuery.speed(speed,easing,callback);return =
this[optall.queue=3D=3D=3Dfalse?"each":"queue"](function(){var =
opt=3DjQuery.extend({},optall),p,hidden=3Dthis.nodeType=3D=3D1&&jQuery(th=
is).is(":hidden"),self=3Dthis;for(p in =
prop){if(prop[p]=3D=3D"hide"&&hidden||prop[p]=3D=3D"show"&&!hidden){retur=
n =
opt.complete.call(this)}if((p=3D=3D"height"||p=3D=3D"width")&&this.style)=
{opt.display=3DjQuery.css(this,"display");opt.overflow=3Dthis.style.overf=
low}}if(opt.overflow!=3Dnull){this.style.overflow=3D"hidden"}opt.curAnim=3D=
jQuery.extend({},prop);jQuery.each(prop,function(name,val){var e=3Dnew =
jQuery.fx(self,opt,name);if(/toggle|show|hide/.test(val)){e[val=3D=3D"tog=
gle"?hidden?"show":"hide":val](prop)}else{var =
parts=3Dval.toString().match(/^([+-]=3D)?([\d+-.]+)(.*)$/),start=3De.cur(=
true)||0;if(parts){var =
end=3DparseFloat(parts[2]),unit=3Dparts[3]||"px";if(unit!=3D"px"){self.st=
yle[name]=3D(end||1)+unit;start=3D((end||1)/e.cur(true))*start;self.style=
[name]=3Dstart+unit}if(parts[1]){end=3D((parts[1]=3D=3D"-=3D"?-1:1)*end)+=
start}e.custom(start,end,unit)}else{e.custom(start,val,"")}}});return =
true})},stop:function(clearQueue,gotoEnd){var =
timers=3DjQuery.timers;if(clearQueue){this.queue([])}this.each(function()=
{for(var =
i=3Dtimers.length-1;i>=3D0;i--){if(timers[i].elem=3D=3Dthis){if(gotoEnd){=
timers[i](true)}timers.splice(i,1)}}});if(!gotoEnd){this.dequeue()}return=
 =
this}});jQuery.each({slideDown:genFx("show",1),slideUp:genFx("hide",1),sl=
ideToggle:genFx("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hid=
e"}},function(name,props){jQuery.fn[name]=3Dfunction(speed,callback){retu=
rn =
this.animate(props,speed,callback)}});jQuery.extend({speed:function(speed=
,easing,fn){var opt=3Dtypeof =
speed=3D=3D=3D"object"?speed:{complete:fn||!fn&&easing||jQuery.isFunction=
(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!jQuery.isFuncti=
on(easing)&&easing};opt.duration=3DjQuery.fx.off?0:typeof =
opt.duration=3D=3D=3D"number"?opt.duration:jQuery.fx.speeds[opt.duration]=
||jQuery.fx.speeds._default;opt.old=3Dopt.complete;opt.complete=3Dfunctio=
n(){if(opt.queue!=3D=3Dfalse){jQuery(this).dequeue()}if(jQuery.isFunction=
(opt.old)){opt.old.call(this)}};return =
opt},easing:{linear:function(p,n,firstNum,diff){return =
firstNum+diff*p},swing:function(p,n,firstNum,diff){return((-Math.cos(p*Ma=
th.PI)/2)+0.5)*diff+firstNum}},timers:[],fx:function(elem,options,prop){t=
his.options=3Doptions;this.elem=3Delem;this.prop=3Dprop;if(!options.orig)=
{options.orig=3D{}}}});jQuery.fx.prototype=3D{update:function(){if(this.o=
ptions.step){this.options.step.call(this.elem,this.now,this)}(jQuery.fx.s=
tep[this.prop]||jQuery.fx.step._default)(this);if((this.prop=3D=3D"height=
"||this.prop=3D=3D"width")&&this.elem.style){this.elem.style.display=3D"b=
lock"}},cur:function(force){if(this.elem[this.prop]!=3Dnull&&(!this.elem.=
style||this.elem.style[this.prop]=3D=3Dnull)){return =
this.elem[this.prop]}var =
r=3DparseFloat(jQuery.css(this.elem,this.prop,force));return =
r&&r>-10000?r:parseFloat(jQuery.curCSS(this.elem,this.prop))||0},custom:f=
unction(from,to,unit){this.startTime=3Dnow();this.start=3Dfrom;this.end=3D=
to;this.unit=3Dunit||this.unit||"px";this.now=3Dthis.start;this.pos=3Dthi=
s.state=3D0;var self=3Dthis;function t(gotoEnd){return =
self.step(gotoEnd)}t.elem=3Dthis.elem;if(t()&&jQuery.timers.push(t)&&!tim=
erId){timerId=3DsetInterval(function(){var =
timers=3DjQuery.timers;for(var =
i=3D0;i<timers.length;i++){if(!timers[i]()){timers.splice(i--,1)}}if(!tim=
ers.length){clearInterval(timerId);timerId=3Dundefined}},13)}},show:funct=
ion(){this.options.orig[this.prop]=3DjQuery.attr(this.elem.style,this.pro=
p);this.options.show=3Dtrue;this.custom(this.prop=3D=3D"width"||this.prop=
=3D=3D"height"?1:0,this.cur());jQuery(this.elem).show()},hide:function(){=
this.options.orig[this.prop]=3DjQuery.attr(this.elem.style,this.prop);thi=
s.options.hide=3Dtrue;this.custom(this.cur(),0)},step:function(gotoEnd){v=
ar =
t=3Dnow();if(gotoEnd||t>=3Dthis.options.duration+this.startTime){this.now=
=3Dthis.end;this.pos=3Dthis.state=3D1;this.update();this.options.curAnim[=
this.prop]=3Dtrue;var done=3Dtrue;for(var i in =
this.options.curAnim){if(this.options.curAnim[i]!=3D=3Dtrue){done=3Dfalse=
}}if(done){if(this.options.display!=3Dnull){this.elem.style.overflow=3Dth=
is.options.overflow;this.elem.style.display=3Dthis.options.display;if(jQu=
ery.css(this.elem,"display")=3D=3D"none"){this.elem.style.display=3D"bloc=
k"}}if(this.options.hide){jQuery(this.elem).hide()}if(this.options.hide||=
this.options.show){for(var p in =
this.options.curAnim){jQuery.attr(this.elem.style,p,this.options.orig[p])=
}}this.options.complete.call(this.elem)}return false}else{var =
n=3Dt-this.startTime;this.state=3Dn/this.options.duration;this.pos=3DjQue=
ry.easing[this.options.easing||(jQuery.easing.swing?"swing":"linear")](th=
is.state,n,0,1,this.options.duration);this.now=3Dthis.start+((this.end-th=
is.start)*this.pos);this.update()}return =
true}};jQuery.extend(jQuery.fx,{speeds:{slow:600,fast:200,_default:400},s=
tep:{opacity:function(fx){jQuery.attr(fx.elem.style,"opacity",fx.now)},_d=
efault:function(fx){if(fx.elem.style&&fx.elem.style[fx.prop]!=3Dnull){fx.=
elem.style[fx.prop]=3Dfx.now+fx.unit}else{fx.elem[fx.prop]=3Dfx.now}}}});=
if(document.documentElement.getBoundingClientRect){jQuery.fn.offset=3Dfun=
ction(){if(!this[0]){return{top:0,left:0}}if(this[0]=3D=3D=3Dthis[0].owne=
rDocument.body){return jQuery.offset.bodyOffset(this[0])}var =
box=3Dthis[0].getBoundingClientRect(),doc=3Dthis[0].ownerDocument,body=3D=
doc.body,docElem=3Ddoc.documentElement,clientTop=3DdocElem.clientTop||bod=
y.clientTop||0,clientLeft=3DdocElem.clientLeft||body.clientLeft||0,top=3D=
box.top+(self.pageYOffset||jQuery.boxModel&&docElem.scrollTop||body.scrol=
lTop)-clientTop,left=3Dbox.left+(self.pageXOffset||jQuery.boxModel&&docEl=
em.scrollLeft||body.scrollLeft)-clientLeft;return{top:top,left:left}}}els=
e{jQuery.fn.offset=3Dfunction(){if(!this[0]){return{top:0,left:0}}if(this=
[0]=3D=3D=3Dthis[0].ownerDocument.body){return =
jQuery.offset.bodyOffset(this[0])}jQuery.offset.initialized||jQuery.offse=
t.initialize();var =
elem=3Dthis[0],offsetParent=3Delem.offsetParent,prevOffsetParent=3Delem,d=
oc=3Delem.ownerDocument,computedStyle,docElem=3Ddoc.documentElement,body=3D=
doc.body,defaultView=3Ddoc.defaultView,prevComputedStyle=3DdefaultView.ge=
tComputedStyle(elem,null),top=3Delem.offsetTop,left=3Delem.offsetLeft;whi=
le((elem=3Delem.parentNode)&&elem!=3D=3Dbody&&elem!=3D=3DdocElem){compute=
dStyle=3DdefaultView.getComputedStyle(elem,null);top-=3Delem.scrollTop,le=
ft-=3Delem.scrollLeft;if(elem=3D=3D=3DoffsetParent){top+=3Delem.offsetTop=
,left+=3Delem.offsetLeft;if(jQuery.offset.doesNotAddBorder&&!(jQuery.offs=
et.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(elem.tagName))){t=
op+=3DparseInt(computedStyle.borderTopWidth,10)||0,left+=3DparseInt(compu=
tedStyle.borderLeftWidth,10)||0}prevOffsetParent=3DoffsetParent,offsetPar=
ent=3Delem.offsetParent}if(jQuery.offset.subtractsBorderForOverflowNotVis=
ible&&computedStyle.overflow!=3D=3D"visible"){top+=3DparseInt(computedSty=
le.borderTopWidth,10)||0,left+=3DparseInt(computedStyle.borderLeftWidth,1=
0)||0}prevComputedStyle=3DcomputedStyle}if(prevComputedStyle.position=3D=3D=
=3D"relative"||prevComputedStyle.position=3D=3D=3D"static"){top+=3Dbody.o=
ffsetTop,left+=3Dbody.offsetLeft}if(prevComputedStyle.position=3D=3D=3D"f=
ixed"){top+=3DMath.max(docElem.scrollTop,body.scrollTop),left+=3DMath.max=
(docElem.scrollLeft,body.scrollLeft)}return{top:top,left:left}}}jQuery.of=
fset=3D{initialize:function(){if(this.initialized){return }var =
body=3Ddocument.body,container=3Ddocument.createElement("div"),innerDiv,c=
heckDiv,table,td,rules,prop,bodyMarginTop=3Dbody.style.marginTop,html=3D'=
<div style=3D"position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;"><div></div></div><table =
style=3D"position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;" cellpadding=3D"0" =
cellspacing=3D"0"><tr><td></td></tr></table>';rules=3D{position:"absolute=
",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hid=
den"};for(prop in =
rules){container.style[prop]=3Drules[prop]}container.innerHTML=3Dhtml;bod=
y.insertBefore(container,body.firstChild);innerDiv=3Dcontainer.firstChild=
,checkDiv=3DinnerDiv.firstChild,td=3DinnerDiv.nextSibling.firstChild.firs=
tChild;this.doesNotAddBorder=3D(checkDiv.offsetTop!=3D=3D5);this.doesAddB=
orderForTableAndCells=3D(td.offsetTop=3D=3D=3D5);innerDiv.style.overflow=3D=
"hidden",innerDiv.style.position=3D"relative";this.subtractsBorderForOver=
flowNotVisible=3D(checkDiv.offsetTop=3D=3D=3D-5);body.style.marginTop=3D"=
1px";this.doesNotIncludeMarginInBodyOffset=3D(body.offsetTop=3D=3D=3D0);b=
ody.style.marginTop=3DbodyMarginTop;body.removeChild(container);this.init=
ialized=3Dtrue},bodyOffset:function(body){jQuery.offset.initialized||jQue=
ry.offset.initialize();var =
top=3Dbody.offsetTop,left=3Dbody.offsetLeft;if(jQuery.offset.doesNotInclu=
deMarginInBodyOffset){top+=3DparseInt(jQuery.curCSS(body,"marginTop",true=
),10)||0,left+=3DparseInt(jQuery.curCSS(body,"marginLeft",true),10)||0}re=
turn{top:top,left:left}}};jQuery.fn.extend({position:function(){var =
left=3D0,top=3D0,results;if(this[0]){var =
offsetParent=3Dthis.offsetParent(),offset=3Dthis.offset(),parentOffset=3D=
/^body|html$/i.test(offsetParent[0].tagName)?{top:0,left:0}:offsetParent.=
offset();offset.top-=3Dnum(this,"marginTop");offset.left-=3Dnum(this,"mar=
ginLeft");parentOffset.top+=3Dnum(offsetParent,"borderTopWidth");parentOf=
fset.left+=3Dnum(offsetParent,"borderLeftWidth");results=3D{top:offset.to=
p-parentOffset.top,left:offset.left-parentOffset.left}}return =
results},offsetParent:function(){var =
offsetParent=3Dthis[0].offsetParent||document.body;while(offsetParent&&(!=
/^body|html$/i.test(offsetParent.tagName)&&jQuery.css(offsetParent,"posit=
ion")=3D=3D"static")){offsetParent=3DoffsetParent.offsetParent}return =
jQuery(offsetParent)}});jQuery.each(["Left","Top"],function(i,name){var =
method=3D"scroll"+name;jQuery.fn[method]=3Dfunction(val){if(!this[0]){ret=
urn null}return =
val!=3D=3Dundefined?this.each(function(){this=3D=3Dwindow||this=3D=3Ddocu=
ment?window.scrollTo(!i?val:jQuery(window).scrollLeft(),i?val:jQuery(wind=
ow).scrollTop()):this[method]=3Dval}):this[0]=3D=3Dwindow||this[0]=3D=3Dd=
ocument?self[i?"pageYOffset":"pageXOffset"]||jQuery.boxModel&&document.do=
cumentElement[method]||document.body[method]:this[0][method]}});jQuery.ea=
ch(["Height","Width"],function(i,name){var =
tl=3Di?"Left":"Top",br=3Di?"Right":"Bottom",lower=3Dname.toLowerCase();jQ=
uery.fn["inner"+name]=3Dfunction(){return =
this[0]?jQuery.css(this[0],lower,false,"padding"):null};jQuery.fn["outer"=
+name]=3Dfunction(margin){return =
this[0]?jQuery.css(this[0],lower,false,margin?"margin":"border"):null};va=
r type=3Dname.toLowerCase();jQuery.fn[type]=3Dfunction(size){return =
this[0]=3D=3Dwindow?document.compatMode=3D=3D"CSS1Compat"&&document.docum=
entElement["client"+name]||document.body["client"+name]:this[0]=3D=3Ddocu=
ment?Math.max(document.documentElement["client"+name],document.body["scro=
ll"+name],document.documentElement["scroll"+name],document.body["offset"+=
name],document.documentElement["offset"+name]):size=3D=3D=3Dundefined?(th=
is.length?jQuery.css(this[0],type):null):this.css(type,typeof =
size=3D=3D=3D"string"?size:size+"px")}})})();
------=_NextPart_000_0000_01CFB21A.1B1C3140--
