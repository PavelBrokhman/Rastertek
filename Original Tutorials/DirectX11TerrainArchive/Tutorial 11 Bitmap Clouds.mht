From: "Saved by Internet Explorer 11"
Subject: Tutorial 11: Bitmap Clouds
Date: Thu, 7 Aug 2014 08:32:42 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0021_01CFB21A.280D2E40"
X-MimeOLE: Produced By Microsoft MimeOLE V6.3.9600.16384

This is a multi-part message in MIME format.

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/web/20140722210351/http://rastertek.com/tertut11.html

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><META content=3D"IE=3D5.0000" =
http-equiv=3D"X-UA-Compatible">

<SCRIPT src=3D"http://web.archive.org/static/js/analytics.js" =
type=3D"text/javascript"></SCRIPT>
=20
<META http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3Dutf-8"><LINK =
href=3D"http://web.archive.org/static/css/banner-styles.css"=20
rel=3D"stylesheet" type=3D"text/css"> <TITLE>Tutorial 11: Bitmap =
Clouds</TITLE>
<META name=3D"GENERATOR" content=3D"MSHTML 11.00.9600.17207"></HEAD>=20
<BODY text=3D"#ffffff" bgcolor=3D"#000000"><!-- BEGIN WAYBACK TOOLBAR =
INSERT -->=20
<SCRIPT> if (window.archive_analytics) { =
window.archive_analytics.values['server_name']=3D"wwwb-app13.us.archive.o=
rg";}; </SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/js/disclaim-element.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/js/graph-calc.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/jflot/jquery.min.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT type=3D"text/javascript">=0A=
//<![CDATA[=0A=
var firstDate =3D 820454400000;=0A=
var lastDate =3D 1420070399999;=0A=
var wbPrefix =3D "/web/";=0A=
var wbCurrentUrl =3D "http:\/\/rastertek.com\/tertut11.html";=0A=
=0A=
var curYear =3D -1;=0A=
var curMonth =3D -1;=0A=
var yearCount =3D 18;=0A=
var firstYear =3D 1996;=0A=
var imgWidth =3D 475;=0A=
var yearImgWidth =3D 25;=0A=
var monthImgWidth =3D 2;=0A=
var trackerVal =3D "none";=0A=
var displayDay =3D "22";=0A=
var displayMonth =3D "Jul";=0A=
var displayYear =3D "2014";=0A=
var prettyMonths =3D =
["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]=
;=0A=
=0A=
function showTrackers(val) {=0A=
	if(val =3D=3D trackerVal) {=0A=
		return;=0A=
	}=0A=
	if(val =3D=3D "inline") {=0A=
		document.getElementById("displayYearEl").style.color =3D "#ec008c";=0A=
		document.getElementById("displayMonthEl").style.color =3D "#ec008c";=0A=
		document.getElementById("displayDayEl").style.color =3D "#ec008c";		=0A=
	} else {=0A=
		document.getElementById("displayYearEl").innerHTML =3D displayYear;=0A=
		document.getElementById("displayYearEl").style.color =3D "#ff0";=0A=
		document.getElementById("displayMonthEl").innerHTML =3D displayMonth;=0A=
		document.getElementById("displayMonthEl").style.color =3D "#ff0";=0A=
		document.getElementById("displayDayEl").innerHTML =3D displayDay;=0A=
		document.getElementById("displayDayEl").style.color =3D "#ff0";=0A=
	}=0A=
   document.getElementById("wbMouseTrackYearImg").style.display =3D val;=0A=
   document.getElementById("wbMouseTrackMonthImg").style.display =3D val;=0A=
   trackerVal =3D val;=0A=
}=0A=
function getElementX2(obj) {=0A=
	var thing =3D jQuery(obj);=0A=
	if((thing =3D=3D undefined) =0A=
			|| (typeof thing =3D=3D "undefined") =0A=
			|| (typeof thing.offset =3D=3D "undefined")) {=0A=
		return getElementX(obj);=0A=
	}=0A=
	return Math.round(thing.offset().left);=0A=
}=0A=
function trackMouseMove(event,element) {=0A=
=0A=
   var eventX =3D getEventX(event);=0A=
   var elementX =3D getElementX2(element);=0A=
   var xOff =3D eventX - elementX;=0A=
	if(xOff < 0) {=0A=
		xOff =3D 0;=0A=
	} else if(xOff > imgWidth) {=0A=
		xOff =3D imgWidth;=0A=
	}=0A=
   var monthOff =3D xOff % yearImgWidth;=0A=
=0A=
   var year =3D Math.floor(xOff / yearImgWidth);=0A=
	var yearStart =3D year * yearImgWidth;=0A=
   var monthOfYear =3D Math.floor(monthOff / monthImgWidth);=0A=
   if(monthOfYear > 11) {=0A=
       monthOfYear =3D 11;=0A=
   }=0A=
   // 1 extra border pixel at the left edge of the year:=0A=
   var month =3D (year * 12) + monthOfYear;=0A=
   var day =3D 1;=0A=
	if(monthOff % 2 =3D=3D 1) {=0A=
		day =3D 15;=0A=
	}=0A=
	var dateString =3D =0A=
		zeroPad(year + firstYear) + =0A=
		zeroPad(monthOfYear+1,2) +=0A=
		zeroPad(day,2) + "000000";=0A=
=0A=
	var monthString =3D prettyMonths[monthOfYear];=0A=
	document.getElementById("displayYearEl").innerHTML =3D year + 1996;=0A=
	document.getElementById("displayMonthEl").innerHTML =3D monthString;=0A=
	// looks too jarring when it changes..=0A=
	//document.getElementById("displayDayEl").innerHTML =3D zeroPad(day,2);=0A=
=0A=
	var url =3D wbPrefix + dateString + '/' +  wbCurrentUrl;=0A=
	document.getElementById('wm-graph-anchor').href =3D url;=0A=
=0A=
   //document.getElementById("wmtbURL").value=3D"evX("+eventX+") =
elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") =
monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") =
ms("+monthString+")";=0A=
   if(curYear !=3D year) {=0A=
       var yrOff =3D year * yearImgWidth;=0A=
       document.getElementById("wbMouseTrackYearImg").style.left =3D =
yrOff + "px";=0A=
       curYear =3D year;=0A=
   }=0A=
   if(curMonth !=3D month) {=0A=
       var mtOff =3D year + (month * monthImgWidth) + 1;=0A=
       document.getElementById("wbMouseTrackMonthImg").style.left =3D =
mtOff + "px";=0A=
       curMonth =3D month;=0A=
   }=0A=
}=0A=
//]]>=0A=
</SCRIPT>
=20
<STYLE =
type=3D"text/css">body{margin-top:0!important;padding-top:0!important;min=
-width:800px!important;}#wm-ipp =
a:hover{text-decoration:underline!important;}</STYLE>
=20
<DIV class=3D"__wb_banner_div" id=3D"wm-ipp" lang=3D"en" =
style=3D"padding: 0px 5px; display: none; position: relative; =
min-height: 70px; min-width: 800px;">
<DIV class=3D"__wb_banner_div" id=3D"wm-ipp-inside" =
style=3D'border-width: medium 5px 5px; border-style: none solid solid; =
border-color: currentColor rgb(0, 0, 0) rgb(0, 0, 0); margin: 0px =
!important; padding: 0px !important; border-image: none; width: 97%; =
text-align: center; font-family: "Lucida Grande","Arial",sans-serif =
!important; font-size: 11px !important; position: fixed; min-width: =
780px; box-shadow: 1px 1px 3px #333; background-image: =
url("/static/images/toolbar/wm_tb_bk_trns.png"); -moz-box-shadow: 1px =
1px 3px #333; -webkit-box-shadow: 1px 1px 3px #333;'>
<TABLE style=3D"margin: 0px; padding: 0px; width: 100%; border-collapse: =
collapse;">
  <TBODY>
  <TR>
    <TD style=3D"padding: 10px; vertical-align: top; min-width: =
110px;"><A=20
      title=3D"Wayback Machine home page" style=3D"border: currentColor; =
border-image: none; background-color: transparent;"=20
      href=3D"http://web.archive.org/web/"><IMG width=3D"110" =
height=3D"39" alt=3D"Wayback Machine"=20
      =
src=3D"http://web.archive.org/static/images/toolbar/wayback-toolbar-logo.=
png"=20
      border=3D"0"></A>    </TD>
    <TD style=3D"padding: 0px !important; width: 100%; text-align: =
center; vertical-align: top;">
      <TABLE style=3D"margin: 0px auto; padding: 0px; width: 570px; =
border-collapse: collapse;">
        <TBODY>
        <TR>
          <TD style=3D"padding: 3px 0px;" colspan=3D"2">
            <FORM name=3D"wmtb" id=3D"wmtb" style=3D"margin: 0px =
!important; padding: 0px !important;"=20
            action=3D"/web/form-submit.jsp" method=3D"get"=20
target=3D"_top"><INPUT name=3D"url" id=3D"wmtbURL" style=3D'width: =
400px; font-family: "Lucida Grande","Arial",sans-serif; font-size: =
11px;' onfocus=3D"javascript:this.focus();this.select();" type=3D"text" =
value=3D"http://rastertek.com/tertut11.html"><INPUT name=3D"type" =
type=3D"hidden" value=3D"replay"><INPUT name=3D"date" type=3D"hidden" =
value=3D"20140722210351"><INPUT style=3D'width: inherit !important; =
font-family: "Lucida Grande","Arial",sans-serif; font-size: 11px; =
margin-left: 5px;' type=3D"submit" value=3D"Go"><SPAN=20
            id=3D"wm_tb_options" style=3D"display: =
block;"></SPAN></FORM></TD>
          <TD style=3D"padding: 5px 0px 0px !important; vertical-align: =
bottom;"=20
          rowspan=3D"2">
            <TABLE style=3D'width: 110px; color: rgb(153, 153, 170); =
font-family: "Helvetica","Lucida Grande","Arial",sans-serif; =
border-collapse: collapse;'>
              <TBODY><!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->    =
       =20
              <TR style=3D"width: 110px; height: 16px; font-size: 10px =
!important;">
                <TD nowrap=3D"nowrap" style=3D"text-align: right; =
text-transform: uppercase; overflow: visible; padding-right: 9px; =
font-size: 11px !important; font-weight: bold; white-space: nowrap;"><A=20
                  title=3D"11 Nov 2013" style=3D"border: currentColor; =
border-image: none; color: rgb(51, 51, 255); font-weight: bold; =
text-decoration: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20131111194909/http://rastertek.com/te=
rtut11.html"><STRONG>NOV</STRONG></A>
                  		                                </TD>
                <TD title=3D"You are here: 21:03:51 Jul 22, 2014" =
id=3D"displayMonthEl"=20
                style=3D"background: rgb(0, 0, 0); width: 34px; height: =
15px; text-align: center; color: rgb(255, 255, 0); text-transform: =
uppercase; padding-top: 1px; font-size: 11px !important; font-weight: =
bold;">JUL</TD>
                <TD nowrap=3D"nowrap" style=3D"text-transform: =
uppercase; overflow: visible; padding-left: 9px; font-size: 11px =
!important; font-weight: bold; white-space: nowrap;">=20
                                                       Aug               =
       =20
                                  </TD></TR><!-- NEXT/PREV CAPTURE NAV =
AND DAY OF MONTH INDICATOR -->=20
                        =20
              <TR>
                <TD nowrap=3D"nowrap" style=3D"text-align: right =
!important; overflow: visible; padding-right: 9px; vertical-align: =
middle !important; white-space: nowrap;"><A=20
                  title=3D"19:49:09 Nov 11, 2013" style=3D"border: =
currentColor; border-image: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20131111194909/http://rastertek.com/te=
rtut11.html"><IMG=20
                  width=3D"14" height=3D"16" alt=3D"Previous capture" =
src=3D"http://web.archive.org/static/images/toolbar/wm_tb_prv_on.png"=20
                  border=3D"0"></A>		                                =
</TD>
                <TD title=3D"You are here: 21:03:51 Jul 22, 2014" =
id=3D"displayDayEl"=20
                style=3D"background: rgb(0, 0, 0); padding: 2px 0px 0px; =
width: 34px; height: 24px; text-align: center; color: rgb(255, 255, 0); =
font-size: 24px; font-weight: bold;">22</TD>
                <TD nowrap=3D"nowrap" style=3D"text-align: left =
!important; overflow: visible; padding-left: 9px; vertical-align: middle =
!important; white-space: nowrap;"><IMG=20
                  width=3D"14" height=3D"16" alt=3D"Next capture" =
src=3D"http://web.archive.org/static/images/toolbar/wm_tb_nxt_off.png"=20
                  border=3D"0">                       			     =
</TD></TR><!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->=20
                        =20
              <TR=20
style=3D"width: 110px; height: 13px; font-size: 9px !important;">
                <TD nowrap=3D"nowrap" style=3D"text-align: right; =
overflow: visible; padding-right: 9px; font-size: 11px !important; =
font-weight: bold; white-space: nowrap;"><A=20
                  title=3D"1 Jul 2013" style=3D"border: currentColor; =
border-image: none; color: rgb(51, 51, 255); font-weight: bold; =
text-decoration: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20130701171003/http://www.rastertek.co=
m/tertut11.html"><STRONG>2013</STRONG></A>
                  		                                </TD>
                <TD title=3D"You are here: 21:03:51 Jul 22, 2014" =
id=3D"displayYearEl"=20
                style=3D"background: rgb(0, 0, 0); width: 34px; height: =
13px; text-align: center; color: rgb(255, 255, 0); padding-top: 1px; =
font-size: 11px !important; font-weight: bold;">2014</TD>
                <TD nowrap=3D"nowrap" style=3D"overflow: visible; =
padding-left: 9px; font-size: 11px !important; font-weight: bold; =
white-space: nowrap;">=20
                                                       2015              =
       =20
                   				 </TD></TR></TBODY></TABLE></TD></TR>
        <TR>
          <TD style=3D"padding: 0px !important; vertical-align: =
middle;"><A=20
            title=3D"See a list of every capture for this URL" =
style=3D"border: currentColor; border-image: none; color: rgb(51, 51, =
255); font-size: 11px; font-weight: bold; background-color: =
transparent;"=20
            =
href=3D"http://web.archive.org/web/20140722210351*/http://rastertek.com/t=
ertut11.html"><STRONG>4=20
            captures</STRONG></A>           =20
            <DIV title=3D"Timespan for captures of this URL" =
class=3D"__wb_banner_div"=20
            style=3D"margin: 0px !important; padding: 2px 0px 0px =
!important; color: rgb(102, 102, 102); font-size: 9px; white-space: =
nowrap;">5=20
            Nov 12 - 22 Jul 14</DIV></TD>
          <TD style=3D"padding: 0px !important;"><A =
id=3D"wm-graph-anchor" style=3D"width: 475px; height: 27px; white-space: =
nowrap; position: relative;"=20
            =
href=3D"http://web.archive.org/web/20140722210351/http://rastertek.com/">=

            <DIV title=3D"Explore captures for this URL" =
class=3D"__wb_banner_div"=20
            id=3D"wm-ipp-sparkline" style=3D"width: 475px; height: 27px; =
border-right-color: rgb(204, 204, 204); border-right-width: 1px; =
border-right-style: solid; white-space: nowrap; position: relative; =
cursor: pointer; background-color: rgb(255, 255, 255);"><IMG=20
            width=3D"475" height=3D"27" id=3D"sparklineImgId" =
style=3D"left: 0px; top: 0px; position: absolute; z-index: 9012;"=20
            onmouseover=3D"showTrackers('inline');" =
onmouseout=3D"showTrackers('none');"=20
            onmousemove=3D"trackMouseMove(event,this)" =
alt=3D"sparklines" =
src=3D"http://web.archive.org/web/jsp/graph.jsp?graphdata=3D475_27_1996:-=
1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:00000000=
0000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:=
-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:0000000=
00000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010=
:-1:000000000000_2011:-1:000000000000_2012:-1:000000000010_2013:-1:000000=
100010_2014:6:000000100000"=20
            border=3D"0">			 <IMG width=3D"25" height=3D"27" =
id=3D"wbMouseTrackYearImg"=20
            style=3D"display: none; position: absolute; z-index: 9010;" =
src=3D"http://web.archive.org/static/images/toolbar/transp-yellow-pixel.p=
ng"=20
            border=3D"0">			 <IMG width=3D"2" height=3D"27" =
id=3D"wbMouseTrackMonthImg"=20
            style=3D"display: none; position: absolute; z-index: 9011;" =
src=3D"http://web.archive.org/static/images/toolbar/transp-red-pixel.png"=
=20
            border=3D"0">        </DIV></A>        =
</TD></TR></TBODY></TABLE></TD>
    <TD style=3D"padding: 5px; width: 65px; text-align: right; =
font-size: 11px !important;"><A=20
      title=3D"Close the toolbar" style=3D'background: =
url("/static/images/toolbar/wm_tb_close.png") no-repeat 100% 0px; =
border: currentColor; border-image: none; color: rgb(51, 51, 255); =
padding-right: 18px; font-family: "Lucida Grande","Arial",sans-serif; =
margin-bottom: 23px; display: block;'=20
      =
onclick=3D"document.getElementById('wm-ipp').style.display=3D'none';" =
href=3D"javascript:;">Close</A><A=20
      title=3D"Get some help using the Wayback Machine" =
style=3D'background: url("/static/images/toolbar/wm_tb_help.png") =
no-repeat 100% 0px; border: currentColor; border-image: none; color: =
rgb(51, 51, 255); padding-right: 18px; font-family: "Lucida =
Grande","Arial",sans-serif; display: block;'=20
      =
href=3D"http://faq.web.archive.org/">Help</A></TD></TR></TBODY></TABLE></=
DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
 var wmDisclaimBanner =3D document.getElementById("wm-ipp");=0A=
 if(wmDisclaimBanner !=3D null) {=0A=
   disclaimElement(wmDisclaimBanner);=0A=
 }=0A=
</SCRIPT>
 <!-- END WAYBACK TOOLBAR INSERT -->=20
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"4"><B>Tutorial 11:=20
Bitmap Clouds </B></FONT></P>
<P align=3D"left"><IMG width=3D"800" height=3D"1" =
src=3D"http://web.archive.org/web/20140722210351im_/http://rastertek.com/=
pic1001.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
DirectX 11=20
terrain tutorial will cover how to implement clouds. The particular=20
implementation will be bitmap clouds which is one of the simpler methods =
to use.
 The code in this tutorial builds off the previous sky dome tutorial as =
the sky=20
dome is required for coloring the clouds. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">To =
implement clouds=20
we are going to first need some geometry to render the cloud bitmaps =
onto. The=20
ideal geometry to use is a plane that is slightly curved. You can create =
one in=20
a modeling program but since they are very easy to build we will =
implement the=20
geometry in the code so that we can modify it as needed. The plane model =
will be=20
encapsulated in a class called SkyPlaneClass. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">And =
just like the=20
sky dome in the previous tutorial we will always center the sky plane at =
the=20
camera's location and place it just slightly above us. This way as the =
camera=20
moves in the world the sky plane moves with it. For rendering the sky =
plane we=20
will turn off the depth buffer so that it overwrites and combines with=20
everything behind it giving the illusion that the geometry is much =
larger than=20
what it actually is. This was the same approach used with the sky dome. =
And=20
since we are generating the plane in the code we won't need to turn off =
back=20
face culling as we will create the plane facing downwards. </FONT></P>
<P align=3D"left"><IMG width=3D"300" height=3D"200" =
src=3D"http://web.archive.org/web/20140722210351im_/http://rastertek.com/=
pic0204.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Note =
that the edges=20
of the sky plane will be visible so you will need to adjust for this in =
your own=20
code. Most people deal with the issue by ensuring there is a surrounding =
band of=20
terrain that the camera will never go above so the edges are hidden. =
Other=20
people use walls, buildings, and so forth. Another approach is to use a =
third=20
alpha texture to create a fade effect at the edges so it looks like it =
blends=20
into the horizon but it doesn't always look correct when you do that.=20
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
clouds that we=20
will be using are going to be two different bitmaps that we will render =
onto the=20
sky plane. The reason that we are using two instead of one is so that we =
can=20
translate them at different speeds creating the illusion of two separate =
cloud
 layers with one higher than the other. The speed you translate each at =
is key=20
in creating the perception that one layer is much higher than the other, =
even=20
though they are rendered onto the same geometry. </FONT></P>
<P align=3D"left"><IMG width=3D"256" height=3D"256" =
src=3D"http://web.archive.org/web/20140722210351im_/http://rastertek.com/=
pic0205.gif"=20
border=3D"0"></P>
<P align=3D"left"><IMG width=3D"256" height=3D"256" =
src=3D"http://web.archive.org/web/20140722210351im_/http://rastertek.com/=
pic0206.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">To =
color the clouds=20
we simply turn on additive blending and make sure that the sky dome is =
rendered=20
first. This way the clouds will blend with the sky dome's color. =
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
will begin the=20
code section by examining the SkyPlaneClass first. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Skyplaneclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
SkyPlaneClass=20
encapsulates everything related to the plane used for rendering the =
clouds. It=20
holds the geometry for the sky plane, the two bitmaps textures for the =
clouds,=20
and all the variables for the shader that relate to how to draw the sky =
plane.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: skyplaneclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _SKYPLANECLASS_H_=0A=
#define _SKYPLANECLASS_H_=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
=0A=
=0A=
///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "textureclass.h"=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: SkyPlaneClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class SkyPlaneClass=0A=
{=0A=
private:=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
SkyPlaneType=20
structure is used for storing the sky plane geometry. We generate =
position and=20
texture coordinates for the plane and then store them in an array of=20
SkyPlaneType. There are no normals since the clouds use the sky dome for =
color=20
and lighting appearance. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct =
SkyPlaneType=0A=
	{=0A=
		float x, y, z;=0A=
		float tu, tv;=0A=
	};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
VertexType=20
requires position and texture coordinates for rendering the sky plane.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct VertexType=0A=
	{=0A=
		D3DXVECTOR3 position;=0A=
		D3DXVECTOR2 texture;=0A=
	};=0A=
=0A=
public:=0A=
	SkyPlaneClass();=0A=
	SkyPlaneClass(const SkyPlaneClass&amp;);=0A=
	~SkyPlaneClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, WCHAR*, WCHAR*);=0A=
	void Shutdown();=0A=
	void Render(ID3D11DeviceContext*);=0A=
	void Frame();=0A=
=0A=
	int GetIndexCount();=0A=
	ID3D11ShaderResourceView* GetCloudTexture1();=0A=
	ID3D11ShaderResourceView* GetCloudTexture2();=0A=
	=0A=
	float GetBrightness();=0A=
	float GetTranslation(int);=0A=
=0A=
private:=0A=
	bool InitializeSkyPlane(int, float, float, float, int);=0A=
	void ShutdownSkyPlane();=0A=
=0A=
	bool InitializeBuffers(ID3D11Device*, int);=0A=
	void ShutdownBuffers();=0A=
	void RenderBuffers(ID3D11DeviceContext*);=0A=
=0A=
	bool LoadTextures(ID3D11Device*, WCHAR*, WCHAR*);=0A=
	void ReleaseTextures();=0A=
=0A=
private:=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
m_skyPlane array=20
is used to hold the plane geometry. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	SkyPlaneType* =
m_skyPlane;=0A=
	int m_vertexCount, m_indexCount;=0A=
	ID3D11Buffer *m_vertexBuffer, *m_indexBuffer;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sky plane will=20
use two cloud textures that are rendered to it. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	TextureClass =
*m_CloudTexture1, *m_CloudTexture2;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
brightness of=20
the clouds is stored here and set in the pixel shader during rendering.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	float =
m_brightness;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
cloud location=20
and speed are stored in these two arrays. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	float =
m_translationSpeed[4];=0A=
	float m_textureTranslation[4];=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Skyplaneclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: skyplaneclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "skyplaneclass.h"=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
set the class=20
private member pointers to null in the class constructor. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">SkyPlaneClass::SkyPlaneClass()=0A=
{=0A=
	m_skyPlane =3D 0;=0A=
	m_vertexBuffer =3D 0;=0A=
	m_indexBuffer =3D 0;=0A=
	m_CloudTexture1 =3D 0;=0A=
	m_CloudTexture2 =3D 0;=0A=
}=0A=
=0A=
=0A=
SkyPlaneClass::SkyPlaneClass(const SkyPlaneClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
SkyPlaneClass::~SkyPlaneClass()=0A=
{=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Initialize=20
function is where we do all the setup for the sky plane. It takes as =
input the=20
two cloud texture file names as well as the Direct3D device. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
SkyPlaneClass::Initialize(ID3D11Device* device, WCHAR* textureFilename1, =
WCHAR* textureFilename2)=0A=
{=0A=
	int skyPlaneResolution, textureRepeat;=0A=
	float skyPlaneWidth, skyPlaneTop, skyPlaneBottom;=0A=
	bool result;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Here =
is where we set=20
the sky plane parameters that are used for generating the plane =
geometry. The=20
skyPlaneResolution is used for specifying how many quads that sky plane =
should=20
be composed of in the X and Z direction, increasing this value makes it =
higher=20
poly and smoother. The skyPlaneWidth is the length of the plane. =
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
skyPlaneTop and=20
skyPlaneBottom represent the height and base of the curved plane. The =
bottom=20
four corners of the plane will be at skyPlaneBottom and the center of =
the plane=20
will be at skyPlaneTop.  All other points are interpolated between those =
two=20
values. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
textureRepeat=20
value determines how many times to repeat the texture over the sky =
plane. This=20
is used to generate the UV coordinates. Note that a single 256x256 =
texture=20
mapped just once over the sky plane will look fairly pixelated, =
therefore you=20
either want to increase the texture size or map it multiple times to =
reduce how=20
pixelated it looks. Note that the higher the resolution this program =
runs at the=20
higher resolution the texture will need to be to look non-pixelated =
(likewise=20
how many times it needs to be repeated). </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Set the sky =
plane parameters.=0A=
	skyPlaneResolution =3D 10;=0A=
	skyPlaneWidth =3D 10.0f;=0A=
	skyPlaneTop =3D 0.5f;=0A=
	skyPlaneBottom =3D 0.0f;=0A=
	textureRepeat =3D 4;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Setting the=20
brightness is important for making clouds look realistic when using =
bitmaps that=20
range from just 0 to 255. The brightness value lowers how white the =
clouds are=20
which allows you to give them more of a faded look just like real clouds =
have.
 The value range here is from 0.0f to 1.0f.  I have set it to 0.65f so =
that the=20
clouds are at 65% brightness. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Set the =
brightness of the clouds.=0A=
	m_brightness =3D 0.65f;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
translation=20
speed is how fast we translate the cloud textures over the sky plane. =
Each cloud=20
can be translated on both the X and Z axis. There are two textures so we =
store=20
the dual speed for both in a 4 float array. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Setup the =
cloud translation speed increments.=0A=
	m_translationSpeed[0] =3D 0.0003f;   // First texture X translation =
speed.=0A=
	m_translationSpeed[1] =3D 0.0f;      // First texture Z translation =
speed.=0A=
	m_translationSpeed[2] =3D 0.00015f;  // Second texture X translation =
speed.=0A=
	m_translationSpeed[3] =3D 0.0f;      // Second texture Z translation =
speed.=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
also store the=20
current translation for the two textures and provide it to the pixel =
shader=20
during rendering. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Initialize =
the texture translation values.=0A=
	m_textureTranslation[0] =3D 0.0f;=0A=
	m_textureTranslation[1] =3D 0.0f;=0A=
	m_textureTranslation[2] =3D 0.0f;=0A=
	m_textureTranslation[3] =3D 0.0f;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Once =
all our values=20
are set we then create the sky plane, load it into a vertex and index =
buffer,=20
and then load the textures. Note that I would generally make all the sky =
plane=20
parameters as input to the Initialize function but it is easier for the =
tutorial=20
explanation and for modifying them at first by having them inside the =
function=20
for now. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Create the =
sky plane.=0A=
	result =3D InitializeSkyPlane(skyPlaneResolution, skyPlaneWidth, =
skyPlaneTop, skyPlaneBottom, textureRepeat);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex and index buffer for the sky plane.=0A=
	result =3D InitializeBuffers(device, skyPlaneResolution);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Load the sky plane textures.=0A=
	result =3D LoadTextures(device, textureFilename1, textureFilename2);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Shutdown=20
function is where we release the sky plane, the buffers, and the =
textures.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
SkyPlaneClass::Shutdown()=0A=
{=0A=
	// Release the sky plane textures.=0A=
	ReleaseTextures();=0A=
=0A=
	// Release the vertex and index buffer that were used for rendering the =
sky plane.=0A=
	ShutdownBuffers();=0A=
=0A=
	// Release the sky plane array.=0A=
	ShutdownSkyPlane();=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Render function=20
calls RenderBuffers to put the sky plane geometry on the graphics =
pipeline for=20
drawing. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
SkyPlaneClass::Render(ID3D11DeviceContext* deviceContext)=0A=
{=0A=
	// Render the sky plane.=0A=
	RenderBuffers(deviceContext);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
frame processing=20
that we do for the sky plane is the cloud texture translation which =
simulates=20
movement of the clouds across the sky. The coordinates are translated =
according=20
to the speed given for that direction. Index 0 and 1 is for the X and Z =
on the=20
first cloud. Index 2 and 3 is for the X and Z on the second cloud. We =
also=20
truncate the values so they never go over 1.0f. Note that if you unlock =
the=20
vsync the clouds will go at a speed according to the new frame rate, to =
avoid=20
that you should pass in the frame time and adjust the translation =
accordingly.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
SkyPlaneClass::Frame()=0A=
{=0A=
	// Increment the translation values to simulate the moving clouds.=0A=
	m_textureTranslation[0] +=3D m_translationSpeed[0];=0A=
	m_textureTranslation[1] +=3D m_translationSpeed[1];=0A=
	m_textureTranslation[2] +=3D m_translationSpeed[2];=0A=
	m_textureTranslation[3] +=3D m_translationSpeed[3];=0A=
=0A=
	// Keep the values in the zero to one range.=0A=
	if(m_textureTranslation[0] &gt; 1.0f)  {  m_textureTranslation[0] -=3D =
1.0f;  }=0A=
	if(m_textureTranslation[1] &gt; 1.0f)  {  m_textureTranslation[1] -=3D =
1.0f;  }=0A=
	if(m_textureTranslation[2] &gt; 1.0f)  {  m_textureTranslation[2] -=3D =
1.0f;  }=0A=
	if(m_textureTranslation[3] &gt; 1.0f)  {  m_textureTranslation[3] -=3D =
1.0f;  }=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">GetIndexCount=20
returns the number of indexes in the index buffer. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">int =
SkyPlaneClass::GetIndexCount()=0A=
{=0A=
	return m_indexCount;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">GetCloudTexture1=20
returns the first cloud texture resource. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">ID3D11ShaderResourceView* SkyPlaneClass::GetCloudTexture1()=0A=
{=0A=
	return m_CloudTexture1-&gt;GetTexture();=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">GetCloudTexture2=20
returns the second cloud texture resource. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">ID3D11ShaderResourceView* SkyPlaneClass::GetCloudTexture2()=0A=
{=0A=
	return m_CloudTexture2-&gt;GetTexture();=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
GetBrightness=20
function returns the current brightness value that we want applied to =
the clouds=20
in the pixel shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">float =
SkyPlaneClass::GetBrightness()=0A=
{=0A=
	return m_brightness;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
GetTranslation=20
function returns the texture translation value for the given index. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">float =
SkyPlaneClass::GetTranslation(int index)=0A=
{=0A=
	return m_textureTranslation[index];=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">InitializeSkyPlane=20
is where we build the geometry for the sky plane. We first create an =
array to=20
hold the geometry and then we setup the increment values needed to build =
the sky=20
plane in the for loop. Then we run the for loop and create the position =
and=20
texture coordinates for each vertex based on the increment values. This =
process=20
builds the curved plane that we will use to render the clouds onto. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
SkyPlaneClass::InitializeSkyPlane(int skyPlaneResolution, float =
skyPlaneWidth, float skyPlaneTop, float skyPlaneBottom, int =
textureRepeat)=0A=
{=0A=
	float quadSize, radius, constant, textureDelta;=0A=
	int i, j, index;=0A=
	float positionX, positionY, positionZ, tu, tv;=0A=
=0A=
=0A=
	// Create the array to hold the sky plane coordinates.=0A=
	m_skyPlane =3D new SkyPlaneType[(skyPlaneResolution + 1) * =
(skyPlaneResolution + 1)];=0A=
	if(!m_skyPlane)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Determine the size of each quad on the sky plane.=0A=
	quadSize =3D skyPlaneWidth / (float)skyPlaneResolution;=0A=
=0A=
	// Calculate the radius of the sky plane based on the width.=0A=
	radius =3D skyPlaneWidth / 2.0f;=0A=
=0A=
	// Calculate the height constant to increment by.=0A=
	constant =3D (skyPlaneTop - skyPlaneBottom) / (radius * radius);=0A=
=0A=
	// Calculate the texture coordinate increment value.=0A=
	textureDelta =3D (float)textureRepeat / (float)skyPlaneResolution;=0A=
=0A=
	// Loop through the sky plane and build the coordinates based on the =
increment values given.=0A=
	for(j=3D0; j&lt;=3DskyPlaneResolution; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;=3DskyPlaneResolution; i++)=0A=
		{=0A=
			// Calculate the vertex coordinates.=0A=
			positionX =3D (-0.5f * skyPlaneWidth) + ((float)i * quadSize);=0A=
			positionZ =3D (-0.5f * skyPlaneWidth) + ((float)j * quadSize);=0A=
			positionY =3D skyPlaneTop - (constant * ((positionX * positionX) + =
(positionZ * positionZ)));=0A=
=0A=
			// Calculate the texture coordinates.=0A=
			tu =3D (float)i * textureDelta;=0A=
			tv =3D (float)j * textureDelta;=0A=
=0A=
			// Calculate the index into the sky plane array to add this =
coordinate.=0A=
			index =3D j * (skyPlaneResolution + 1) + i;=0A=
=0A=
			// Add the coordinates to the sky plane array.=0A=
			m_skyPlane[index].x =3D positionX;=0A=
			m_skyPlane[index].y =3D positionY;=0A=
			m_skyPlane[index].z =3D positionZ;=0A=
			m_skyPlane[index].tu =3D tu;=0A=
			m_skyPlane[index].tv =3D tv;=0A=
		}=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
ShutdownSkyPlane=20
function releases the array that was holding the sky plane geometry. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
SkyPlaneClass::ShutdownSkyPlane()=0A=
{=0A=
	// Release the sky plane array.=0A=
	if(m_skyPlane)=0A=
	{=0A=
		delete [] m_skyPlane;=0A=
		m_skyPlane =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">InitializeBuffers=20
loads the array that was holding the sky plane geometry into a vertex =
and index=20
buffer so that it can be rendered. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
SkyPlaneClass::InitializeBuffers(ID3D11Device* device, int =
skyPlaneResolution)=0A=
{=0A=
	VertexType* vertices;=0A=
	unsigned long* indices;=0A=
	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;=0A=
	D3D11_SUBRESOURCE_DATA vertexData, indexData;=0A=
	HRESULT result;=0A=
	int i, j, index, index1, index2, index3, index4;=0A=
=0A=
=0A=
	// Calculate the number of vertices in the sky plane mesh.=0A=
	m_vertexCount =3D (skyPlaneResolution + 1) * (skyPlaneResolution + 1) * =
6;=0A=
=0A=
	// Set the index count to the same as the vertex count.=0A=
	m_indexCount =3D m_vertexCount;=0A=
		=0A=
	// Create the vertex array.=0A=
	vertices =3D new VertexType[m_vertexCount];=0A=
	if(!vertices)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the index array.=0A=
	indices =3D new unsigned long[m_indexCount];=0A=
	if(!indices)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the index into the vertex array.=0A=
	index =3D 0;=0A=
=0A=
	// Load the vertex and index array with the sky plane array data.=0A=
	for(j=3D0; j&lt;skyPlaneResolution; j++)=0A=
	{=0A=
		for(i=3D0; i&lt;skyPlaneResolution; i++)=0A=
		{=0A=
			index1 =3D j * (skyPlaneResolution + 1) + i;=0A=
			index2 =3D j * (skyPlaneResolution + 1) + (i+1);=0A=
			index3 =3D (j+1) * (skyPlaneResolution + 1) + i;=0A=
			index4 =3D (j+1) * (skyPlaneResolution + 1) + (i+1);=0A=
=0A=
			// Triangle 1 - Upper Left=0A=
			vertices[index].position =3D D3DXVECTOR3(m_skyPlane[index1].x, =
m_skyPlane[index1].y, m_skyPlane[index1].z);=0A=
			vertices[index].texture =3D D3DXVECTOR2(m_skyPlane[index1].tu, =
m_skyPlane[index1].tv);=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
=0A=
			// Triangle 1 - Upper Right=0A=
			vertices[index].position =3D D3DXVECTOR3(m_skyPlane[index2].x, =
m_skyPlane[index2].y, m_skyPlane[index2].z);=0A=
			vertices[index].texture =3D D3DXVECTOR2(m_skyPlane[index2].tu, =
m_skyPlane[index2].tv);=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
=0A=
			// Triangle 1 - Bottom Left=0A=
			vertices[index].position =3D D3DXVECTOR3(m_skyPlane[index3].x, =
m_skyPlane[index3].y, m_skyPlane[index3].z);=0A=
			vertices[index].texture =3D D3DXVECTOR2(m_skyPlane[index3].tu, =
m_skyPlane[index3].tv);=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
=0A=
			// Triangle 2 - Bottom Left=0A=
			vertices[index].position =3D D3DXVECTOR3(m_skyPlane[index3].x, =
m_skyPlane[index3].y, m_skyPlane[index3].z);=0A=
			vertices[index].texture =3D D3DXVECTOR2(m_skyPlane[index3].tu, =
m_skyPlane[index3].tv);=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
=0A=
			// Triangle 2 - Upper Right=0A=
			vertices[index].position =3D D3DXVECTOR3(m_skyPlane[index2].x, =
m_skyPlane[index2].y, m_skyPlane[index2].z);=0A=
			vertices[index].texture =3D D3DXVECTOR2(m_skyPlane[index2].tu, =
m_skyPlane[index2].tv);=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
=0A=
			// Triangle 2 - Bottom Right=0A=
			vertices[index].position =3D D3DXVECTOR3(m_skyPlane[index4].x, =
m_skyPlane[index4].y, m_skyPlane[index4].z);=0A=
			vertices[index].texture =3D D3DXVECTOR2(m_skyPlane[index4].tu, =
m_skyPlane[index4].tv);=0A=
			indices[index] =3D index;=0A=
			index++;=0A=
		}=0A=
	}=0A=
=0A=
	// Set up the description of the vertex buffer.=0A=
	vertexBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
	vertexBufferDesc.ByteWidth =3D sizeof(VertexType) * m_vertexCount;=0A=
	vertexBufferDesc.BindFlags =3D D3D11_BIND_VERTEX_BUFFER;=0A=
	vertexBufferDesc.CPUAccessFlags =3D 0;=0A=
	vertexBufferDesc.MiscFlags =3D 0;=0A=
	vertexBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Give the subresource structure a pointer to the vertex data.=0A=
	vertexData.pSysMem =3D vertices;=0A=
	vertexData.SysMemPitch =3D 0;=0A=
	vertexData.SysMemSlicePitch =3D 0;=0A=
=0A=
	// Now finally create the vertex buffer.=0A=
	result =3D device-&gt;CreateBuffer(&amp;vertexBufferDesc, =
&amp;vertexData, &amp;m_vertexBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Set up the description of the index buffer.=0A=
	indexBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
	indexBufferDesc.ByteWidth =3D sizeof(unsigned long) * m_indexCount;=0A=
	indexBufferDesc.BindFlags =3D D3D11_BIND_INDEX_BUFFER;=0A=
	indexBufferDesc.CPUAccessFlags =3D 0;=0A=
	indexBufferDesc.MiscFlags =3D 0;=0A=
	indexBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Give the subresource structure a pointer to the index data.=0A=
	indexData.pSysMem =3D indices;=0A=
	indexData.SysMemPitch =3D 0;=0A=
	indexData.SysMemSlicePitch =3D 0;=0A=
=0A=
	// Create the index buffer.=0A=
	result =3D device-&gt;CreateBuffer(&amp;indexBufferDesc, =
&amp;indexData, &amp;m_indexBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Release the arrays now that the vertex and index buffers have been =
created and loaded.=0A=
	delete [] vertices;=0A=
	vertices =3D 0;=0A=
=0A=
	delete [] indices;=0A=
	indices =3D 0;=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
ShutdownBuffers=20
function releases the buffers that were used to render the sky plane.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
SkyPlaneClass::ShutdownBuffers()=0A=
{=0A=
	// Release the index buffer.=0A=
	if(m_indexBuffer)=0A=
	{=0A=
		m_indexBuffer-&gt;Release();=0A=
		m_indexBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the vertex buffer.=0A=
	if(m_vertexBuffer)=0A=
	{=0A=
		m_vertexBuffer-&gt;Release();=0A=
		m_vertexBuffer =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">RenderBuffers puts=20
the sky plane geometry on the graphics pipeline for rendering by the =
shader.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
SkyPlaneClass::RenderBuffers(ID3D11DeviceContext* deviceContext)=0A=
{=0A=
	unsigned int stride;=0A=
	unsigned int offset;=0A=
=0A=
=0A=
	// Set vertex buffer stride and offset.=0A=
	stride =3D sizeof(VertexType); =0A=
	offset =3D 0;=0A=
    =0A=
	// Set the vertex buffer to active in the input assembler so it can be =
rendered.=0A=
	deviceContext-&gt;IASetVertexBuffers(0, 1, &amp;m_vertexBuffer, =
&amp;stride, &amp;offset);=0A=
=0A=
	// Set the index buffer to active in the input assembler so it can be =
rendered.=0A=
	deviceContext-&gt;IASetIndexBuffer(m_indexBuffer, DXGI_FORMAT_R32_UINT, =
0);=0A=
=0A=
	// Set the type of primitive that should be rendered from this vertex =
buffer, in this case triangles.=0A=
	=
deviceContext-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGL=
ELIST);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
LoadTextures=20
function loads the two cloud textures that will be used for rendering =
with.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
SkyPlaneClass::LoadTextures(ID3D11Device* device, WCHAR* =
textureFilename1, WCHAR* textureFilename2)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Create the first cloud texture object.=0A=
	m_CloudTexture1 =3D new TextureClass;=0A=
	if(!m_CloudTexture1)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the first cloud texture object.=0A=
	result =3D m_CloudTexture1-&gt;Initialize(device, textureFilename1);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the second cloud texture object.=0A=
	m_CloudTexture2 =3D new TextureClass;=0A=
	if(!m_CloudTexture2)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the second cloud texture object.=0A=
	result =3D m_CloudTexture2-&gt;Initialize(device, textureFilename2);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">ReleaseTextures=20
releases the two cloud textures that were used for rendering. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
SkyPlaneClass::ReleaseTextures()=0A=
{=0A=
	// Release the texture objects.=0A=
	if(m_CloudTexture1)=0A=
	{=0A=
		m_CloudTexture1-&gt;Shutdown();=0A=
		delete m_CloudTexture1;=0A=
		m_CloudTexture1 =3D 0;=0A=
	}=0A=
=0A=
	if(m_CloudTexture2)=0A=
	{=0A=
		m_CloudTexture2-&gt;Shutdown();=0A=
		delete m_CloudTexture2;=0A=
		m_CloudTexture2 =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Skyplane.vs</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sky plane vertex=20
shader is fairly generic and just sends through the transformed position =
and=20
texture coordinates to the pixel shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: skyplane.vs=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
cbuffer MatrixBuffer=0A=
{=0A=
    matrix worldMatrix;=0A=
    matrix viewMatrix;=0A=
    matrix projectionMatrix;=0A=
};=0A=
=0A=
=0A=
//////////////=0A=
// TYPEDEFS //=0A=
//////////////=0A=
struct VertexInputType=0A=
{=0A=
    float4 position : POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
};=0A=
=0A=
struct PixelInputType=0A=
{=0A=
    float4 position : SV_POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
};=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Vertex Shader=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
PixelInputType SkyPlaneVertexShader(VertexInputType input)=0A=
{=0A=
    PixelInputType output;=0A=
    =0A=
=0A=
    // Change the position vector to be 4 units for proper matrix =
calculations.=0A=
    input.position.w =3D 1.0f;=0A=
=0A=
    // Calculate the position of the vertex against the world, view, and =
projection matrices.=0A=
    output.position =3D mul(input.position, worldMatrix);=0A=
    output.position =3D mul(output.position, viewMatrix);=0A=
    output.position =3D mul(output.position, projectionMatrix);=0A=
    =0A=
    // Store the texture coordinates for the pixel shader.=0A=
    output.tex =3D input.tex;=0A=
	=0A=
    return output;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Skyplane.ps</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: skyplane.ps=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sky plane uses=20
two cloud textures. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">Texture2D =
cloudTexture1 : register(t0);=0A=
Texture2D cloudTexture2 : register(t1);=0A=
SamplerState SampleType;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sky buffer=20
contains the translation values for the two clouds as well as the cloud=20
brightness value. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">cbuffer SkyBuffer=0A=
{=0A=
    float firstTranslationX;=0A=
    float firstTranslationZ;=0A=
    float secondTranslationX;=0A=
    float secondTranslationZ;=0A=
    float brightness;=0A=
    float3 padding;=0A=
};=0A=
=0A=
=0A=
//////////////=0A=
// TYPEDEFS //=0A=
//////////////=0A=
struct PixelInputType=0A=
{=0A=
    float4 position : SV_POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
pixel shader is=20
fairly simple. We sample the two clouds at their individual texture =
translation=20
coordinates which creates the movement simulation. Then we combine the =
two cloud=20
textures using a linear interpolation function. Finally we reduce the =
brightness=20
of the clouds by the brightness value from the sky buffer. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Pixel Shader=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
float4 SkyPlanePixelShader(PixelInputType input) : SV_TARGET=0A=
{=0A=
    float2 sampleLocation;=0A=
    float4 textureColor1;=0A=
    float4 textureColor2;=0A=
    float4 finalColor;=0A=
=0A=
=0A=
    // Translate the position where we sample the pixel from using the =
first texture translation values.=0A=
    sampleLocation.x =3D input.tex.x + firstTranslationX;=0A=
    sampleLocation.y =3D input.tex.y + firstTranslationZ;=0A=
=0A=
    // Sample the pixel color from the first cloud texture using the =
sampler at this texture coordinate location.=0A=
    textureColor1 =3D cloudTexture1.Sample(SampleType, sampleLocation);=0A=
=0A=
    // Translate the position where we sample the pixel from using the =
second texture translation values.=0A=
    sampleLocation.x =3D input.tex.x + secondTranslationX;=0A=
    sampleLocation.y =3D input.tex.y + secondTranslationZ;=0A=
=0A=
    // Sample the pixel color from the second cloud texture using the =
sampler at this texture coordinate location.=0A=
    textureColor2 =3D cloudTexture2.Sample(SampleType, sampleLocation);=0A=
=0A=
    // Combine the two cloud textures evenly.=0A=
    finalColor =3D lerp(textureColor1, textureColor2, 0.5f);=0A=
=0A=
    // Reduce brightness of the combined cloud textures by the input =
brightness value.=0A=
    finalColor =3D finalColor * brightness;=0A=
=0A=
    return finalColor;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Skyplaneshaderclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
SkyPlaneShaderClass is the shader used for rendering the clouds on the =
sky=20
plane. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: skyplaneshaderclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _SKYPLANESHADERCLASS_H_=0A=
#define _SKYPLANESHADERCLASS_H_=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
#include &lt;d3dx11async.h&gt;=0A=
#include &lt;fstream&gt;=0A=
using namespace std;=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: SkyPlaneShaderClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class SkyPlaneShaderClass=0A=
{=0A=
private:=0A=
	struct MatrixBufferType=0A=
	{=0A=
		D3DXMATRIX world;=0A=
		D3DXMATRIX view;=0A=
		D3DXMATRIX projection;=0A=
	};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sky buffer type=20
contains the translation coordinates for the clouds as well as the =
overall=20
brightness of the clouds. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct =
SkyBufferType=0A=
	{=0A=
		float firstTranslationX;=0A=
		float firstTranslationZ;=0A=
		float secondTranslationX;=0A=
		float secondTranslationZ;=0A=
		float brightness;=0A=
		D3DXVECTOR3 padding;=0A=
	};=0A=
=0A=
public:=0A=
	SkyPlaneShaderClass();=0A=
	SkyPlaneShaderClass(const SkyPlaneShaderClass&amp;);=0A=
	~SkyPlaneShaderClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, HWND);=0A=
	void Shutdown();=0A=
	bool Render(ID3D11DeviceContext*, int, D3DXMATRIX, D3DXMATRIX, =
D3DXMATRIX, ID3D11ShaderResourceView*, ID3D11ShaderResourceView*, float, =
float, float, =0A=
		    float, float);=0A=
=0A=
private:=0A=
	bool InitializeShader(ID3D11Device*, HWND, WCHAR*, WCHAR*);=0A=
	void ShutdownShader();=0A=
	void OutputShaderErrorMessage(ID3D10Blob*, HWND, WCHAR*);=0A=
=0A=
	bool SetShaderParameters(ID3D11DeviceContext*, D3DXMATRIX, D3DXMATRIX, =
D3DXMATRIX, ID3D11ShaderResourceView*, ID3D11ShaderResourceView*, float, =
float, =0A=
				 float, float, float);=0A=
	void RenderShader(ID3D11DeviceContext*, int);=0A=
=0A=
private:=0A=
	ID3D11VertexShader* m_vertexShader;=0A=
	ID3D11PixelShader* m_pixelShader;=0A=
	ID3D11InputLayout* m_layout;=0A=
	ID3D11SamplerState* m_sampleState;=0A=
	ID3D11Buffer* m_matrixBuffer;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
have a constant=20
buffer that will be used for for setting the sky buffer information in =
the pixel=20
shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	ID3D11Buffer* =
m_skyBuffer;=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Skyplaneshaderclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sky plane shader=20
is the TextureShaderClass with modifications for rendering the sky =
plane.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: skyplaneshaderclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "skyplaneshaderclass.h"=0A=
=0A=
=0A=
SkyPlaneShaderClass::SkyPlaneShaderClass()=0A=
{=0A=
	m_vertexShader =3D 0;=0A=
	m_pixelShader =3D 0;=0A=
	m_layout =3D 0;=0A=
	m_sampleState =3D 0;=0A=
	m_matrixBuffer =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the sky=20
constant buffer to null. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	m_skyBuffer =3D =
0;=0A=
}=0A=
=0A=
=0A=
SkyPlaneShaderClass::SkyPlaneShaderClass(const SkyPlaneShaderClass&amp; =
other)=0A=
{=0A=
}=0A=
=0A=
=0A=
SkyPlaneShaderClass::~SkyPlaneShaderClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool SkyPlaneShaderClass::Initialize(ID3D11Device* device, HWND hwnd)=0A=
{=0A=
	bool result;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Load =
the sky plane=20
shaders. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Initialize =
the vertex and pixel shaders.=0A=
	result =3D InitializeShader(device, hwnd, L"../Engine/skyplane.vs", =
L"../Engine/skyplane.ps");=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void SkyPlaneShaderClass::Shutdown()=0A=
{=0A=
	// Shutdown the vertex and pixel shaders as well as the related objects.=0A=
	ShutdownShader();=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool SkyPlaneShaderClass::Render(ID3D11DeviceContext* deviceContext, int =
indexCount, D3DXMATRIX worldMatrix, D3DXMATRIX viewMatrix, =0A=
				 D3DXMATRIX projectionMatrix, ID3D11ShaderResourceView* texture, =
ID3D11ShaderResourceView* texture2, =0A=
				 float firstTranslationX, float firstTranslationZ, float =
secondTranslationX, float secondTranslationZ, float brightness)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Set the shader parameters that it will use for rendering.=0A=
	result =3D SetShaderParameters(deviceContext, worldMatrix, viewMatrix, =
projectionMatrix, texture, texture2, firstTranslationX, =
firstTranslationZ, =0A=
				     secondTranslationX, secondTranslationZ, brightness);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Now render the prepared buffers with the shader.=0A=
	RenderShader(deviceContext, indexCount);=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
bool SkyPlaneShaderClass::InitializeShader(ID3D11Device* device, HWND =
hwnd, WCHAR* vsFilename, WCHAR* psFilename)=0A=
{=0A=
	HRESULT result;=0A=
	ID3D10Blob* errorMessage;=0A=
	ID3D10Blob* vertexShaderBuffer;=0A=
	ID3D10Blob* pixelShaderBuffer;=0A=
	D3D11_INPUT_ELEMENT_DESC polygonLayout[2];=0A=
	unsigned int numElements;=0A=
	D3D11_SAMPLER_DESC samplerDesc;=0A=
	D3D11_BUFFER_DESC matrixBufferDesc;=0A=
	D3D11_BUFFER_DESC skyBufferDesc;=0A=
=0A=
=0A=
	// Initialize the pointers this function will use to null.=0A=
	errorMessage =3D 0;=0A=
	vertexShaderBuffer =3D 0;=0A=
	pixelShaderBuffer =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Compile the sky=20
plane vertex shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Compile the =
vertex shader code.=0A=
	result =3D D3DX11CompileFromFile(vsFilename, NULL, NULL, =
"SkyPlaneVertexShader", "vs_5_0", D3D10_SHADER_ENABLE_STRICTNESS, 0, =
NULL, =0A=
				       &amp;vertexShaderBuffer, &amp;errorMessage, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		// If the shader failed to compile it should have writen something to =
the error message.=0A=
		if(errorMessage)=0A=
		{=0A=
			OutputShaderErrorMessage(errorMessage, hwnd, vsFilename);=0A=
		}=0A=
		// If there was  nothing in the error message then it simply could not =
find the shader file itself.=0A=
		else=0A=
		{=0A=
			MessageBox(hwnd, vsFilename, L"Missing Shader File", MB_OK);=0A=
		}=0A=
=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Compile the sky=20
plane pixel shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Compile the =
pixel shader code.=0A=
	result =3D D3DX11CompileFromFile(psFilename, NULL, NULL, =
"SkyPlanePixelShader", "ps_5_0", D3D10_SHADER_ENABLE_STRICTNESS, 0, =
NULL, =0A=
				       &amp;pixelShaderBuffer, &amp;errorMessage, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		// If the shader failed to compile it should have writen something to =
the error message.=0A=
		if(errorMessage)=0A=
		{=0A=
			OutputShaderErrorMessage(errorMessage, hwnd, psFilename);=0A=
		}=0A=
		// If there was nothing in the error message then it simply could not =
find the file itself.=0A=
		else=0A=
		{=0A=
			MessageBox(hwnd, psFilename, L"Missing Shader File", MB_OK);=0A=
		}=0A=
=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex shader from the buffer.=0A=
	result =3D =
device-&gt;CreateVertexShader(vertexShaderBuffer-&gt;GetBufferPointer(), =
vertexShaderBuffer-&gt;GetBufferSize(), NULL, &amp;m_vertexShader);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the pixel shader from the buffer.=0A=
	result =3D =
device-&gt;CreatePixelShader(pixelShaderBuffer-&gt;GetBufferPointer(), =
pixelShaderBuffer-&gt;GetBufferSize(), NULL, &amp;m_pixelShader);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex input layout description.=0A=
	polygonLayout[0].SemanticName =3D "POSITION";=0A=
	polygonLayout[0].SemanticIndex =3D 0;=0A=
	polygonLayout[0].Format =3D DXGI_FORMAT_R32G32B32_FLOAT;=0A=
	polygonLayout[0].InputSlot =3D 0;=0A=
	polygonLayout[0].AlignedByteOffset =3D 0;=0A=
	polygonLayout[0].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[0].InstanceDataStepRate =3D 0;=0A=
=0A=
	polygonLayout[1].SemanticName =3D "TEXCOORD";=0A=
	polygonLayout[1].SemanticIndex =3D 0;=0A=
	polygonLayout[1].Format =3D DXGI_FORMAT_R32G32_FLOAT;=0A=
	polygonLayout[1].InputSlot =3D 0;=0A=
	polygonLayout[1].AlignedByteOffset =3D D3D11_APPEND_ALIGNED_ELEMENT;=0A=
	polygonLayout[1].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[1].InstanceDataStepRate =3D 0;=0A=
=0A=
	// Get a count of the elements in the layout.=0A=
	numElements =3D sizeof(polygonLayout) / sizeof(polygonLayout[0]);=0A=
=0A=
	// Create the vertex input layout.=0A=
	result =3D device-&gt;CreateInputLayout(polygonLayout, numElements, =
vertexShaderBuffer-&gt;GetBufferPointer(), =
vertexShaderBuffer-&gt;GetBufferSize(), =0A=
					   &amp;m_layout);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Release the vertex shader buffer and pixel shader buffer since they =
are no longer needed.=0A=
	vertexShaderBuffer-&gt;Release();=0A=
	vertexShaderBuffer =3D 0;=0A=
=0A=
	pixelShaderBuffer-&gt;Release();=0A=
	pixelShaderBuffer =3D 0;=0A=
=0A=
	// Create a texture sampler state description.=0A=
	samplerDesc.Filter =3D D3D11_FILTER_MIN_MAG_MIP_LINEAR;=0A=
	samplerDesc.AddressU =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.AddressV =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.AddressW =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.MipLODBias =3D 0.0f;=0A=
	samplerDesc.MaxAnisotropy =3D 1;=0A=
	samplerDesc.ComparisonFunc =3D D3D11_COMPARISON_ALWAYS;=0A=
	samplerDesc.BorderColor[0] =3D 0;=0A=
	samplerDesc.BorderColor[1] =3D 0;=0A=
	samplerDesc.BorderColor[2] =3D 0;=0A=
	samplerDesc.BorderColor[3] =3D 0;=0A=
	samplerDesc.MinLOD =3D 0;=0A=
	samplerDesc.MaxLOD =3D D3D11_FLOAT32_MAX;=0A=
=0A=
	// Create the texture sampler state.=0A=
	result =3D device-&gt;CreateSamplerState(&amp;samplerDesc, =
&amp;m_sampleState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Setup the description of the dynamic matrix constant buffer that is =
in the vertex shader.=0A=
	matrixBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	matrixBufferDesc.ByteWidth =3D sizeof(MatrixBufferType);=0A=
	matrixBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	matrixBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	matrixBufferDesc.MiscFlags =3D 0;=0A=
	matrixBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Create the constant buffer pointer so we can access the vertex =
shader constant buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;matrixBufferDesc, NULL, =
&amp;m_matrixBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Setup a description=20
of the sky constant buffer and then create it. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Setup the =
description of the sky constant buffer that is in the pixel shader.=0A=
	skyBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	skyBufferDesc.ByteWidth =3D sizeof(SkyBufferType);=0A=
	skyBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	skyBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	skyBufferDesc.MiscFlags =3D 0;=0A=
	skyBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Create the constant buffer pointer so we can access the pixel shader =
constant buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;skyBufferDesc, NULL, =
&amp;m_skyBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void SkyPlaneShaderClass::ShutdownShader()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Release the sky=20
constant buffer in the ShutdownShader function. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Release the =
sky constant buffer.=0A=
	if(m_skyBuffer)=0A=
	{=0A=
		m_skyBuffer-&gt;Release();=0A=
		m_skyBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the matrix constant buffer.=0A=
	if(m_matrixBuffer)=0A=
	{=0A=
		m_matrixBuffer-&gt;Release();=0A=
		m_matrixBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the sampler states.=0A=
	if(m_sampleState)=0A=
	{=0A=
		m_sampleState-&gt;Release();=0A=
		m_sampleState =3D 0;=0A=
	}=0A=
=0A=
	// Release the layout.=0A=
	if(m_layout)=0A=
	{=0A=
		m_layout-&gt;Release();=0A=
		m_layout =3D 0;=0A=
	}=0A=
=0A=
	// Release the pixel shader.=0A=
	if(m_pixelShader)=0A=
	{=0A=
		m_pixelShader-&gt;Release();=0A=
		m_pixelShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the vertex shader.=0A=
	if(m_vertexShader)=0A=
	{=0A=
		m_vertexShader-&gt;Release();=0A=
		m_vertexShader =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void SkyPlaneShaderClass::OutputShaderErrorMessage(ID3D10Blob* =
errorMessage, HWND hwnd, WCHAR* shaderFilename)=0A=
{=0A=
	char* compileErrors;=0A=
	unsigned long bufferSize, i;=0A=
	ofstream fout;=0A=
=0A=
=0A=
	// Get a pointer to the error message text buffer.=0A=
	compileErrors =3D (char*)(errorMessage-&gt;GetBufferPointer());=0A=
=0A=
	// Get the length of the message.=0A=
	bufferSize =3D errorMessage-&gt;GetBufferSize();=0A=
=0A=
	// Open a file to write the error message to.=0A=
	fout.open("shader-error.txt");=0A=
=0A=
	// Write out the error message.=0A=
	for(i=3D0; i&lt;bufferSize; i++)=0A=
	{=0A=
		fout &lt;&lt; compileErrors[i];=0A=
	}=0A=
=0A=
	// Close the file.=0A=
	fout.close();=0A=
=0A=
	// Release the error message.=0A=
	errorMessage-&gt;Release();=0A=
	errorMessage =3D 0;=0A=
=0A=
	// Pop a message up on the screen to notify the user to check the text =
file for compile errors.=0A=
	MessageBox(hwnd, L"Error compiling shader.  Check shader-error.txt for =
message.", shaderFilename, MB_OK);=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool SkyPlaneShaderClass::SetShaderParameters(ID3D11DeviceContext* =
deviceContext, D3DXMATRIX worldMatrix, D3DXMATRIX viewMatrix,=0A=
					      D3DXMATRIX projectionMatrix, ID3D11ShaderResourceView* =
texture, ID3D11ShaderResourceView* texture2, =0A=
					      float firstTranslationX, float firstTranslationZ, float =
secondTranslationX, float secondTranslationZ, =0A=
					      float brightness)=0A=
{=0A=
	HRESULT result;=0A=
	D3D11_MAPPED_SUBRESOURCE mappedResource;=0A=
	MatrixBufferType* dataPtr;=0A=
	SkyBufferType* dataPtr2;=0A=
	unsigned int bufferNumber;=0A=
=0A=
=0A=
	// Transpose the matrices to prepare them for the shader.=0A=
	D3DXMatrixTranspose(&amp;worldMatrix, &amp;worldMatrix);=0A=
	D3DXMatrixTranspose(&amp;viewMatrix, &amp;viewMatrix);=0A=
	D3DXMatrixTranspose(&amp;projectionMatrix, &amp;projectionMatrix);=0A=
=0A=
	// Lock the constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_matrixBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr =3D (MatrixBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the matrices into the constant buffer.=0A=
	dataPtr-&gt;world =3D worldMatrix;=0A=
	dataPtr-&gt;view =3D viewMatrix;=0A=
	dataPtr-&gt;projection =3D projectionMatrix;=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_matrixBuffer, 0);=0A=
=0A=
	// Set the position of the constant buffer in the vertex shader.=0A=
	bufferNumber =3D 0;=0A=
=0A=
	// Finally set the constant buffer in the vertex shader with the =
updated values.=0A=
	deviceContext-&gt;VSSetConstantBuffers(bufferNumber, 1, =
&amp;m_matrixBuffer);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Set =
the data=20
contents in the sky constant buffer. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Lock the sky =
constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_skyBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr2 =3D (SkyBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the sky variables into the constant buffer.=0A=
	dataPtr2-&gt;firstTranslationX =3D firstTranslationX;=0A=
	dataPtr2-&gt;firstTranslationZ =3D firstTranslationZ;=0A=
	dataPtr2-&gt;secondTranslationX =3D secondTranslationX;=0A=
	dataPtr2-&gt;secondTranslationZ =3D secondTranslationZ;=0A=
	dataPtr2-&gt;brightness =3D brightness;=0A=
	dataPtr2-&gt;padding =3D D3DXVECTOR3(0.0f, 0.0f, 0.0f);=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_skyBuffer, 0);=0A=
=0A=
	// Set the position of the sky constant buffer in the pixel shader.=0A=
	bufferNumber =3D 0;=0A=
=0A=
	// Finally set the sky constant buffer in the pixel shader with the =
updated values.=0A=
	deviceContext-&gt;PSSetConstantBuffers(bufferNumber, 1, =
&amp;m_skyBuffer);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Set =
the two cloud=20
textures in the pixel shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Set the =
shader texture resource in the pixel shader.=0A=
	deviceContext-&gt;PSSetShaderResources(0, 1, &amp;texture);=0A=
	deviceContext-&gt;PSSetShaderResources(1, 1, &amp;texture2);=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void SkyPlaneShaderClass::RenderShader(ID3D11DeviceContext* =
deviceContext, int indexCount)=0A=
{=0A=
	// Set the vertex input layout.=0A=
	deviceContext-&gt;IASetInputLayout(m_layout);=0A=
=0A=
	// Set the vertex and pixel shaders that will be used to render the =
triangles.=0A=
	deviceContext-&gt;VSSetShader(m_vertexShader, NULL, 0);=0A=
	deviceContext-&gt;PSSetShader(m_pixelShader, NULL, 0);=0A=
=0A=
	// Set the sampler state in the pixel shader.=0A=
	deviceContext-&gt;PSSetSamplers(0, 1, &amp;m_sampleState);=0A=
=0A=
	// Render the triangles.=0A=
	deviceContext-&gt;DrawIndexed(indexCount, 0, 0);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>D3dclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
D3DClass has=20
been modified for this tutorial by adding a secondary blend state for =
the cloud=20
rendering. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: d3dclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _D3DCLASS_H_=0A=
#define _D3DCLASS_H_=0A=
=0A=
=0A=
/////////////=0A=
// LINKING //=0A=
/////////////=0A=
#pragma comment(lib, "dxgi.lib")=0A=
#pragma comment(lib, "d3d11.lib")=0A=
#pragma comment(lib, "d3dx11.lib")=0A=
#pragma comment(lib, "d3dx10.lib")=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;dxgi.h&gt;=0A=
#include &lt;d3dcommon.h&gt;=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: D3DClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class D3DClass=0A=
{=0A=
public:=0A=
	D3DClass();=0A=
	D3DClass(const D3DClass&amp;);=0A=
	~D3DClass();=0A=
=0A=
	bool Initialize(int, int, bool, HWND, bool, float, float);=0A=
	void Shutdown();=0A=
	=0A=
	void BeginScene(float, float, float, float);=0A=
	void EndScene();=0A=
=0A=
	ID3D11Device* GetDevice();=0A=
	ID3D11DeviceContext* GetDeviceContext();=0A=
=0A=
	void GetProjectionMatrix(D3DXMATRIX&amp;);=0A=
	void GetWorldMatrix(D3DXMATRIX&amp;);=0A=
	void GetOrthoMatrix(D3DXMATRIX&amp;);=0A=
=0A=
	void GetVideoCardInfo(char*, int&amp;);=0A=
=0A=
	void TurnZBufferOn();=0A=
	void TurnZBufferOff();=0A=
	void TurnOnAlphaBlending();=0A=
	void TurnOffAlphaBlending();=0A=
	void TurnOnCulling();=0A=
	void TurnOffCulling();=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
is the new=20
function for enabling the additive blending that the clouds will =
require.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	void =
EnableSecondBlendState();</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
=0A=
private:=0A=
	bool m_vsync_enabled;=0A=
	int m_videoCardMemory;=0A=
	char m_videoCardDescription[128];=0A=
	IDXGISwapChain* m_swapChain;=0A=
	ID3D11Device* m_device;=0A=
	ID3D11DeviceContext* m_deviceContext;=0A=
	ID3D11RenderTargetView* m_renderTargetView;=0A=
	ID3D11Texture2D* m_depthStencilBuffer;=0A=
	ID3D11DepthStencilState* m_depthStencilState;=0A=
	ID3D11DepthStencilView* m_depthStencilView;=0A=
	ID3D11RasterizerState* m_rasterState;=0A=
	ID3D11RasterizerState* m_rasterStateNoCulling;=0A=
	D3DXMATRIX m_projectionMatrix;=0A=
	D3DXMATRIX m_worldMatrix;=0A=
	D3DXMATRIX m_orthoMatrix;=0A=
	ID3D11DepthStencilState* m_depthDisabledStencilState;=0A=
	ID3D11BlendState* m_alphaEnableBlendingState;=0A=
	ID3D11BlendState* m_alphaDisableBlendingState;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
is the new=20
blend state pointer. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
ID3D11BlendState* m_alphaBlendState2;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>D3dclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: d3dclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "d3dclass.h"=0A=
=0A=
=0A=
D3DClass::D3DClass()=0A=
{=0A=
	m_swapChain =3D 0;=0A=
	m_device =3D 0;=0A=
	m_deviceContext =3D 0;=0A=
	m_renderTargetView =3D 0;=0A=
	m_depthStencilBuffer =3D 0;=0A=
	m_depthStencilState =3D 0;=0A=
	m_depthStencilView =3D 0;=0A=
	m_rasterState =3D 0;=0A=
	m_rasterStateNoCulling =3D 0;=0A=
	m_depthDisabledStencilState =3D 0;=0A=
	m_alphaEnableBlendingState =3D 0;=0A=
	m_alphaDisableBlendingState =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the new=20
blend state pointer to null in the class constructor. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
m_alphaBlendState2 =3D 0;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
}=0A=
=0A=
=0A=
D3DClass::D3DClass(const D3DClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
D3DClass::~D3DClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool D3DClass::Initialize(int screenWidth, int screenHeight, bool vsync, =
HWND hwnd, bool fullscreen, float screenDepth, float screenNear)=0A=
{=0A=
	HRESULT result;=0A=
	IDXGIFactory* factory;=0A=
	IDXGIAdapter* adapter;=0A=
	IDXGIOutput* adapterOutput;=0A=
	unsigned int numModes, i, numerator, denominator, stringLength;=0A=
	DXGI_MODE_DESC* displayModeList;=0A=
	DXGI_ADAPTER_DESC adapterDesc;=0A=
	int error;=0A=
	DXGI_SWAP_CHAIN_DESC swapChainDesc;=0A=
	D3D_FEATURE_LEVEL featureLevel;=0A=
	ID3D11Texture2D* backBufferPtr;=0A=
	D3D11_TEXTURE2D_DESC depthBufferDesc;=0A=
	D3D11_DEPTH_STENCIL_DESC depthStencilDesc;=0A=
	D3D11_DEPTH_STENCIL_VIEW_DESC depthStencilViewDesc;=0A=
	D3D11_RASTERIZER_DESC rasterDesc;=0A=
	D3D11_VIEWPORT viewport;=0A=
	float fieldOfView, screenAspect;=0A=
	D3D11_DEPTH_STENCIL_DESC depthDisabledStencilDesc;=0A=
	D3D11_BLEND_DESC blendStateDescription;=0A=
=0A=
=0A=
	// Store the vsync setting.=0A=
	m_vsync_enabled =3D vsync;=0A=
=0A=
	// Create a DirectX graphics interface factory.=0A=
	result =3D CreateDXGIFactory(__uuidof(IDXGIFactory), =
(void**)&amp;factory);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Use the factory to create an adapter for the primary graphics =
interface (video card).=0A=
	result =3D factory-&gt;EnumAdapters(0, &amp;adapter);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Enumerate the primary adapter output (monitor).=0A=
	result =3D adapter-&gt;EnumOutputs(0, &amp;adapterOutput);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get the number of modes that fit the DXGI_FORMAT_R8G8B8A8_UNORM =
display format for the adapter output (monitor).=0A=
	result =3D =
adapterOutput-&gt;GetDisplayModeList(DXGI_FORMAT_R8G8B8A8_UNORM, =
DXGI_ENUM_MODES_INTERLACED, &amp;numModes, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create a list to hold all the possible display modes for this =
monitor/video card combination.=0A=
	displayModeList =3D new DXGI_MODE_DESC[numModes];=0A=
	if(!displayModeList)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Now fill the display mode list structures.=0A=
	result =3D =
adapterOutput-&gt;GetDisplayModeList(DXGI_FORMAT_R8G8B8A8_UNORM, =
DXGI_ENUM_MODES_INTERLACED, &amp;numModes, displayModeList);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Now go through all the display modes and find the one that matches =
the screen width and height.=0A=
	// When a match is found store the numerator and denominator of the =
refresh rate for that monitor.=0A=
	for(i=3D0; i&lt;numModes; i++)=0A=
	{=0A=
		if(displayModeList[i].Width =3D=3D (unsigned int)screenWidth)=0A=
		{=0A=
			if(displayModeList[i].Height =3D=3D (unsigned int)screenHeight)=0A=
			{=0A=
				numerator =3D displayModeList[i].RefreshRate.Numerator;=0A=
				denominator =3D displayModeList[i].RefreshRate.Denominator;=0A=
			}=0A=
		}=0A=
	}=0A=
=0A=
	// Get the adapter (video card) description.=0A=
	result =3D adapter-&gt;GetDesc(&amp;adapterDesc);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Store the dedicated video card memory in megabytes.=0A=
	m_videoCardMemory =3D (int)(adapterDesc.DedicatedVideoMemory / 1024 / =
1024);=0A=
=0A=
	// Convert the name of the video card to a character array and store it.=0A=
	error =3D wcstombs_s(&amp;stringLength, m_videoCardDescription, 128, =
adapterDesc.Description, 128);=0A=
	if(error !=3D 0)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Release the display mode list.=0A=
	delete [] displayModeList;=0A=
	displayModeList =3D 0;=0A=
=0A=
	// Release the adapter output.=0A=
	adapterOutput-&gt;Release();=0A=
	adapterOutput =3D 0;=0A=
=0A=
	// Release the adapter.=0A=
	adapter-&gt;Release();=0A=
	adapter =3D 0;=0A=
=0A=
	// Release the factory.=0A=
	factory-&gt;Release();=0A=
	factory =3D 0;=0A=
=0A=
	// Initialize the swap chain description.=0A=
	ZeroMemory(&amp;swapChainDesc, sizeof(swapChainDesc));=0A=
=0A=
	// Set to a single back buffer.=0A=
	swapChainDesc.BufferCount =3D 1;=0A=
=0A=
	// Set the width and height of the back buffer.=0A=
	swapChainDesc.BufferDesc.Width =3D screenWidth;=0A=
	swapChainDesc.BufferDesc.Height =3D screenHeight;=0A=
=0A=
	// Set regular 32-bit surface for the back buffer.=0A=
	swapChainDesc.BufferDesc.Format =3D DXGI_FORMAT_R8G8B8A8_UNORM;=0A=
=0A=
	// Set the refresh rate of the back buffer.=0A=
	if(m_vsync_enabled)=0A=
	{=0A=
		swapChainDesc.BufferDesc.RefreshRate.Numerator =3D numerator;=0A=
		swapChainDesc.BufferDesc.RefreshRate.Denominator =3D denominator;=0A=
	}=0A=
	else=0A=
	{=0A=
		swapChainDesc.BufferDesc.RefreshRate.Numerator =3D 0;=0A=
		swapChainDesc.BufferDesc.RefreshRate.Denominator =3D 1;=0A=
	}=0A=
=0A=
	// Set the usage of the back buffer.=0A=
	swapChainDesc.BufferUsage =3D DXGI_USAGE_RENDER_TARGET_OUTPUT;=0A=
=0A=
	// Set the handle for the window to render to.=0A=
	swapChainDesc.OutputWindow =3D hwnd;=0A=
=0A=
	// Turn multisampling off.=0A=
	swapChainDesc.SampleDesc.Count =3D 1;=0A=
	swapChainDesc.SampleDesc.Quality =3D 0;=0A=
=0A=
	// Set to full screen or windowed mode.=0A=
	if(fullscreen)=0A=
	{=0A=
		swapChainDesc.Windowed =3D false;=0A=
	}=0A=
	else=0A=
	{=0A=
		swapChainDesc.Windowed =3D true;=0A=
	}=0A=
=0A=
	// Set the scan line ordering and scaling to unspecified.=0A=
	swapChainDesc.BufferDesc.ScanlineOrdering =3D =
DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED;=0A=
	swapChainDesc.BufferDesc.Scaling =3D DXGI_MODE_SCALING_UNSPECIFIED;=0A=
=0A=
	// Discard the back buffer contents after presenting.=0A=
	swapChainDesc.SwapEffect =3D DXGI_SWAP_EFFECT_DISCARD;=0A=
=0A=
	// Don't set the advanced flags.=0A=
	swapChainDesc.Flags =3D 0;=0A=
=0A=
	// Set the feature level to DirectX 11.=0A=
	featureLevel =3D D3D_FEATURE_LEVEL_11_0;=0A=
=0A=
	// Create the swap chain, Direct3D device, and Direct3D device context.=0A=
	result =3D D3D11CreateDeviceAndSwapChain(NULL, =
D3D_DRIVER_TYPE_HARDWARE, NULL, 0, &amp;featureLevel, 1, =0A=
					       D3D11_SDK_VERSION, &amp;swapChainDesc, &amp;m_swapChain, =
&amp;m_device, NULL, &amp;m_deviceContext);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get the pointer to the back buffer.=0A=
	result =3D m_swapChain-&gt;GetBuffer(0, __uuidof(ID3D11Texture2D), =
(LPVOID*)&amp;backBufferPtr);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the render target view with the back buffer pointer.=0A=
	result =3D m_device-&gt;CreateRenderTargetView(backBufferPtr, NULL, =
&amp;m_renderTargetView);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Release pointer to the back buffer as we no longer need it.=0A=
	backBufferPtr-&gt;Release();=0A=
	backBufferPtr =3D 0;=0A=
=0A=
	// Initialize the description of the depth buffer.=0A=
	ZeroMemory(&amp;depthBufferDesc, sizeof(depthBufferDesc));=0A=
=0A=
	// Set up the description of the depth buffer.=0A=
	depthBufferDesc.Width =3D screenWidth;=0A=
	depthBufferDesc.Height =3D screenHeight;=0A=
	depthBufferDesc.MipLevels =3D 1;=0A=
	depthBufferDesc.ArraySize =3D 1;=0A=
	depthBufferDesc.Format =3D DXGI_FORMAT_D24_UNORM_S8_UINT;=0A=
	depthBufferDesc.SampleDesc.Count =3D 1;=0A=
	depthBufferDesc.SampleDesc.Quality =3D 0;=0A=
	depthBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
	depthBufferDesc.BindFlags =3D D3D11_BIND_DEPTH_STENCIL;=0A=
	depthBufferDesc.CPUAccessFlags =3D 0;=0A=
	depthBufferDesc.MiscFlags =3D 0;=0A=
=0A=
	// Create the texture for the depth buffer using the filled out =
description.=0A=
	result =3D m_device-&gt;CreateTexture2D(&amp;depthBufferDesc, NULL, =
&amp;m_depthStencilBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the description of the stencil state.=0A=
	ZeroMemory(&amp;depthStencilDesc, sizeof(depthStencilDesc));=0A=
=0A=
	// Set up the description of the stencil state.=0A=
	depthStencilDesc.DepthEnable =3D true;=0A=
	depthStencilDesc.DepthWriteMask =3D D3D11_DEPTH_WRITE_MASK_ALL;=0A=
	depthStencilDesc.DepthFunc =3D D3D11_COMPARISON_LESS;=0A=
=0A=
	depthStencilDesc.StencilEnable =3D true;=0A=
	depthStencilDesc.StencilReadMask =3D 0xFF;=0A=
	depthStencilDesc.StencilWriteMask =3D 0xFF;=0A=
=0A=
	// Stencil operations if pixel is front-facing.=0A=
	depthStencilDesc.FrontFace.StencilFailOp =3D D3D11_STENCIL_OP_KEEP;=0A=
	depthStencilDesc.FrontFace.StencilDepthFailOp =3D D3D11_STENCIL_OP_INCR;=0A=
	depthStencilDesc.FrontFace.StencilPassOp =3D D3D11_STENCIL_OP_KEEP;=0A=
	depthStencilDesc.FrontFace.StencilFunc =3D D3D11_COMPARISON_ALWAYS;=0A=
=0A=
	// Stencil operations if pixel is back-facing.=0A=
	depthStencilDesc.BackFace.StencilFailOp =3D D3D11_STENCIL_OP_KEEP;=0A=
	depthStencilDesc.BackFace.StencilDepthFailOp =3D D3D11_STENCIL_OP_DECR;=0A=
	depthStencilDesc.BackFace.StencilPassOp =3D D3D11_STENCIL_OP_KEEP;=0A=
	depthStencilDesc.BackFace.StencilFunc =3D D3D11_COMPARISON_ALWAYS;=0A=
=0A=
	// Create the depth stencil state.=0A=
	result =3D m_device-&gt;CreateDepthStencilState(&amp;depthStencilDesc, =
&amp;m_depthStencilState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Set the depth stencil state.=0A=
	m_deviceContext-&gt;OMSetDepthStencilState(m_depthStencilState, 1);=0A=
=0A=
	// Initialize the depth stencil view.=0A=
	ZeroMemory(&amp;depthStencilViewDesc, sizeof(depthStencilViewDesc));=0A=
=0A=
	// Set up the depth stencil view description.=0A=
	depthStencilViewDesc.Format =3D DXGI_FORMAT_D24_UNORM_S8_UINT;=0A=
	depthStencilViewDesc.ViewDimension =3D D3D11_DSV_DIMENSION_TEXTURE2D;=0A=
	depthStencilViewDesc.Texture2D.MipSlice =3D 0;=0A=
=0A=
	// Create the depth stencil view.=0A=
	result =3D m_device-&gt;CreateDepthStencilView(m_depthStencilBuffer, =
&amp;depthStencilViewDesc, &amp;m_depthStencilView);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Bind the render target view and depth stencil buffer to the output =
render pipeline.=0A=
	m_deviceContext-&gt;OMSetRenderTargets(1, &amp;m_renderTargetView, =
m_depthStencilView);=0A=
=0A=
	// Setup the raster description which will determine how and what =
polygons will be drawn.=0A=
	rasterDesc.AntialiasedLineEnable =3D false;=0A=
	rasterDesc.CullMode =3D D3D11_CULL_BACK;=0A=
	rasterDesc.DepthBias =3D 0;=0A=
	rasterDesc.DepthBiasClamp =3D 0.0f;=0A=
	rasterDesc.DepthClipEnable =3D true;=0A=
	rasterDesc.FillMode =3D D3D11_FILL_SOLID;=0A=
	rasterDesc.FrontCounterClockwise =3D false;=0A=
	rasterDesc.MultisampleEnable =3D false;=0A=
	rasterDesc.ScissorEnable =3D false;=0A=
	rasterDesc.SlopeScaledDepthBias =3D 0.0f;=0A=
=0A=
	// Create the rasterizer state from the description we just filled out.=0A=
	result =3D m_device-&gt;CreateRasterizerState(&amp;rasterDesc, =
&amp;m_rasterState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Now set the rasterizer state.=0A=
	m_deviceContext-&gt;RSSetState(m_rasterState);=0A=
	=0A=
	// Setup a raster description which turns off back face culling.=0A=
	rasterDesc.AntialiasedLineEnable =3D false;=0A=
	rasterDesc.CullMode =3D D3D11_CULL_NONE;=0A=
	rasterDesc.DepthBias =3D 0;=0A=
	rasterDesc.DepthBiasClamp =3D 0.0f;=0A=
	rasterDesc.DepthClipEnable =3D true;=0A=
	rasterDesc.FillMode =3D D3D11_FILL_SOLID;=0A=
	rasterDesc.FrontCounterClockwise =3D false;=0A=
	rasterDesc.MultisampleEnable =3D false;=0A=
	rasterDesc.ScissorEnable =3D false;=0A=
	rasterDesc.SlopeScaledDepthBias =3D 0.0f;=0A=
=0A=
	// Create the no culling rasterizer state.=0A=
	result =3D m_device-&gt;CreateRasterizerState(&amp;rasterDesc, =
&amp;m_rasterStateNoCulling);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Setup the viewport for rendering.=0A=
	viewport.Width =3D (float)screenWidth;=0A=
	viewport.Height =3D (float)screenHeight;=0A=
	viewport.MinDepth =3D 0.0f;=0A=
	viewport.MaxDepth =3D 1.0f;=0A=
	viewport.TopLeftX =3D 0.0f;=0A=
	viewport.TopLeftY =3D 0.0f;=0A=
=0A=
	// Create the viewport.=0A=
	m_deviceContext-&gt;RSSetViewports(1, &amp;viewport);=0A=
=0A=
	// Setup the projection matrix.=0A=
	fieldOfView =3D (float)D3DX_PI / 4.0f;=0A=
	screenAspect =3D (float)screenWidth / (float)screenHeight;=0A=
=0A=
	// Create the projection matrix for 3D rendering.=0A=
	D3DXMatrixPerspectiveFovLH(&amp;m_projectionMatrix, fieldOfView, =
screenAspect, screenNear, screenDepth);=0A=
=0A=
	// Initialize the world matrix to the identity matrix.=0A=
	D3DXMatrixIdentity(&amp;m_worldMatrix);=0A=
=0A=
	// Create an orthographic projection matrix for 2D rendering.=0A=
	D3DXMatrixOrthoLH(&amp;m_orthoMatrix, (float)screenWidth, =
(float)screenHeight, screenNear, screenDepth);=0A=
=0A=
	// Clear the second depth stencil state before setting the parameters.=0A=
	ZeroMemory(&amp;depthDisabledStencilDesc, =
sizeof(depthDisabledStencilDesc));=0A=
=0A=
	// Now create a second depth stencil state which turns off the Z buffer =
for 2D rendering.  The only difference is =0A=
	// that DepthEnable is set to false, all other parameters are the same =
as the other depth stencil state.=0A=
	depthDisabledStencilDesc.DepthEnable =3D false;=0A=
	depthDisabledStencilDesc.DepthWriteMask =3D D3D11_DEPTH_WRITE_MASK_ALL;=0A=
	depthDisabledStencilDesc.DepthFunc =3D D3D11_COMPARISON_LESS;=0A=
	depthDisabledStencilDesc.StencilEnable =3D true;=0A=
	depthDisabledStencilDesc.StencilReadMask =3D 0xFF;=0A=
	depthDisabledStencilDesc.StencilWriteMask =3D 0xFF;=0A=
	depthDisabledStencilDesc.FrontFace.StencilFailOp =3D =
D3D11_STENCIL_OP_KEEP;=0A=
	depthDisabledStencilDesc.FrontFace.StencilDepthFailOp =3D =
D3D11_STENCIL_OP_INCR;=0A=
	depthDisabledStencilDesc.FrontFace.StencilPassOp =3D =
D3D11_STENCIL_OP_KEEP;=0A=
	depthDisabledStencilDesc.FrontFace.StencilFunc =3D =
D3D11_COMPARISON_ALWAYS;=0A=
	depthDisabledStencilDesc.BackFace.StencilFailOp =3D =
D3D11_STENCIL_OP_KEEP;=0A=
	depthDisabledStencilDesc.BackFace.StencilDepthFailOp =3D =
D3D11_STENCIL_OP_DECR;=0A=
	depthDisabledStencilDesc.BackFace.StencilPassOp =3D =
D3D11_STENCIL_OP_KEEP;=0A=
	depthDisabledStencilDesc.BackFace.StencilFunc =3D =
D3D11_COMPARISON_ALWAYS;=0A=
=0A=
	// Create the state using the device.=0A=
	result =3D =
m_device-&gt;CreateDepthStencilState(&amp;depthDisabledStencilDesc, =
&amp;m_depthDisabledStencilState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Clear the blend state description.=0A=
	ZeroMemory(&amp;blendStateDescription, sizeof(D3D11_BLEND_DESC));=0A=
=0A=
	// Create an alpha enabled blend state description.=0A=
	blendStateDescription.RenderTarget[0].BlendEnable =3D TRUE;=0A=
	blendStateDescription.RenderTarget[0].SrcBlend =3D D3D11_BLEND_ONE;=0A=
	blendStateDescription.RenderTarget[0].DestBlend =3D =
D3D11_BLEND_INV_SRC_ALPHA;=0A=
	blendStateDescription.RenderTarget[0].BlendOp =3D D3D11_BLEND_OP_ADD;=0A=
	blendStateDescription.RenderTarget[0].SrcBlendAlpha =3D D3D11_BLEND_ONE;=0A=
	blendStateDescription.RenderTarget[0].DestBlendAlpha =3D =
D3D11_BLEND_ZERO;=0A=
	blendStateDescription.RenderTarget[0].BlendOpAlpha =3D =
D3D11_BLEND_OP_ADD;=0A=
	blendStateDescription.RenderTarget[0].RenderTargetWriteMask =3D 0x0f;=0A=
=0A=
	// Create the blend state using the description.=0A=
	result =3D m_device-&gt;CreateBlendState(&amp;blendStateDescription, =
&amp;m_alphaEnableBlendingState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Modify the description to create an alpha disabled blend state =
description.=0A=
	blendStateDescription.RenderTarget[0].BlendEnable =3D FALSE;=0A=
=0A=
	// Create the second blend state using the description.=0A=
	result =3D m_device-&gt;CreateBlendState(&amp;blendStateDescription, =
&amp;m_alphaDisableBlendingState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Here =
we setup the=20
description of the additive blend state and then create it. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create a =
secondary alpha blend state description.=0A=
	blendStateDescription.RenderTarget[0].BlendEnable =3D TRUE;=0A=
	blendStateDescription.RenderTarget[0].SrcBlend =3D D3D11_BLEND_ONE;=0A=
	blendStateDescription.RenderTarget[0].DestBlend =3D D3D11_BLEND_ONE;=0A=
	blendStateDescription.RenderTarget[0].BlendOp =3D D3D11_BLEND_OP_ADD;=0A=
	blendStateDescription.RenderTarget[0].SrcBlendAlpha =3D D3D11_BLEND_ONE;=0A=
	blendStateDescription.RenderTarget[0].DestBlendAlpha =3D =
D3D11_BLEND_ZERO;=0A=
	blendStateDescription.RenderTarget[0].BlendOpAlpha =3D =
D3D11_BLEND_OP_ADD;=0A=
	blendStateDescription.RenderTarget[0].RenderTargetWriteMask =3D 0x0f;=0A=
=0A=
	// Create the blend state using the description.=0A=
	result =3D m_device-&gt;CreateBlendState(&amp;blendStateDescription, =
&amp;m_alphaBlendState2);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void D3DClass::Shutdown()=0A=
{=0A=
	// Before shutting down set to windowed mode or when you release the =
swap chain it will throw an exception.=0A=
	if(m_swapChain)=0A=
	{=0A=
		m_swapChain-&gt;SetFullscreenState(false, NULL);=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Release the new=20
blend state in the Shutdown function. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
if(m_alphaBlendState2)=0A=
	{=0A=
		m_alphaBlendState2-&gt;Release();=0A=
		m_alphaBlendState2 =3D 0;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	if(m_alphaEnableBlendingState)=0A=
	{=0A=
		m_alphaEnableBlendingState-&gt;Release();=0A=
		m_alphaEnableBlendingState =3D 0;=0A=
	}=0A=
=0A=
	if(m_alphaDisableBlendingState)=0A=
	{=0A=
		m_alphaDisableBlendingState-&gt;Release();=0A=
		m_alphaDisableBlendingState =3D 0;=0A=
	}=0A=
=0A=
	if(m_depthDisabledStencilState)=0A=
	{=0A=
		m_depthDisabledStencilState-&gt;Release();=0A=
		m_depthDisabledStencilState =3D 0;=0A=
	}=0A=
=0A=
	if(m_rasterStateNoCulling)=0A=
	{=0A=
		m_rasterStateNoCulling-&gt;Release();=0A=
		m_rasterStateNoCulling =3D 0;=0A=
	}=0A=
=0A=
	if(m_rasterState)=0A=
	{=0A=
		m_rasterState-&gt;Release();=0A=
		m_rasterState =3D 0;=0A=
	}=0A=
=0A=
	if(m_depthStencilView)=0A=
	{=0A=
		m_depthStencilView-&gt;Release();=0A=
		m_depthStencilView =3D 0;=0A=
	}=0A=
=0A=
	if(m_depthStencilState)=0A=
	{=0A=
		m_depthStencilState-&gt;Release();=0A=
		m_depthStencilState =3D 0;=0A=
	}=0A=
=0A=
	if(m_depthStencilBuffer)=0A=
	{=0A=
		m_depthStencilBuffer-&gt;Release();=0A=
		m_depthStencilBuffer =3D 0;=0A=
	}=0A=
=0A=
	if(m_renderTargetView)=0A=
	{=0A=
		m_renderTargetView-&gt;Release();=0A=
		m_renderTargetView =3D 0;=0A=
	}=0A=
=0A=
	if(m_deviceContext)=0A=
	{=0A=
		m_deviceContext-&gt;Release();=0A=
		m_deviceContext =3D 0;=0A=
	}=0A=
=0A=
	if(m_device)=0A=
	{=0A=
		m_device-&gt;Release();=0A=
		m_device =3D 0;=0A=
	}=0A=
=0A=
	if(m_swapChain)=0A=
	{=0A=
		m_swapChain-&gt;Release();=0A=
		m_swapChain =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::BeginScene(float red, float green, float blue, float =
alpha)=0A=
{=0A=
	float color[4];=0A=
=0A=
=0A=
	// Setup the color to clear the buffer to.=0A=
	color[0] =3D red;=0A=
	color[1] =3D green;=0A=
	color[2] =3D blue;=0A=
	color[3] =3D alpha;=0A=
=0A=
	// Clear the back buffer.=0A=
	m_deviceContext-&gt;ClearRenderTargetView(m_renderTargetView, color);=0A=
    =0A=
	// Clear the depth buffer.=0A=
	m_deviceContext-&gt;ClearDepthStencilView(m_depthStencilView, =
D3D11_CLEAR_DEPTH, 1.0f, 0);=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::EndScene()=0A=
{=0A=
	// Present the back buffer to the screen since rendering is complete.=0A=
	if(m_vsync_enabled)=0A=
	{=0A=
		// Lock to screen refresh rate.=0A=
		m_swapChain-&gt;Present(1, 0);=0A=
	}=0A=
	else=0A=
	{=0A=
		// Present as fast as possible.=0A=
		m_swapChain-&gt;Present(0, 0);=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
ID3D11Device* D3DClass::GetDevice()=0A=
{=0A=
	return m_device;=0A=
}=0A=
=0A=
=0A=
ID3D11DeviceContext* D3DClass::GetDeviceContext()=0A=
{=0A=
	return m_deviceContext;=0A=
}=0A=
=0A=
=0A=
void D3DClass::GetProjectionMatrix(D3DXMATRIX&amp; projectionMatrix)=0A=
{=0A=
	projectionMatrix =3D m_projectionMatrix;=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::GetWorldMatrix(D3DXMATRIX&amp; worldMatrix)=0A=
{=0A=
	worldMatrix =3D m_worldMatrix;=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::GetOrthoMatrix(D3DXMATRIX&amp; orthoMatrix)=0A=
{=0A=
	orthoMatrix =3D m_orthoMatrix;=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::GetVideoCardInfo(char* cardName, int&amp; memory)=0A=
{=0A=
	strcpy_s(cardName, 128, m_videoCardDescription);=0A=
	memory =3D m_videoCardMemory;=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::TurnZBufferOn()=0A=
{=0A=
	m_deviceContext-&gt;OMSetDepthStencilState(m_depthStencilState, 1);=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::TurnZBufferOff()=0A=
{=0A=
	m_deviceContext-&gt;OMSetDepthStencilState(m_depthDisabledStencilState, =
1);=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::TurnOnAlphaBlending()=0A=
{=0A=
	float blendFactor[4];=0A=
	=0A=
=0A=
	// Setup the blend factor.=0A=
	blendFactor[0] =3D 0.0f;=0A=
	blendFactor[1] =3D 0.0f;=0A=
	blendFactor[2] =3D 0.0f;=0A=
	blendFactor[3] =3D 0.0f;=0A=
	=0A=
	// Turn on the alpha blending.=0A=
	m_deviceContext-&gt;OMSetBlendState(m_alphaEnableBlendingState, =
blendFactor, 0xffffffff);=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::TurnOffAlphaBlending()=0A=
{=0A=
	float blendFactor[4];=0A=
	=0A=
=0A=
	// Setup the blend factor.=0A=
	blendFactor[0] =3D 0.0f;=0A=
	blendFactor[1] =3D 0.0f;=0A=
	blendFactor[2] =3D 0.0f;=0A=
	blendFactor[3] =3D 0.0f;=0A=
	=0A=
	// Turn off the alpha blending.=0A=
	m_deviceContext-&gt;OMSetBlendState(m_alphaDisableBlendingState, =
blendFactor, 0xffffffff);=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::TurnOnCulling()=0A=
{=0A=
	// Set the culling rasterizer state.=0A=
	m_deviceContext-&gt;RSSetState(m_rasterState);=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void D3DClass::TurnOffCulling()=0A=
{=0A=
	// Set the no back face culling rasterizer state.=0A=
	m_deviceContext-&gt;RSSetState(m_rasterStateNoCulling);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
is the new=20
function for enabling the additive blend state. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">void =
D3DClass::EnableSecondBlendState()=0A=
{=0A=
	float blendFactor[4];=0A=
	=0A=
=0A=
	// Setup the blend factor.=0A=
	blendFactor[0] =3D 0.0f;=0A=
	blendFactor[1] =3D 0.0f;=0A=
	blendFactor[2] =3D 0.0f;=0A=
	blendFactor[3] =3D 0.0f;=0A=
	=0A=
	// Turn on the alpha blending.=0A=
	m_deviceContext-&gt;OMSetBlendState(m_alphaBlendState2, blendFactor, =
0xffffffff);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Applicationclass.h</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: applicationclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _APPLICATIONCLASS_H_=0A=
#define _APPLICATIONCLASS_H_=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
const bool FULL_SCREEN =3D true;=0A=
const bool VSYNC_ENABLED =3D true;=0A=
const float SCREEN_DEPTH =3D 1000.0f;=0A=
const float SCREEN_NEAR =3D 0.1f;=0A=
=0A=
=0A=
///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "inputclass.h"=0A=
#include "d3dclass.h"=0A=
#include "cameraclass.h"=0A=
#include "terrainclass.h"=0A=
#include "timerclass.h"=0A=
#include "positionclass.h"=0A=
#include "fpsclass.h"=0A=
#include "cpuclass.h"=0A=
#include "fontshaderclass.h"=0A=
#include "textclass.h"=0A=
#include "terrainshaderclass.h"=0A=
#include "lightclass.h"=0A=
#include "skydomeclass.h"=0A=
#include "skydomeshaderclass.h"=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
new=20
SkyPlaneClass and SkyPlaneShaderClass headers are included here in the=20
ApplicationClass. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">#include =
"skyplaneclass.h"=0A=
#include "skyplaneshaderclass.h"</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: ApplicationClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class ApplicationClass=0A=
{=0A=
public:=0A=
	ApplicationClass();=0A=
	ApplicationClass(const ApplicationClass&amp;);=0A=
	~ApplicationClass();=0A=
=0A=
	bool Initialize(HINSTANCE, HWND, int, int);=0A=
	void Shutdown();=0A=
	bool Frame();=0A=
=0A=
private:=0A=
	bool HandleInput(float);=0A=
	bool RenderGraphics();=0A=
=0A=
private:=0A=
	InputClass* m_Input;=0A=
	D3DClass* m_Direct3D;=0A=
	CameraClass* m_Camera;=0A=
	TerrainClass* m_Terrain;=0A=
	TimerClass* m_Timer;=0A=
	PositionClass* m_Position;=0A=
	FpsClass* m_Fps;=0A=
	CpuClass* m_Cpu;=0A=
	FontShaderClass* m_FontShader;=0A=
	TextClass* m_Text;=0A=
	TerrainShaderClass* m_TerrainShader;=0A=
	LightClass* m_Light;=0A=
	SkyDomeClass* m_SkyDome;=0A=
	SkyDomeShaderClass* m_SkyDomeShader;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
pointers to the=20
SkyPlaneClass and SkyPlaneShaderClass are added here. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	SkyPlaneClass =
*m_SkyPlane;=0A=
	SkyPlaneShaderClass* m_SkyPlaneShader;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Applicationclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: applicationclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "applicationclass.h"=0A=
=0A=
=0A=
ApplicationClass::ApplicationClass()=0A=
{=0A=
	m_Input =3D 0;=0A=
	m_Direct3D =3D 0;=0A=
	m_Camera =3D 0;=0A=
	m_Terrain =3D 0;=0A=
	m_Timer =3D 0;=0A=
	m_Position =3D 0;=0A=
	m_Fps =3D 0;=0A=
	m_Cpu =3D 0;=0A=
	m_FontShader =3D 0;=0A=
	m_Text =3D 0;=0A=
	m_TerrainShader =3D 0;=0A=
	m_Light =3D 0;=0A=
	m_SkyDome =3D 0;=0A=
	m_SkyDomeShader =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
pointers to the=20
SkyPlaneClass and SkyPlaneShaderClass are initialized to null in the =
class=20
constructor. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	m_SkyPlane =3D 0;=0A=
	m_SkyPlaneShader =3D 0;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
}=0A=
=0A=
=0A=
ApplicationClass::ApplicationClass(const ApplicationClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
ApplicationClass::~ApplicationClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::Initialize(HINSTANCE hinstance, HWND hwnd, int =
screenWidth, int screenHeight)=0A=
{=0A=
	bool result;=0A=
	float cameraX, cameraY, cameraZ;=0A=
	D3DXMATRIX baseViewMatrix;=0A=
	char videoCard[128];=0A=
	int videoMemory;=0A=
=0A=
	=0A=
	// Create the input object.  The input object will be used to handle =
reading the keyboard and mouse input from the user.=0A=
	m_Input =3D new InputClass;=0A=
	if(!m_Input)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the input object.=0A=
	result =3D m_Input-&gt;Initialize(hinstance, hwnd, screenWidth, =
screenHeight);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the input object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the Direct3D object.=0A=
	m_Direct3D =3D new D3DClass;=0A=
	if(!m_Direct3D)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the Direct3D object.=0A=
	result =3D m_Direct3D-&gt;Initialize(screenWidth, screenHeight, =
VSYNC_ENABLED, hwnd, FULL_SCREEN, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize DirectX 11.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the camera object.=0A=
	m_Camera =3D new CameraClass;=0A=
	if(!m_Camera)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize a base view matrix with the camera for 2D user interface =
rendering.=0A=
	m_Camera-&gt;SetPosition(0.0f, 0.0f, -1.0f);=0A=
	m_Camera-&gt;Render();=0A=
	m_Camera-&gt;GetViewMatrix(baseViewMatrix);=0A=
=0A=
	// Set the initial position of the camera.=0A=
	cameraX =3D 50.0f;=0A=
	cameraY =3D 2.0f;=0A=
	cameraZ =3D -7.0f;=0A=
=0A=
	m_Camera-&gt;SetPosition(cameraX, cameraY, cameraZ);=0A=
=0A=
	// Create the terrain object.=0A=
	m_Terrain =3D new TerrainClass;=0A=
	if(!m_Terrain)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the terrain object.=0A=
	result =3D m_Terrain-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
"../Engine/data/heightmap01.bmp", L"../Engine/data/dirt01.dds", =
"../Engine/data/colorm01.bmp");=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the terrain object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the timer object.=0A=
	m_Timer =3D new TimerClass;=0A=
	if(!m_Timer)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the timer object.=0A=
	result =3D m_Timer-&gt;Initialize();=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the timer object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the position object.=0A=
	m_Position =3D new PositionClass;=0A=
	if(!m_Position)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Set the initial position of the viewer to the same as the initial =
camera position.=0A=
	m_Position-&gt;SetPosition(cameraX, cameraY, cameraZ);=0A=
=0A=
	// Create the fps object.=0A=
	m_Fps =3D new FpsClass;=0A=
	if(!m_Fps)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the fps object.=0A=
	m_Fps-&gt;Initialize();=0A=
=0A=
	// Create the cpu object.=0A=
	m_Cpu =3D new CpuClass;=0A=
	if(!m_Cpu)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the cpu object.=0A=
	m_Cpu-&gt;Initialize();=0A=
=0A=
	// Create the font shader object.=0A=
	m_FontShader =3D new FontShaderClass;=0A=
	if(!m_FontShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the font shader object.=0A=
	result =3D m_FontShader-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the font shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the text object.=0A=
	m_Text =3D new TextClass;=0A=
	if(!m_Text)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the text object.=0A=
	result =3D m_Text-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
m_Direct3D-&gt;GetDeviceContext(), hwnd, screenWidth, screenHeight, =
baseViewMatrix);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the text object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Retrieve the video card information.=0A=
	m_Direct3D-&gt;GetVideoCardInfo(videoCard, videoMemory);=0A=
=0A=
	// Set the video card information in the text object.=0A=
	result =3D m_Text-&gt;SetVideoCardInfo(videoCard, videoMemory, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not set video card info in the text object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the terrain shader object.=0A=
	m_TerrainShader =3D new TerrainShaderClass;=0A=
	if(!m_TerrainShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the terrain shader object.=0A=
	result =3D m_TerrainShader-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the terrain shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the light object.=0A=
	m_Light =3D new LightClass;=0A=
	if(!m_Light)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the light object.=0A=
	m_Light-&gt;SetAmbientColor(0.05f, 0.05f, 0.05f, 1.0f);=0A=
	m_Light-&gt;SetDiffuseColor(1.0f, 1.0f, 1.0f, 1.0f);=0A=
	m_Light-&gt;SetDirection(-0.5f, -1.0f, 0.0f);=0A=
=0A=
	// Create the sky dome object.=0A=
	m_SkyDome =3D new SkyDomeClass;=0A=
	if(!m_SkyDome)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the sky dome object.=0A=
	result =3D m_SkyDome-&gt;Initialize(m_Direct3D-&gt;GetDevice());=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the sky dome object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the sky dome shader object.=0A=
	m_SkyDomeShader =3D new SkyDomeShaderClass;=0A=
	if(!m_SkyDomeShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the sky dome shader object.=0A=
	result =3D m_SkyDomeShader-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the sky dome shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
new sky plane=20
and the sky plane shader are created and initialized here. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
sky plane object.=0A=
	m_SkyPlane =3D new SkyPlaneClass;=0A=
	if(!m_SkyPlane)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the sky plane object.=0A=
	result =3D m_SkyPlane-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
L"../Engine/data/cloud001.dds", L"../Engine/data/cloud002.dds");=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the sky plane object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the sky plane shader object.=0A=
	m_SkyPlaneShader =3D new SkyPlaneShaderClass;=0A=
	if(!m_SkyPlaneShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the sky plane shader object.=0A=
	result =3D m_SkyPlaneShader-&gt;Initialize(m_Direct3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the sky plane shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void ApplicationClass::Shutdown()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sky plane and=20
the sky plane shader are released here in the Shutdown function. =
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Release the =
sky plane shader object.=0A=
	if(m_SkyPlaneShader)=0A=
	{=0A=
		m_SkyPlaneShader-&gt;Shutdown();=0A=
		delete m_SkyPlaneShader;=0A=
		m_SkyPlaneShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the sky plane object.=0A=
	if(m_SkyPlane)=0A=
	{=0A=
		m_SkyPlane-&gt;Shutdown();=0A=
		delete m_SkyPlane;=0A=
		m_SkyPlane =3D 0;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	// Release the sky dome shader object.=0A=
	if(m_SkyDomeShader)=0A=
	{=0A=
		m_SkyDomeShader-&gt;Shutdown();=0A=
		delete m_SkyDomeShader;=0A=
		m_SkyDomeShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the sky dome object.=0A=
	if(m_SkyDome)=0A=
	{=0A=
		m_SkyDome-&gt;Shutdown();=0A=
		delete m_SkyDome;=0A=
		m_SkyDome =3D 0;=0A=
	}=0A=
=0A=
	// Release the light object.=0A=
	if(m_Light)=0A=
	{=0A=
		delete m_Light;=0A=
		m_Light =3D 0;=0A=
	}=0A=
=0A=
	// Release the terrain shader object.=0A=
	if(m_TerrainShader)=0A=
	{=0A=
		m_TerrainShader-&gt;Shutdown();=0A=
		delete m_TerrainShader;=0A=
		m_TerrainShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the text object.=0A=
	if(m_Text)=0A=
	{=0A=
		m_Text-&gt;Shutdown();=0A=
		delete m_Text;=0A=
		m_Text =3D 0;=0A=
	}=0A=
=0A=
	// Release the font shader object.=0A=
	if(m_FontShader)=0A=
	{=0A=
		m_FontShader-&gt;Shutdown();=0A=
		delete m_FontShader;=0A=
		m_FontShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the cpu object.=0A=
	if(m_Cpu)=0A=
	{=0A=
		m_Cpu-&gt;Shutdown();=0A=
		delete m_Cpu;=0A=
		m_Cpu =3D 0;=0A=
	}=0A=
=0A=
	// Release the fps object.=0A=
	if(m_Fps)=0A=
	{=0A=
		delete m_Fps;=0A=
		m_Fps =3D 0;=0A=
	}=0A=
=0A=
	// Release the position object.=0A=
	if(m_Position)=0A=
	{=0A=
		delete m_Position;=0A=
		m_Position =3D 0;=0A=
	}=0A=
=0A=
	// Release the timer object.=0A=
	if(m_Timer)=0A=
	{=0A=
		delete m_Timer;=0A=
		m_Timer =3D 0;=0A=
	}=0A=
=0A=
	// Release the terrain object.=0A=
	if(m_Terrain)=0A=
	{=0A=
		m_Terrain-&gt;Shutdown();=0A=
		delete m_Terrain;=0A=
		m_Terrain =3D 0;=0A=
	}=0A=
=0A=
	// Release the camera object.=0A=
	if(m_Camera)=0A=
	{=0A=
		delete m_Camera;=0A=
		m_Camera =3D 0;=0A=
	}=0A=
=0A=
	// Release the Direct3D object.=0A=
	if(m_Direct3D)=0A=
	{=0A=
		m_Direct3D-&gt;Shutdown();=0A=
		delete m_Direct3D;=0A=
		m_Direct3D =3D 0;=0A=
	}=0A=
=0A=
	// Release the input object.=0A=
	if(m_Input)=0A=
	{=0A=
		m_Input-&gt;Shutdown();=0A=
		delete m_Input;=0A=
		m_Input =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::Frame()=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Read the user input.=0A=
	result =3D m_Input-&gt;Frame();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
	=0A=
	// Check if the user pressed escape and wants to exit the application.=0A=
	if(m_Input-&gt;IsEscapePressed() =3D=3D true)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Update the system stats.=0A=
	m_Timer-&gt;Frame();=0A=
	m_Fps-&gt;Frame();=0A=
	m_Cpu-&gt;Frame();=0A=
=0A=
	// Update the FPS value in the text object.=0A=
	result =3D m_Text-&gt;SetFps(m_Fps-&gt;GetFps(), =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
	=0A=
	// Update the CPU usage value in the text object.=0A=
	result =3D m_Text-&gt;SetCpu(m_Cpu-&gt;GetCpuPercentage(), =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Do the frame input processing.=0A=
	result =3D HandleInput(m_Timer-&gt;GetTime());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sky plane needs=20
to update the texture translation each frame. Note that if you are going =
to=20
unlock the vsync you should pass the frame time in here. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Do the sky =
plane frame processing.=0A=
	m_SkyPlane-&gt;Frame();</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
=0A=
	// Render the graphics.=0A=
	result =3D RenderGraphics();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return result;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::HandleInput(float frameTime)=0A=
{=0A=
	bool keyDown, result;=0A=
	float posX, posY, posZ, rotX, rotY, rotZ;=0A=
=0A=
=0A=
	// Set the frame time for calculating the updated position.=0A=
	m_Position-&gt;SetFrameTime(frameTime);=0A=
=0A=
	// Handle the input.=0A=
	keyDown =3D m_Input-&gt;IsLeftPressed();=0A=
	m_Position-&gt;TurnLeft(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsRightPressed();=0A=
	m_Position-&gt;TurnRight(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsUpPressed();=0A=
	m_Position-&gt;MoveForward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsDownPressed();=0A=
	m_Position-&gt;MoveBackward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsAPressed();=0A=
	m_Position-&gt;MoveUpward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsZPressed();=0A=
	m_Position-&gt;MoveDownward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsPgUpPressed();=0A=
	m_Position-&gt;LookUpward(keyDown);=0A=
=0A=
	keyDown =3D m_Input-&gt;IsPgDownPressed();=0A=
	m_Position-&gt;LookDownward(keyDown);=0A=
	=0A=
	// Get the view point position/rotation.=0A=
	m_Position-&gt;GetPosition(posX, posY, posZ);=0A=
	m_Position-&gt;GetRotation(rotX, rotY, rotZ);=0A=
=0A=
	// Set the position of the camera.=0A=
	m_Camera-&gt;SetPosition(posX, posY, posZ);=0A=
	m_Camera-&gt;SetRotation(rotX, rotY, rotZ);=0A=
=0A=
	// Update the position values in the text object.=0A=
	result =3D m_Text-&gt;SetCameraPosition(posX, posY, posZ, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Update the rotation values in the text object.=0A=
	result =3D m_Text-&gt;SetCameraRotation(rotX, rotY, rotZ, =
m_Direct3D-&gt;GetDeviceContext());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
bool ApplicationClass::RenderGraphics()=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, projectionMatrix, orthoMatrix;=0A=
	D3DXVECTOR3 cameraPosition;=0A=
	bool result;=0A=
=0A=
=0A=
	// Clear the scene.=0A=
	m_Direct3D-&gt;BeginScene(0.0f, 0.0f, 0.0f, 1.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world, view, projection, and ortho matrices from the camera =
and Direct3D objects.=0A=
	m_Direct3D-&gt;GetWorldMatrix(worldMatrix);=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_Direct3D-&gt;GetProjectionMatrix(projectionMatrix);=0A=
	m_Direct3D-&gt;GetOrthoMatrix(orthoMatrix);=0A=
=0A=
	// Get the position of the camera.=0A=
	cameraPosition =3D m_Camera-&gt;GetPosition();=0A=
=0A=
	// Translate the sky dome to be centered around the camera position.=0A=
	D3DXMatrixTranslation(&amp;worldMatrix, cameraPosition.x, =
cameraPosition.y, cameraPosition.z);=0A=
=0A=
	// Turn off back face culling.=0A=
	m_Direct3D-&gt;TurnOffCulling();=0A=
=0A=
	// Turn off the Z buffer.=0A=
	m_Direct3D-&gt;TurnZBufferOff();=0A=
=0A=
	// Render the sky dome using the sky dome shader.=0A=
	m_SkyDome-&gt;Render(m_Direct3D-&gt;GetDeviceContext());=0A=
	m_SkyDomeShader-&gt;Render(m_Direct3D-&gt;GetDeviceContext(), =
m_SkyDome-&gt;GetIndexCount(), worldMatrix, viewMatrix, =
projectionMatrix, =0A=
				m_SkyDome-&gt;GetApexColor(), m_SkyDome-&gt;GetCenterColor());=0A=
=0A=
	// Turn back face culling back on.=0A=
	m_Direct3D-&gt;TurnOnCulling();=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Turn =
on the additive=20
blending and then render the sky plane here. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Enable =
additive blending so the clouds blend with the sky dome color.=0A=
	m_Direct3D-&gt;EnableSecondBlendState();=0A=
=0A=
	// Render the sky plane using the sky plane shader.=0A=
	m_SkyPlane-&gt;Render(m_Direct3D-&gt;GetDeviceContext());=0A=
	m_SkyPlaneShader-&gt;Render(m_Direct3D-&gt;GetDeviceContext(), =
m_SkyPlane-&gt;GetIndexCount(), worldMatrix, viewMatrix, =
projectionMatrix, =0A=
				 m_SkyPlane-&gt;GetCloudTexture1(), =
m_SkyPlane-&gt;GetCloudTexture2(), m_SkyPlane-&gt;GetTranslation(0), =
m_SkyPlane-&gt;GetTranslation(1), =0A=
				 m_SkyPlane-&gt;GetTranslation(2), m_SkyPlane-&gt;GetTranslation(3), =
m_SkyPlane-&gt;GetBrightness());=0A=
=0A=
</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Turn off =
blending.=0A=
	m_Direct3D-&gt;TurnOffAlphaBlending();=0A=
=0A=
	// Turn the Z buffer back on.=0A=
	m_Direct3D-&gt;TurnZBufferOn();=0A=
=0A=
	// Reset the world matrix.=0A=
	m_Direct3D-&gt;GetWorldMatrix(worldMatrix);=0A=
	=0A=
	// Render the terrain using the terrain shader.=0A=
	m_Terrain-&gt;Render(m_Direct3D-&gt;GetDeviceContext());=0A=
	result =3D =
m_TerrainShader-&gt;Render(m_Direct3D-&gt;GetDeviceContext(), =
m_Terrain-&gt;GetIndexCount(), worldMatrix, viewMatrix, =
projectionMatrix, =0A=
					 m_Light-&gt;GetAmbientColor(), m_Light-&gt;GetDiffuseColor(), =
m_Light-&gt;GetDirection(), m_Terrain-&gt;GetTexture());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn off the Z buffer to begin all 2D rendering.=0A=
	m_Direct3D-&gt;TurnZBufferOff();=0A=
		=0A=
	// Turn on the alpha blending before rendering the text.=0A=
	m_Direct3D-&gt;TurnOnAlphaBlending();=0A=
=0A=
	// Render the text user interface elements.=0A=
	result =3D m_Text-&gt;Render(m_Direct3D-&gt;GetDeviceContext(), =
m_FontShader, worldMatrix, orthoMatrix);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn off alpha blending after rendering the text.=0A=
	m_Direct3D-&gt;TurnOffAlphaBlending();=0A=
=0A=
	// Turn the Z buffer back on now that all 2D rendering has completed.=0A=
	m_Direct3D-&gt;TurnZBufferOn();=0A=
=0A=
	// Present the rendered scene to the screen.=0A=
	m_Direct3D-&gt;EndScene();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Summary</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
now have a sky=20
plane with clouds rendered on it that blend with the color dome creating =
a=20
fairly realistic cloud effect. The two layers of clouds moving at =
different=20
speeds gives us the illusion of depth as well. </FONT></P>
<P align=3D"left"><IMG width=3D"500" height=3D"282" =
src=3D"http://web.archive.org/web/20140722210351im_/http://rastertek.com/=
pic0203.gif"=20
border=3D"0"></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>To Do=20
Exercises</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">1. =
Compile and run=20
the program.  You should see two layers of clouds moving.  Use PgUp to =
look up=20
at the sky. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">2. =
Play around with=20
the parameters SkyPlaneClass::Initialize to see the effects they have on =
the sky=20
plane. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">3. =
Use some=20
different cloud textures to generate you own desired sky appearance. =
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">4. =
Setup varying=20
wind conditions over time to modify the direction and speed of your =
clouds as=20
time proceeds. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">5. =
Create another=20
input variable to do a subtraction in the pixel shader on the cloud =
texture.
 This will have the effect of shrinking the clouds which can add more =
variation=20
to the cloud scene. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>Source=20
Code</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Source Code and Data=20
Files: <A =
href=3D"http://web.archive.org/web/20140722210351/http://rastertek.com/te=
rsrc11.zip">tersrc11.zip</A></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Executable: <A =
href=3D"http://web.archive.org/web/20140722210351/http://rastertek.com/te=
rexe11.zip">terexe11.zip</A></FONT></P>
<P align=3D"left"><IMG width=3D"800" height=3D"1" =
src=3D"http://web.archive.org/web/20140722210351im_/http://rastertek.com/=
pic1002.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#cccccc" face=3D"Arial, Helvetica, =
sans-serif" size=3D"2"><A=20
href=3D"http://web.archive.org/web/20140722210351/http://rastertek.com/tu=
tterr.html">Back=20
to Tutorial Index</A></FONT></P></BODY></HTML><!--=0A=
     FILE ARCHIVED ON 21:03:51 Jul 22, 2014 AND RETRIEVED FROM THE=0A=
     INTERNET ARCHIVE ON 12:32:29 Aug 7, 2014.=0A=
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.=0A=
=0A=
     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.=0A=
     SECTION 108(a)(3)).=0A=
-->

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wayback-toolbar-logo.png

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

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wm_tb_prv_on.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMZJREFUeNqU07EKQWEUwHEuSSaLkicgg3TZzCySvIKk2GVgJZmsBg9g
8QK8gcHoASwGNoMS/l+db6Au3zn1W279b+fe796w779Cyimi7ymCFBbYox51CGLoYIS0XHv+C2uY
ynofExRmJWgG3fE7TGKMHuK/VrFhRJ7DRBmXN2XCBibIa87Ek5US2sM04Ro5DHDRhGbumMu6Szxc
QztndFHGVhPaOaCKFo6a0Iz5+jcoYYira2jnhhkKWNlO83ec0EYFu7cAAwCVABzGI3/GxAAAAABJ
RU5ErkJggg==

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wm_tb_nxt_off.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMhJREFUeNqU0s8KAUEcwPHBJjm5KHkCVy/BRZKnUMpBuXKmHGz+pDbl
CVwdOCoH5U8pD+DiwM1BSb5TO7WHjfn96tPW1reZndnI1Jt7SqkR9kowUZSwwwBpSfjxnw2cUEfc
JgxOBkNsUZSEZvJYYoGcJDRT8Q+tj5Qk1JNAE2fUELMNzWQxwRFlSWgmqXfhCII7unDxsgnfmKGN
m3n5L1yhhYPtdVxQRSEsClvxgZ7/9zx/bcUJrKq/o4OrzUnpcI0xNpI7+QowAGDEIqP9eOV2AAAA
AElFTkSuQmCC

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/jsp/graph.jsp?graphdata=475_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000010_2013:-1:000000100010_2014:6:000000100000

iVBORw0KGgoAAAANSUhEUgAAAdsAAAAbCAYAAAA05SU0AAABKUlEQVR42u3Vuw2AMAxAQc9JzTiU
jJVR2CF8BAVURlEauEjuolwRSy9KKTU6HwaDwWAw/mwcyHaGnsNgMBgMRma2LO3hqy3G842cMc5v
Zomp7pO7H4PYMhgMBkNsxZbBYDAYYiu2FovBYDAYYiu2DAaDwRBbsWUwGAwGQ2wtFoPBYDDEVmwZ
DAaDIbZiy2AwGAyG2Pp0BoPBYIit2DIYDAZDbMXWYjEYDAZDbMWWwWAwGGIrtgwGg8EQW7G1WAwG
g8EQW7FlMBgMhtiKLYPBYDAYYmuxGAwGgyG2YstgMBgMsRVbi8VgMBgMsfXpDAaDwRBbsWUwGAyG
2IqtxWIwGAyG2Iotg8FgMMRWbBkMBoPB+HRso/NhMBgMBiN56jktxu2NHsYV2+z9FaP1LFfmU0VR
AAAAAElFTkSuQmCC

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/transp-yellow-pixel.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP4/5/hPwAH/QL+ecrX
pAAAAABJRU5ErkJggg==

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/transp-red-pixel.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A
/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAA1JREFUCNdjeMPQ8x8ABcwCeP+6qaAAAAAA
SUVORK5CYII=

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722210351im_/http://rastertek.com/pic1001.gif

R0lGODlhIAMBAPcAAAAAAP///wht//7+//b5//z9//L3//f6/wlu/wlt/wtu/wxv/w1w/w9x/xFy
/xN0/xNz/xV0/xZ1/xd2/xl3/xp3/xt4/xx5/x16/x96/yB7/yF8/yJ9/yR9/yV+/yZ//yeA/ymA
/yqB/yuC/y2D/y6D/y+E/zCF/zKG/zSH/zWI/zeI/ziJ/zmK/zuL/z2M/z6N/z+O/0GP/0KP/0OQ
/0SR/0aR/0eS/0iT/0mU/0uU/0yV/02W/0+X/1CY/1KZ/1Oa/1Sa/1ab/1ec/1md/1qd/1ue/1yf
/1+g/2Ch/2Gi/2Ki/2Sj/2Wk/2al/2il/2mm/2qn/2uo/22o/26p/2+q/3Cr/3Os/3St/3Wu/3eu
/3iv/3mw/3qx/3yx/32y/3+z/4G0/4K1/4O2/4W3/4a3/4e4/4i5/4q6/4y7/428/4+9/5C9/5G+
/5K//5TA/5bB/5fC/5jC/5rD/5vE/57F/5/G/6DH/6PI/6TJ/6XK/6fL/6jL/6nM/6rN/6zO/67P
/6/Q/7HR/7LR/7PS/7TT/7fU/7jV/7rW/7zX/73Y/7/Z/8Ha/8Lb/8Xc/8bd/8fe/8nf/8zh/87i
/9Dj/9Hk/9Pl/9fn/9no/9rp/93r/97r/9/s/+Lu/+Tv/+jx/+ny/+vz/+71//D2/4m6/5PA/5zF
/6HI/6vO/7nW/7/a/8Pc/8rg/83i/9Tm/9vq/+Dt/+Hu/+Xw/+fx/+z0//P4//j7/+v0/+/2//T5
//X6//n8//v9//3+/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4ALAAAAAAgAwEA
AAj/AAMIHEiwoEGCAxIO6MWQYYGHD3lJnLirosVdtjJqtHWg4wECIAnoCpmrZK2TKA2oXDmqZUtc
uETJnEmrps1boXKGAsWz56efs4LOkkVUlqejSD11WtopFqynTzlJ3URVk1VNr7K+ysQ1E6avYC+J
HeuqbFlLaC1VWluJklu3k+JOaiWprl1WeFlF2hsJkl9IjwI7Gjx4VaPDjRgpVqxqkeNFiiInmjwZ
keVUqQ5pNsS5c6HPhQiJHkRakOlAqFEDWg3oj+s/qPzI9tOnNh8+e3Lr2b07j288wIGfukOcuB07
dZInN0WnefM50OfImS4nDpzr199o117Kjfc24Nuw/xm/prya8+fTqFePpj0aUmfixzdDv4x9MvjJ
jNm/X4z/MAAGCMaABH5hoBcIdqEgFwwyuMWDWkSYxYRZYGEhFldkqKEVHFpRxYdVUEHFFCRKYaIU
UaSYIhRQPOGiEzA60cSMTTBho41L5KhEEjwmgcSPPx4h5BFGFGlEEUgSoeQQTA4hxJNCBCFlEED8
YOUPPmSZZQ9c9sDDlzzsIKYOZOZgJg5o4nDDmja0WcObNdAgJw0zzCDDnTHkGQMMfMLwwp9/uiDo
oC0UysKhKySqwqKLpuBoCihEGukJlJ5gwqUmlKApCZyO4OmnIoQawqgglFrqB6h6oKqqHbTKwasb
xFgaqwa0apDBrRlgoCsGF/TqqwXAWlDBsBQUW+wEyCYrwbISROBsBA9EGy0E1FYLgQPYZottA9x2
2wAD4IYL7gLkLqDAuegioO666ibgrgDwxivvvPTWG29AADs=

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722210351im_/http://rastertek.com/pic0204.gif

R0lGODlhLAHIAPcAAAAAAAEBAQICAgMDAwQEBAUFBQYGBgcHBwgICAkJCQoKCgsLCwwMDA0NDQ4O
Dg8PDxAQEBERERISEhMTExQUFBUVFRYWFhcXFxgYGBkZGRoaGhsbGxwcHB0dHR4eHh8fHyAgICEh
ISIiIiMjIyQkJCUlJSYmJicnJygoKCkpKSoqKisrKywsLC0tLS4uLi8vLzAwMDExMTIyMjMzMzQ0
NDU1NTY2Njc3Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdH
R0hISElJSUpKSktLS0xMTE1NTU5OTk9PT1BQUFFRUVJSUlNTU1RUVFVVVVZWVldXV1hYWFlZWVpa
WltbW1xcXF1dXV5eXl9fX2BgYGFhYWJiYmNjY2RkZGVlZWZmZmdnZ2hoaGlpaWpqamtra2xsbG1t
bW5ubm9vb3BwcHFxcXJycnNzc3R0dHV1dXZ2dnd3d3h4eHl5eXp6ent7e3x8fH19fX5+fn9/f4CA
gIGBgYKCgoODg4SEhIWFhYaGhoeHh4iIiImJiYqKiouLi4yMjI2NjY6Ojo+Pj5CQkJGRkZKSkpOT
k5SUlJWVlZaWlpeXl5iYmJmZmZqampubm5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWlpaam
pqenp6ioqKmpqaqqqqurq6ysrK2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLm5
ubq6uru7u7y8vL29vb6+vr+/v8DAwMHBwcLCwsPDw8TExMXFxcbGxsfHx8jIyMnJycrKysvLy8zM
zM3Nzc7Ozs/Pz9DQ0NHR0dLS0tPT09TU1NXV1dbW1tfX19jY2NnZ2dra2tvb29zc3N3d3d7e3t/f
3+Dg4OHh4eLi4uPj4+Tk5OXl5ebm5ufn5+jo6Onp6erq6uvr6+zs7O3t7e7u7u/v7/Dw8PHx8fLy
8vPz8/T09PX19fb29vf39/j4+Pn5+fr6+vv7+/z8/P39/f7+/v///ywAAAAALAHIAAAI/wABCBxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBjypxJs6bN
mzhz6tzJs6fPn0CDCh1KtKjRo0iTKl3KtKnTp1CjSp1KtarVq1izat3KtavXr2DDih1LtqzZs2jT
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
vvOe/zzoQy/60ZO+9KY/PepTr/rVDz0gADs=

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722210351im_/http://rastertek.com/pic0205.gif

R0lGODlhAAEAAfcAAAAAAP////7+/v39/fz8/Pv7+/r6+vn5+fj4+Pf39/b29vX19fT09PPz8/Ly
8vHx8fDw8O/v7+7u7u3t7ezs7Ovr6+rq6unp6ejo6Ofn5+bm5uXl5eTk5OPj4+Li4uHh4eDg4N/f
397e3t3d3dzc3Nvb29ra2tnZ2djY2NfX19bW1tXV1dTU1NPT09LS0tHR0dDQ0M/Pz87Ozs3NzczM
zMvLy8rKysnJycjIyMfHx8bGxsXFxcTExMPDw8LCwsHBwcDAwL+/v76+vr29vby8vLu7u7q6urm5
ubi4uLe3t7a2trW1tbS0tLOzs7KysrGxsbCwsK+vr66urq2traysrKurq6qqqqmpqaioqKenp6am
pqWlpaSkpKOjo6KioqGhoaCgoJ+fn56enp2dnZycnJubm5qampmZmZiYmJeXl5aWlpWVlZSUlJOT
k5KSkpGRkZCQkI+Pj46Ojo2NjYyMjIuLi4qKiomJiYiIiIeHh4aGhoWFhYSEhIODg4KCgoGBgYCA
gH9/f35+fn19fXx8fHt7e3p6enl5eXh4eHd3d3Z2dnV1dXR0dHNzc3JycnFxcXBwcG9vb25ubm1t
bWxsbGtra2pqamlpaWhoaGdnZ2ZmZmVlZWRkZGNjY2JiYmFhYWBgYF9fX15eXl1dXVxcXFtbW1pa
WllZWVhYWFdXV1ZWVlVVVVRUVFNTU1JSUlFRUVBQUE9PT05OTk1NTUxMTEtLS0pKSklJSUhISEdH
R0ZGRkVFRURERENDQ0JCQkFBQUBAQD8/Pz4+Pj09PTw8PDs7Ozo6Ojk5OTg4ODc3NzY2NjU1NTQ0
NDMzMzIyMjExMTAwMC8vLy4uLi0tLSwsLCsrKyoqKikpKSgoKCcnJyYmJiUlJSMjIyIiIiEhISAg
IB8fHx4eHh0dHRwcHBsbGxoaGhkZGRgYGBcXFxUVFRQUFBMTExISEhAQEA8PDw4ODg0NDQwMDAsL
CwoKCgkJCQgICAcHBwUFBQQEBAMDAwICAgEBAf///wAAAAAAAAAAACH5BAEAAPwALAAAAAAAAQAB
AAj/AP3oAeQH0KBFmlrt0rUrmTNpzqyhg7dPH4CLGDNq3Mixo8eM+pq1qnRIDpgsYqD8wFEjhokS
IkTEEDECBQkYOH6Q4ZPto8+fH+dZC8bqkqAyV6o8ESLkyJIjQoYICdLkChctXZRWoeLkiBEhOWzA
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

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722210351im_/http://rastertek.com/pic0206.gif

R0lGODlhAAEAAfcAAAAAAP////7+/v39/fz8/Pv7+/r6+vn5+fj4+Pf39/b29vX19fT09PPz8/Ly
8vHx8fDw8O/v7+7u7u3t7ezs7Ovr6+rq6unp6ejo6Ofn5+bm5uXl5eTk5OPj4+Li4uHh4eDg4N/f
397e3t3d3dzc3Nvb29ra2tnZ2djY2NfX19bW1tXV1dTU1NPT09LS0tHR0dDQ0M/Pz87Ozs3NzczM
zMvLy8rKysnJycjIyMfHx8bGxsXFxcTExMPDw8LCwsHBwcDAwL+/v76+vr29vby8vLu7u7q6urm5
ubi4uLe3t7a2trW1tbS0tLOzs7KysrGxsbCwsK+vr66urq2traysrKurq6qqqqmpqaioqKenp6am
pqWlpaSkpKOjo6KioqGhoaCgoJ+fn56enp2dnZycnJubm5qampmZmZiYmJeXl5aWlpWVlZSUlJOT
k5KSkpGRkZCQkI+Pj46Ojo2NjYyMjIuLi4qKiomJiYiIiIeHh4aGhoWFhYSEhIODg4KCgoGBgYCA
gH9/f35+fn19fXx8fHt7e3p6enl5eXh4eHd3d3Z2dnV1dXR0dHNzc3JycnFxcXBwcG9vb25ubm1t
bWxsbGtra2pqamlpaWhoaGdnZ2ZmZmVlZWRkZGNjY2JiYmFhYWBgYF9fX15eXl1dXVxcXFtbW1pa
WllZWVhYWFdXV1ZWVlVVVVRUVFNTU1JSUlFRUVBQUE9PT05OTk1NTUxMTEtLS0pKSklJSUhISEdH
R0ZGRkVFRURERENDQ0JCQkFBQUBAQD8/Pz4+Pj09PTw8PDs7Ozo6Ojk5OTg4ODc3NzU1NTQ0NDMz
MzIyMjExMTAwMC8vLy4uLi0tLSwsLCsrKykpKSgoKCcnJyYmJiUlJSQkJCMjIyIiIiEhIR0dHRwc
HBsbGxcXFxYWFhUVFRQUFBMTExISEhERERAQEA4ODg0NDQwMDAsLCwoKCgkJCQgICAcHBwYGBgUF
BQQEBAMDAwICAgEBAf///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAPcALAAAAAAAAQAB
AAj/AIPpCvZMWaxbzc4BWMiwocN687SlmiQoDyFKhd6scRNnzhw9etx80YIliZU1gCqZ+rXNocuG
85KZ4tMEB44dNXY8SSPo1KxQjxRRYkSIjpgsX9b4AVTokS5n2+JFQybsWLZ68KzVkqQHjZMiSY4U
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

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722210351im_/http://rastertek.com/pic0203.gif

R0lGODlh9AEaAfcAAAAAAP///55rbbV/hMaMkq9sh9KKqNmatee0zsBxnOyY0eOCy8dnstZzwbRc
pPax6OiK2Pmd6rlcq9h8ysdtve2U4q1UpKxUrLRctKRUpKxcrNV81Mh3yPqp+fz6/Pu4/LNkt9SE
1/Gj9PrL/KRUrNmM4Oia77hswadctKJcrMd81JRMqJhUq7h0y9iU6uio/Oi7/KFkvbh71r+E3MiL
5pdcuKhsx9eb9ohMq8uU7IpUrKp0zNio/MSM9JlpyIhYuKh42LiI6ceY+Nm2/HhKq5x0zLyU7LeM
9HZMtJZs1Mmn/HVUrIllyZl12KJ85KmF6WdErHhVuX9cxLmW+mxOrmhMtaiM9IZs1lU8rFtErJJ8
5ZmE7GdUwHBcyHhkzIh038W4/NDG/LWo/Hlp1piJ96ia/FdKuUc8rDQsrDkxtEQ8tFRMxEtErFxU
vGRczGxkzIR97Hl04jg3rFRQ3EhHuFlXyGhn2UNDxZiY/ISI+gQMpAQMnCQsrDc8tExU1EZMxFhe
1Co0rG947QQUrAQUpAwcpBQitCMytkRU3TlFukhUywkctSY7zkVb7URU1FZr/Exc3Exc1FRk3QQc
rAQcpAwkrBUsvRYqrCg9ty5EzDRL3C5EwTxU3DhMx1ls51907wwqtBw5xCxJ3CxI1DxX5DxU1DpU
zExo9ERe3ERc1HaI24GQ1ZOg3KSv5gQkrAQkpAwsrBg1sSREzCREwyxMzDRU3DRU1Dxc3Edn6V17
+22J/GB0zIGY/G6A0BU3vCxMwzxc1FJ090Bau1N07E9oxAQsrAw0tBxExCRMzCxU1DRc3Dxk5Iaj
/AUtpBI3oSxUzDRc1Dxk3AY9mCxXnApQiyt7hQdsdRaOZIt0TJR8VJyEW39lPYx0VJR8XHBYO5x8
VJh0TGFLMntgQ7yUaaR8VIhoSKqEXJR0VJx8XLSGXMWWa8icdaR1TKx8VJRsS7eLZauFZJx0VKR8
XItsVKR0VKx8XJR0XYNbQaKCbqx0VJRsVJxzXr2Jeqd0aa15cv///yH5BAEAAP8ALAAAAAD0ARoB
AAj/AAMIHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePBTHBgnVpZEmSJlOiXHmypcqW
l2LF8nUo1KybmXJmosWzZ8+dtHQKzbTpptFNQ3d2GtXJ1iinS5cmLXoT6SyijGYVzbqJ0VCmmmxp
KlWKk1lOiFA1woXrlKdHcD/Bnevp1Cm2a9u2dfvI7t1GkAA3QoWoEaLDiAsHbju3seO5uR7lmkx5
MtxThjUlHapprKazZw83OtUXVyPBh0Fz8sy6s+eyqtEiUt15VNKsjEJhCnWot6VDli4ZMnSpkqFK
yJMrX848ufDiwisVl06cOPTj07Mj1y59u/fu4LmL/5d+qXzw8ujLx4pJE2dOnrZo2ZpPFjanW6jy
o2LLdtipYQAGAyCA/xU4DH8I8qcfKrfcwkkp88XXk1GzYOKLTJgIBMsrk7jiSocfhjhJhyN+SOKI
KKao4oquVALKi5ZY4osvodRYIyM44hhKbjb2SGONvsgo5I835mikkTvaaEkoMTbp5JNLLrmjkZkw
MoqVo4ziGieknDaaXZf55eVphY1p5mmkpPmZJqS45lqbaXZ5ml+OkUbaY3hi1maVPNYopY5HGilK
Z6QgUqihbo4iim1eBUplo6IM6mZnmSzKZ45KQmnJcIt0OskgoBIC6qiklmpqqaKGiqqpqZ7q6quj
fv86iKy0grrirSsuAkqMPeYoS6NZBqtlLbXEKedap5k2pmmmLSOnsWlyQuy0wspirSxAzvjitq7A
omGHlFDySrjjhituuISQq+655ppLSLrowouiK9vGGKSfPvYYZZNManpvjzbmJvDAAPcLpcH8Sjll
jlcKu2WaXoJpJ2aYoWnsmRbDyebGasIJccR+SYznyH3pqYkoPDISpcpMBnxklpPGPCgjKGfZ6KNX
RqrZyZPOXDOSfSJsiCWgHLfIiIOk+u7STDftdNNJvxu11IRMUrWoWD+tddOUpOt1116H3bW7Y19N
ySRnn52ii7sqjKO1VsoiLMyaFBtnI8sgi+xdzJ7/lnect0A7LbHVXputL9uC4qGHsWjoCiWxwAI5
JoTE8rjVaCfyy9hdG1PJ2ZHDEgshsAhDzOiYCCPM2JPEMi+9lvziyyyS7EJLKLTsUkooppiySySp
SGLKLJaYEkqQQTr5b8ECL9ynptDzqvDCv1qJ5ZvHhqz9mHdj7GWcbGrs8d1y0nnnXOfjGdllZGqS
Y5T93jil81fSnEnPnYlS6f2OGpnz/jwLYAArFSgmqWxfTVqEITxFqlbB6oFJG5UDP6U0qw2CErPK
4Kc2qMEOyspUtZoVikSYwbRhrmpqaxGM3BaKX11rblqqm90+hjdkKQtZf4NWmm4xuFpoIljXwla2
/xK3OFdwyFsB2BAlfrG6XWACE714YumWKIxEYCIRscBELHqxOkJwEROsIMQqWIEJYlyCGGUUxiZc
IQwnZhETm/iFK3qRiV20ohO9YEQvJNEJWrRCFrtQxS5S0QpVWKIVxHNS25RXsCQlKWgIW6T0kgc/
l+EoZ4rC3rHmJCaKce9MdhlNxsIXPmhhDDMlS1/6HLO+irXJfbmBn5NU5ij90eyWOhuUzxjhvvpd
Eku8rFQAJeUmXqIMZYGyBMugZAhQMFBWW4sm1JY2NQxW7YIRtObUpMm1r4mtXV/j3Nmuhja0iXAS
bLNXr1zICGvNbVC14FKanJW3ZK1lGbjIm7N0qP8MUvRwbsiwlo209aIiGtFDr0AiLCYxLmJUsRfE
6MUqegHR1KFuF6wgRkR/QQgo9iIREJUoIYRRxl3sQhgSJcZEV0GMXaxiF77ohUtXsQjbqWKPEg3F
Lnw3C1ZQdBWJJBrRJPkkgKXMkUyipFCjV8kbVc9hmgRlKCvmvamGcpTgu9gmRfmIRvTlqyRbX2O8
1BlMJSxl/bOl/tzH1mBq5mf+s577ZiZAmVHKl4BSJgKb1MyjURCCgG2VA7EWQcIS1oOI5WCpVKTB
DXLwUyYk59k8pKsVrjOI7XTYtC5Ww3rWk5/+9OfgfpiMUdBiFIY7ni+MUVCDcuhxrriEhl7xOEz/
qIISLJWoSYlhxSqqtBUlTQQhTkoMVaBUGGQ0IxodOkbkyrSlJ8XELkBByFLsIhS9iIQqVNEKSUgC
u5FgBSAEmUhjxGhX9RKSeo1aMASi11/7atnCguUmHZrJk56Uqvau2ogu6dC/9+UqmEg2Mv7+8IBS
4pXzGHazufLSmCc7ZpXq17Aq6Y+YMcuwg335SFnytWh+nVXWuBnNqVkNbBbEmgUxyGISL02c6Cpb
jGE8TsyZcESVoFfbiNTO6rkQtcHy4QxJQc8u6ZPISI6TMqTVw1oUTqCqZa3iXAtbcXVLIK7j0Cti
AblNCCMWWBTG436BiWZYsRmxIOmW3yWS4iTi/8uVo8QlrpjmQ2DxieupRCwq4QtFECMTlgAkoI1S
vEhswiazUGriFr3I5fVKX+pdKlMreUn6TkqeW52TKDe9XzuF6ZNaHZP5CEzqT/cXljtaWf8YLOEL
729/t7Se9XKp4Vrn71KYStJeY+SpDzoQsCC8pgVtJSoWZ7OwtkpsY1PU2GY7loMsLueNQ7RCHmML
bi+kL7H+m+T/KqPJPnzyMVQ71CkXUcsMZejjFHrQcT2uXWMrl7nQlq5yyjvG0pYxvML1Oh0nj0b/
rlfb0Ju4SizCRWxboTobCelJa8plwcIwoTjrvU1/6U6q7Cqo7xuyUnu8ZKe+0pKat2DrNcwr//+L
VKVUzvL/Kep+to55hHENqEzx1eAj3CY39T3ibWJTxUA/sdbg7c0Y7xvGRy8nCqU9r8rKiEjsjLrc
FEUsaXFbcODWRGmzFFBrjRtIQy3GuRlKCSOqW8tXDoAxaDvZdR303XDnUNnnXk4T8XveJmQd03X8
9Bk9vUmMXvTBPVQiFNUreQwHmFIdrmCGxbAzPnylKUUtaquusjH85fiAP/7xUB4YknH15clt0+qc
0NV+cxWmzOuLv0zY7EiphjSImf1rEGbwVK3C4AaL/fPep+rZzHasBx9LQuHvnuk37lA6/9W83Fxb
blMfVrGmH1pjfbvJpA0WLVKrWsQVw9xmZzv/bMWv5cYl8XHFGFcxjEEJsaet7LC9HLvS9m5xwQIT
Zb8//M92fy6bkNowgjz2EngFtzi44gq6omCJhy9LsnjQcy8jhyWPNymkgGndU3Gj9hj7JUqeFlaS
QRmSEYKRMYIhiHkmAyiOQmGsdktvpTPCtD+Lkj+19kqEQko06BqRAkxAoyT94kx+9VdPUzZb0zVC
t00pljQrhk1Ep28zBk7whnTtgnzlVCLpRSQ1IlDY0k49FmTg1oXEUjc/9GSHgzitNXbkd1Blh3ZI
FAvjokaEgEaVcDobMjotRQisEDkJ5SHFsCGS4yGw8FIaBVEOFQursAcY1UZchjaXszgwgl5S/7Yt
OZZjhGciKJJ8HRKAC9hexxNp0NMrdPMmbLIa40NxEcNpF7dK2gNWYVUZYkWCrgiCYuVKn1dyJvdL
s0ZAgyJMuqRLJ6N6oCg+HcMxGzMpsIZXNecnm7JAI3Q1yfZBtqdYuadBvKdNefdYxIc014iNznZO
Uvh/OrYrVthCv9Ijzxd9j5cMkCdDX4iOwnJa2+d15CZlLeJa6UZ+9Rh+64ZlHhKHZdRSLwVRu5Bm
qpAIExVIuwCQgeRQZkQJB/kKGqVnX7YKiaAKGeVEd3c5IEKAUwYiRXQiUhgiLrJw8pOJSbWJSoV4
RXI9bhJ54mOBF1iKndaBYHV5ImgZrAiLH/94kyDIPo1QG/2jgrV4i6S3M2u1VjAXMx4jjFkVjPiz
KMZ4jOe1QCF2NUMXNlxzQenic9bEdOQEL+HkhE9IY00YhdWYQnwnI49GjlfoQu4EQ24JQ10Hj6pV
huf2OLR1l+qWhvh4l65gfpbThqtQCavQRj7FRW+mUsTACi71ZiYlDKuAW4nQNYEUCxqVCMRQCWU0
mHfohkzHIRxJRJI4iSRigBjJdCRiWb2iI0gFMPDzI34nX1Piep+YjqF4g52BaaBUefv1VZfHijmp
kx9Yk8CpcbXxlKv2S4yycspZGzEHjB0zPqW0Jj0zN7AXS+cFCpVgTofVjIvVQREEKro3K3n/p4Qn
ZHzDl1jaCHwqUo3zsnzh2EJXGJ87cgw9FkTXEpf2mZ9f53d0eZdzh4bjl5fj125GhETGgFCwsDmm
c1JqtAvN8ERPpDpfdkWmszpoxGWpE5DS5UZ4tluSg270N1n7aFAGBSIeyZ4gkk7Tg1YEs4DT4zLR
90Ord5u3SUMBppsdx0q/qZM22aOsKAiVcRltsijHaYsvgyWupkuZVFe/qJTPCS2kJDM2Y5yZooyQ
lU1W+S5CeJWs4y7liUIXlG9HB5ZhOaZhiXdT6CGoyV4k6VT5KY4tNG5f5yMzImVih1BVRqB6iXZ7
SqC0tYZ3OS73Bm+Cai6vIG+VQwzhUn9n/ypjnYl8JFqipDmaB6hC4Lii4ziOq9mmOyILsvmWS5o/
EQd5pFhxpyiTkMGjkwGksFgZQKoLOEmco1ekE1aLV7Jy+vN4ExgzolhKo7iUNTgpWjKswQJ7BuNM
KjJBtxcry6Y2mCNCXWlOxqZ76bmN6okrK+KNh/eenKp4QHI84DojACeudQqJ9GiPaIduZ8iX7LqG
b0dbfro4fDmJ8no56ZqnIFqP6XY2cid/lCoi9BqpJDqaVbhOPaaFkMQ8RqWFoNqwE+iS3FZ5p/oY
qlqxq5oLsMqq7HMycVUlPpaCEmgpwqQou0qBNeicS5mUwxgzwiJrqomMyDpCW+pNR5eVY/+DlUQ4
nmUplmTTqD5LlvOSXk9XMOQqrkMyJEYrgJZgXua1tATHLST6n3zabmcXr+xKoOZ3oEYUqH56qOEn
LoV6r+oKoHxZlvYqbfI3bSYKsKQZqchxeNMDN1rYQrnGpgvrqQj7NsACqjEjZJ9hFvZVVXQCGcKp
qq+KsZMBqyBoMifnskc6eg2TJYMSqrbWJr0KjL4apWpSa8X6lJnyItk5Ir+3bCMEbSKkNiJWntOK
TaVLutj6uuvZnttiXgKIPLX7JBq5aN+nOKBQDLv7fZHKduKXhgKql316tchrDPqIvAQaryFSr+pa
vHn6n9S7r1X2kc4qsEUUiZaaOCKphdj/xk4LIz8DEzRPxZa/AmSgKnEaBrGZBjLpM4Ly+5s7Cqu6
YL+WARenFlfWUz18MqswxDMla7InG51ZpZRbwrKLQqRXUj25FiN9JbqQVbNMiHdEuG9c2Y08+7Mc
zG8l8o1EhbsEuLvgF6kcqb14KrVVS7xla7UufJdZy7zsiryHeqjico8tLLX46q/9akLROy5kZyLP
uzg5lrtChTw2kp/5ibCPFDCPdC0u+1QS6DDDWmtf+KsvqWmD2xjy66OUgb+Im7+MiyP/GyhTGnGS
q6sytxoInJRuXINszLm24bk8Ang4NyLOqmzaSK2o+6XSSp6wG8iBvI/eS4A6xr0dWZp4/4w2i8rC
Aju8AQrJUyvDL3xQ7krJlFyXkHy8VSu215uvZWlvkzWa28to52UvMwKjblmf2Aa+CMtOWQLF4Bu5
ASxzkee+AAaTOQoXXcyjYJy/fRFyDPbKjtew7DuDTsolG8PGvSpzxHpyDvyyPYidMhumZipOjGw2
dydtYZp3HfzN7EnIAge1JXqij2ousAUuIxK94XePxruXA4rJlXyXyqt28/zCXivD+rrJ09vOPrzP
kKqIJMq7pqy0ANOWoOp6Snyw1/Kp7TQl6TvFARxDVcx6uNxfghu/XsyKv9xKp+GTKujAZVxhuQpV
MSeKXCJPtSmMCUyjLNuyxtjEx7oIdv+Hx2GajSV0uqYbbaEsyD6dpuIceDmmwWTXjen8fvzqw0a0
pzgsoGMrz1C9tX55z5msz1d7vPjayfsqhSBadotcRIxWu6lMjggdg64BQ3KTCUvslpm6hW/JnDCz
qz6kzBEbYFbFy718k4obpCBXgWEITA0T0QAcsgOMlAZ8wHFMmxr2zFPqK0iCjETTTNiK1D17dzaL
pqFM2eD8hEDdvYFHeEb9z9H7funsySys1ehK1apNz1gW1TIM1U391O08ttR7vSGqiOpGxCC8tOJa
MD8GM0I2LThYLetbnKilt+kLQ05ZxXJ9xSn9X4I7Gqlqsb7Jk68E0419M6En0bVmFr7/qkN0DYa1
NrnUKWvR3HBD9YNTyM3WaLqLXIndaJo//bqMmLsGGN/8it9HzVA5vMOSHM+rHeCXjCJXmyIBjryd
PNtnt89oiLZ09+DeOI/ei5ZknVnAPThM9oXGXcsvLXVz3LDMCYaRB4a/2l/ve4p4Td2xqifX7bCN
rYJZUikOI3F2891QaptSusr148CrqUiDB987W9lIzcjbnNlEvtnwxpEJN86ttcghatsADcp4+cML
LrYJ7toHvmVYJnbUYA3WUHhGJA3WIA3U0Ax4iuXsyuBp3t/vnHdn28Mn/I1N+yPjVp+WVixcYjc9
dNbLfeHC/UOynNwuLt4i/hm3/N0Y/21DIMPFO5q4YbyTwUyDfe7igD3RZv2LV5dV0qLAbxk3xExy
+1JQsRtZz3orzuqs+C3f830rpnzKTT6FD25vqa7Cst3C/Y3mB+6n9RwLxTAJXk7m1EDm0vAK1hDs
1yANV57ra+7OA1rbm7zVsR7nh5fECB1DmzVkFThaYXHW6ajhtfGx6gvik+K3wW3jJ77FeY2/e22T
7HPdYZjGJ9OwEs3YFOiSGO1fUMqy7965ZJy3m5o8L7KeSkiemk2Wd4fZ+I3kUfiNS4U4j7iRr3XD
oUzl98rJPzzbyp7xMLzlvl7s12ANH4/sH1/s1IDVuL7mekq1CL7s1atlagN/OmYMUP+H0Oh47dy2
5+z4Q+Uu3LFcjiBe0YTut9nuvom+FoMbDLzc6Pb7y+3uQzPqsOQto65RdZmuQ2zi9HCN3SgXxZDk
407ezfGNK6eeIkZuiauekYmzWkJFzh/iwU8e60rNzzp81Rpf93yJRMdQDIsw5pMw8tdQ8sX+63b/
wsx+2hRPtbc9WfCqpgH4I9kmfVR/dXlO7lon4pQfy+D7qfS1+TIKT1NP4tVHPsdiGruM9HqNuB3d
7m2C9TOq74niJqJoSgBm9YktozBUi3LbXnZMiWWfb5xtwUWe8Jud27ttXk8LtSbKyP769irv1Cnv
7IN/8rouEJhgDMXQDM3wCsfeDMH//gpkfqjZH/2Eb+t+WviVXN+gQLs0Mm4IXfnqODjVp+cZ7v41
//5giPm/PTe2v/+fDxCaagkUSMrgQVKNDC5r1OjUw1OPTgV79ChXxVwZM+rKpctjR44ZK55qeJDT
wFopVWpi2dLlS5i1TiKkWdPgzIEuR4ka1dNnz0yyGAllFMroUUu+LIECtcjVpEmUok6VWpXqVKhZ
sW69atWrVrBhwboiy9QsKEvG0p4lS5aSq1eT4kqNW5cqXLl56+K1+wruX7+BAQ8WXJjwYcOJAb+K
FSCAL2PFisGVlncSWbmvFG9G3Fnx2756/74Frffy5bauzvpifVTWa1k+NSVDqbIW/6nbt2uiZJlM
0yiWKQWu7Ck0dmzZPWcvrwUceMucKUlxsmmwoUOIDytuv6hRI8ePIS9KJKnw5nST01fCZK+SE3Xd
1W0SbOn8p0/jQxkVNarU0v//QKmkkqe6MvArShJUsKoEo1LwwK4WlPCu1M5iKi0MLSQQM8zmyssr
wEQrTK7BSPPsRM5SRBEuYxw7BhZYJnuqsLhSU/HGFW8UrcPUelStGFCMYc2Xo44Z6rWefKvNNul0
yw033FLybZRknFsJJfxgu4+l51gS5TfelhwOvZoawgW7iNJ8hCKLvAPvTe/WfMg8+W4aLif67pSJ
Ouo0Oa9OOzl5yb6f9htqFP34C//lP6X8Y4pArRCEUKqwKOVK0q/E8lE11SzEUK0g2fLRKg/38svE
0vriS8QcW8XxxsYCwMQYWEChRhofX7lVGmmaaeZVV1dENUTBNrUQrdaMOgY2JH1SkknboLSJt9+S
DI6ggYpDEjmfohPOlt/AhC6lk+CT1rpGcMkOou3YbNPN70S6aE5AEXovz5dO8vPJfeV7j1o87+tp
qKD0I+ooo5IC0CynssJ0qx4dporBBh+meMKyjjVLLV/QUgtUsyKukTQRRQPNlZMDIxFYloPdrJhX
YC4m1lmMsdUaa3j9tVdpqLHmGpxxbXnoE030q0fJzjJGyCGTZbZZKoF7Ftpo44P/UiXfqlROyeCy
PO4n5obD9towqdaNIZLWZXdNi96N17vx5qSTpusQyk04b/28Gko+BRL0SpfwDPen4ww2OBRFE/Zv
KQE3BCvTywiUPLWrLp2UK60ytrDRTzMMlakeK64K5dFWVflU0k9O2WXWX4WZsFhntSTnRXC+xudm
nsIZZ2rIIvr3EyvcmOmmh1SWWYGZM5vJc6/mbcudtMZvFG6t1bO2PMWMbsyEHEJzbYrgFh/utuml
W6G5b/s7+zvHxlNwLr8UWOBEDd3POMQRVjhACxcBhdMCWQU1GtsQ5Sw2qQbVqFPIUtjHlPKxpYDs
f6EzzYhQJ5hUtU6Dv3tdzAoT/6tY2IwatwIa0KzximZYgxqD+Nk1pLE64MVwMEAKUvFCQSSEhWJZ
UKMSbWgDLWndTSa3UQZNhlgL6UUtidr6GtjwZhtsPVFs7rPOmU6hruwEIyLB6M74NNK2i1CEXugj
427wdi32pHF+1Jvfa+oXClnkUI6KU9iFNPaoAgnvjqDDzGmeEsDLvQU1bTELZDqnFs99jo9tGZ0F
SaQ60l1wZRukZIo6eEkPghBGxlBh0HDWDGl8klfUkGEpD0OWYizNeMo6RiuXtcPYIKOHvbmeQW5h
tyg1iRRFdB4UCUW44gRTNlzTHtnGNi5NUCchVvyedjDCHbd1B5pivE4jGKIQhv+YBHv4eon8qkU4
osRxP4griv3GOUc5EklhRFqcWQC0sD1e6J2MO0sBN3UZUg3Sd3r0D6hslhabBdQs9pzRI1NnukiW
zpQLBYzMPPiX3D00MDNzTCyKEaP/UeNXUDnaJCv5UcOgspA4bOXTmCXLWf4wWgdZBila2tJbMi9K
uVxJ1qI2vaexUTZUi6L7COIbPR3ETOlqJptyEb7tJJUi7oLImRpyTTOicXDfXCNsEodOrCJlUZxj
FGvWuZR5Fs9RYEULo/aHyHgu0oCbIqSFbBaqtdCTKUAKXYkOmrKVmQyke5VoQx8aUVfkLqKavGgl
JtOMyXhwMpKZqGIZCjxXAEn/lUQq6dNQ6qwluaeIt2RIZ605LSHWdDZJIi1OkVfaskExTFNdzrjK
ZCZ2aZFtawrGUrWotiteB6p2W+3g1kg94xzsKJzDYTqHtL95Aoi4SfFPx7qKMHYel7hePe5b5dlO
C22KQGm17h7ZKkhVGcZoCX0sX+HSQc/ArBKvqEQzQNiM9gbWdzG7qGQWy1jCoLe8OOoU03QIx9fQ
QonJIDC0lHGbW/DSpQzBRYM7uwyYKhhaVP2JL8Gp055kVrW+bM5v74SQaw71IVjELW6J6lSXGjFg
v9XW4fqjFLSUVbnJnWc8wfrVGzYqWVgVa/HeeSHjtaZp9NxuWjVGV7YyEi6g/zldBSdpKvMu1KEQ
la9gq7zewLa3EpqEEXy9rOWLwkjM+G2sfqMcvMgyxb8llSUtCDwKrKlEwSyFsDUbPOIz4aKlB5Ew
1n4i4KhBa4kCA+ryLNzG6gXHanTr3lCdWs0863ZuNKWwafOTQ3gKyFP/6e6xKqHpT58FQ+zEan6E
Mkch57i6zzWKLI6RQ692WmNJ3lRdjGZQGNo11/t1mUPRa+XNrPfLXtbkK2DRXliwNzBiHnOMGKvf
KfM6pJFNc0Ap+xpkIKNKBC6wnJVxi5emeMHpujOerdnSIqY7SnC+qbVUchDbDLpKs0mt2ap0HGbx
57TAeXdNXuroz7bUmk8Fbf907pNv/A0XxvT8Y1s+vcA7Ou6Pkwg1kJNS6iM9DdU3zHFXV2nSOCo8
1rPu0dHacrS93Bp1qXKytCtpZsVYedhZHnZ7QWhsLXsZFvANM7Nh4Ypkvw6whYn2mY+WtCCteVko
9SGTePlSCC+4s3dWV9Ub/Nld3tIgTJpNt6Vjy60LZ9tRo/f1Jpwt4L4mqzwMar3ItPWbnJ3CVk34
i/kXstOEJWINp9xYFsgojsvxaRm/qnFt2GqTwhK6rOluXYdFmpQTi7xPNjpfi+4Xmcu3MOvNec6P
7d6K7rzmXja2z2GE34hGG9rlRSUNJ0vZHcpy27ZRxmahbueBX53qV7yig8X/DeE9m42lC4a32PUk
EJWqdjg3PXWr/xtH6AOYW+6zzUwozVP2CMyqsHYU6CAVKQdBTCzgr9hpQm1WwWcc5Dx+cQ6hD3Jm
vfqGokoNJMUbyZKt3HSUdznLVn95zhu2nUu2z8s5+NKkSti5zhNA04MRzPOr/OoryIos+0o643El
2JC9pkuJb1MGCMuzBgtBEeQ9tQlB4Bs44PM34nuw4Is35FstKcqaanmNV4M+/TAStZM+HgIbRWst
ntgJnWAxJsrB4bq7PnKYA4IKSmGQ8MuUPwKyHWs1HIQ/kyo1KtS+HOyYCeKLDAoNC1Koyeu/DfI1
ojMMwYqv0RuQmlPAnXsv/zZcQC1rQDFLPcVCLGA7L8dinb8QqaUhHl94NTajBQHzOnWTOgbTsxGs
uhLDot3rPRFERNyLtKijKdqgN7NZjoODDTiCJbqzwX3zicv6iUHLRCocCu5juIYLpAhpwstRoEK6
uCJBvG1JO40LOYThRJMiNG05BsYDBRm5p/A6qPDCtcqLIZirMjwEwDT0lc9rxgRshksAoUs4tgGB
kQG5RjUsPdNDtmZowGd7Gf7aQwqsldcDxNjTwOSrPVIAt0MMQd6zunWprYnALS2qx3UhNwd7RGvS
OkO7EptKolz8Giq8QiHENxpUu+iDNVWTqwJSxQN6yAFCluJyP5AbQsSRP/+ECcj7KLAf0pb+sC77
qrXSwasvFENjbCwqQ0ll87xlpMZuRLZnTEBNKoRbuZVKoAYTsgZnKD34ksMENCw5jBFni5kIPEb6
si/JIEchIR4MlIVsG0SVqr0OhLpHHMERm8faykqt3MqtzA4RJDdHnMR+lJLRqpZRxMKB1Mg2osXF
Wzyukqu2ID+HnMuvyBjmyiFcnEVahA3568tPVKLlGQVacLUbSoqlOZZfvKCR5ItgKcb0kiih0zyY
gS8UYkk4/LIBTEBrhEZYuIRmCATHCIRjc4agcYZKUKFQooaf9BXNDMpNCiHWCKGlGTM6hMCQQkqk
7MPiqaxsA8yotD3gQ8T/3SMxLOJKeTROrVyXquy9dIm6sUSi0Zo3QwMngcwpg8QwUlQ4AEEktJIr
AYnLD7kKu3iYuUidQHqLTolCI4EjHdQSbmGW/8pIJJE9A7OlWjiweyNMVRuSPrSZX0SoCTS5k4sy
MoTAoVOv87rMznvDnuzGnvRMZpPGY8OZAQmlSiBN1XxJa4xQnzOGWIgFdmolTMixEDq9ocSkZDw6
+3K2pHs9HWKzbOM2p9sslzq3R3zHq5yI2jqqrqxHH83KHF3EM4m6A+Mpm5KpPcslrTHItGRSLfGa
FwsZIyOogipPEHk8lAlPumg5y3CFTwO8+CRIWZIlg8TIGmyW5JOzXVpT/ykBrlaKLrF6KxlhqLZY
rAGVMs6ozTPEPGOrzDR0xgGcxs7sTAjtTM4EzQAQzZv0GWq4hBGChaD5yS5jtmn8UEv9UCLBhFnY
VE7lRV8A0dk8PZk5L9xEyrky1deDPWyTvR5CIm9jxwcbThJ8iKzkUeQE0q4ssdvqPZha0yJdnoVY
BhF0zg4bSPXbS4Fky8IMGT1iiy3kkCXUUrqky7LwL2Vhz5zqicsiU03MyyQBInX71WIlTIx8sViT
032aQAosVctTSWT8K8BQ0DWkVEIl1Eu4V870zGm8BEyoqHt1hn9tBmcwTV4R1J0z2M60VA8F0VgI
BU09Bk6VBU6dBRL91P9QFTNaoRVQENXTsxlnSxrdvMBzdDMZpQ11hFXhdEd4VJdaPSpb7VEgbSqI
+NGmcrCoS0Fb+lWXKrem+qz8hL9Was8mtUUtpFIvLYujZSu5QBDzxJQsHc/L8VKJFDz3rM6h/dZ+
W8dwjbdRQAa+/K9Xw6Eh8887Fcd9shGzXVdnczaR9D/IfMCho0zKHMA/XVAYicZLzdtYsNd7xdt+
TdS7hcZ7TcDBvVtD3Vcxs9RPHdGJ/QVBdFxamNj9LB4QHRLZ7E/MpRWQDVnYO0fBlNH7VMfgFFar
49kf9aKXNc7em1muLLGw/CzOYjDlvCLcQFaEk8WhDTnWWCR9AqBnLbn/KpVWLwxPD8FSVBmgppGj
vMzd2BhElWBHcevA+1QJweRLVwtaQIRTyCBbH/lPWlvXFu3DUy1V3ESMy5NMwdjTYhA2AjS2ZWxN
vLXUQ4gFTKjf+v3Q+bVU+8WETghNgB1cwq2EfdXXnnzGAcbfP9TUWYDcTHhcWviFTT0GTfWFWfAF
TOgxDO6xw8TcHmtKdOTAFBvdDyzdBqtVLkLd1E3O3vvRWz1OPNOzPSPdErSmlKDFZQGwkpLPtJS/
3eWQ76U1piUZp93S4j2Qv7iu5C0SoKVCQPuhYCW+BDOIX30zr7XeV3Kl/2qaz5EM8AUS8kVKWODc
OA0oMk46X1wsvzjf/weE118JwPb6UzE74Eu1YAWe2IndhE3V1E3Q41/4BVPw10uQhoEF2FCSBgEW
3EHV1zjG1Prd1E3YBEGMZFrIBAju1E4V0QT+Q7B9U17s5DdlPLHq5D9kDQzUQA78tjoLzqosN61E
YS5SXS3CBRZu4Vy9ujorN0bUM9xIhsFESB2yxcDbxPUr1yFRqx/eFOO9i2Qu3rs6qIaroelapVhU
3pPKMOk4wZvds9pr0671Wq+FpR0yx1FumswtnszdYGt1JXXuZB3SYP9EyvSlMj2FCzUcwKCMX0aG
WAXeBAh+YH7+hU6ghYDuhD5+5Efu405I6E6IBMfAhHv1GRVyVJ/pW/8CvgSATWS8PQQJngV+jmRT
sAVJjlw7nliI7eQLluBRpth1ngV1HmVXcmmXhlGSDd0EAz6bFlbSxWmWfWV48Y5XRk5abeWMoOV5
vEqVtToiRSIb1k9zLa4zDblyVbW3OubvDeIsHWLTGOK26jSbyeAk/mUkcTMQjtVz09pdatNsA7lw
vt72+2pzDFuvftGSwsW0RoaXNufZJDPbhAu5XS/Ru+c5rmM8PugHFsSEFuhOsIVOMAWFTmhTeGzI
NoVSkGyGlpVo5AOcsWhDIM1p/F98FeC7rdQPxQSIXWBBNAVa+GjUluRfyIQFHulN1aGTdtgbkuDS
3lSJveR1xmJPXjr/bfshdfRAQ/zAnHbHHT1hFNaIn+bKoVZuoLZHr3xHGG4pbq5iGsziHrvF+OyP
pjYL7x2ZHzZJcaSheOKYuAZr+qwFWG3O6Ua3XeZlb/Zmp3yadW5ndXY1+sbvV7reuV5Vp8w2AAdw
whwST2W8ULUvO0zR9VpfFGJDGNFbRr5jyPXoxX5sW7Dwx55sW5jsyc7wUvjwUnAER0iFysaEWDgE
S6gGauADR70Gz/5Xiobx+K3fR27ggL5wW8hx1F7tkMbjTiXtTObFCjZHTg3wKp4F2GBpdZbr/5ZR
qQS34b7pEdZRnkZdnl5uoRafHi1qLq9ZXT5rJNIa69bPkYPmiRwu/1TrRV8EXlWxEXxqZuOFczk3
EaQ5Yx/ZmFDZ4FVaulZd03PD6YBDtxoWcCMXcL5c55MqdEUHcFpY9Piua/5+6QLf3otdX8YKwD7t
xgjVW9aQcEmO7FLY8A0HcVL/cMmWbFIX8VRY9VWXhIYOhBOfhliQ9WmI6Fiw6BiHBc+WXwV23Btf
7AsHcR0HaQemBR9nadIe0Ve74Aom7YlFhpCOZENX8vvGNievvZrmrCgn3Z0+bi1v7tR1WS/CcnuE
7l2tus+SEukZcx6GDI0R49YARJFbizX3HVbBq8WMc32XcwGlavJOurT4OCTpNmy/vZvWWiQazPie
b/lO65P6b0GE7/9G71pBVCIBc7MeIjBBJHT5PvRP7jGGvVgFdN9JTVyGHRLG5WiOhtyBxvBRL3VS
R/VTB3ERH3FWX3VUcHVZiYVAwIRD8PlDCPqgP/H8vfVdv/XR1mN+duyXLwVgAIaYv3DWtmN9LmnS
BsRnl2SNl+S0juC5BvBWDd2C90AoH91ur3JXVm5xT25YLuphqFngOzCfaPSvbXdRAZJQM+8zx0hy
Zla3IB0SQWbH3EOUS1ezvahQgQyRdcqUelWpK+tlSDAkGnOGd3Ro5zbM37bM3/zM72bLB/AIbmev
tlhaaUbMfHBMPQQ65lRNnfCBlnoPB/FUKIVVp32YD/EQdwRguPn/VYcEVIgET3CMPiD6n7ff4i9+
nz/xS8Vn+qVxX8dxp78F6Zd+qP9wUQ/ox4VtOybtUJjYiAfpHOe2jfdaJG8lJP/vyy8wqQzuyL9p
427ZjfCIj4Cb40Z7V277h3j729JlpQYIWqOQyZJ17FioUL58GQPlsJiriBJdOTS20JdChBpDIby4
sCEoiBFfTXRFciLJV5NUslzpsiXMlzJZlpR48qRNnMUqeuQoC5nAZMlqDa1l1KgyZaRu3VpGatkt
ZUSTDfxp1SoyZKNoCaQl9CvRqV/Hki07dmvWrFyTcaWVdtbBi7E8+sLka26sWMZg8a3UzG8lvrAu
5c1bty6mWbN+/3HtRMtUJ1umHpuyVeoysFSpMpcC5qizo8+iTTnynMpRKlSRIEFKxVpSgACB+OSd
Ng3TIUy3bWPq7Rt3rEOHggcf3nvWpk2/OpkyhTnVrdTQgV0uZVmyrba/lCNfrPg7+FltbZEvT56t
W1mKDcL9mRZs0vjKojpdZn8ZrlPB9gfL5T+XLgDqMiCBAf7nH3+59LfggQ3y9+ApEUoYIS6NQEXU
QFkV1NFHD9Uk0U6g9JQQRweRqNBFIIn0oSsr2mQSjCnFOKOMNc4IIosoTRSiRQsldExBowh11FFD
FUVkkWwRVBCTaTmpFTJjHSVVLVQieaVZZa2lpVuKHeORXcdg8v/llwvlxVczsAAmGCyF3WVXYsht
QksnkTFnC3OQOXfZaZmlUkqfof1ZGmqoaaZZa5CoxloksAWASSx8BGLNNdMcUo0101hTzTSbYJKc
p7+JKiqomTx2WXSoRLcqMNRdVhmsbcnaliy/gPcLUF6Rh1Qt5aGn3jFwfeeeV0NWmdQyytxnHy75
PXhggAVKS2CDClrL4IEPQpgfLsFwm599t0wFJZMcNuTiiy1W1KOPHIUii7tfovgRSCA6VNG9xaxI
EiWu9PuvvwEDPLDAAUdUDCz35huSizite5FPPw155MRZKmlQQQRpjJVaA1FlrHwhixwfkiT3KlSx
ydiiMspdwkX/5pjBvjxLKHadySabhLmZ2yxxMsYVrLBatiegh/55mmibGWr0aZpF4tpqUUPiaB+0
HTINNc5gcg2nW0/DCKhhjypqz6Aud2rRqwLaWXXWlfIYdtdZl52sv8giK3m3AMNUVOVxhcws6rWn
VrG21AJNyE3hl59+CUI7LeQO/regtpXrR+EpzerXLC72YZhhuR2dm5OM6oJijDGW9OTLRiYilJBH
ICWMOu2051uSjbnTeGOLO6HOEF2oOwSLvhDxKKKPQAJlJJFFfSXkx1UxaRCQ06fVlcdgHTuf4sve
19R88kXFN8nnnYeeyyaOKWx4Y5p5s2CX6FxYzcIqRydzr7bd/7Zmazf9mdEMVaimpeJprXlaJBDY
qNgkIhCYCMQ1enOIa1AjgpwKGwbFdhzf9OxTyakT0ajTqhGyrW3kqU6rSkieWdHiGeXhGwx7tbK/
PaktLOOV+JjVLcf5J1rSYoYugDgtyVWOPxTiHBK/1az7GCUZGioXvBgSkpHAqIo7gUXqLPK7EW0k
XvOi1xY9crqH6EtHujtjFdUVxoyc6IsMaQjtLnIQiR2pSkUSy8fcQpCD8HGOQDqGxoASpShBb3vK
Upb3EqnI7zElKTJk2d+8hJCYhQc8YhLTXQoTi/nlJTcbTM7ZiMY/P/VPMwMElGhKIZrQDHBpBXxl
AhPoqE70Zv8a16iUbipFqd6AqhOb8KUvM8jLYfLyfvnb3/6GpkxUwXBv1VmhefIGQ76Zj4VbUtmu
DLe9pmhuP9XyIeSEOKBqWQtBRuxcIju3xHXaRypUWRLG+CjF3enkdGH8HbswghEvmgh2dPmn7ULC
MDPSs6AUOR3EfIKM6oXOnxCbYyGRQiWpuHMqQiIX9UrUR4amJXsgmw9UFKnORHYPncsi33m4Ijia
yaySlaxZzQ6Dl07WJRSKAaVjQliaQ6HSNARkmiqbQxrSsLKorDxNJByhQEcpIhHBBNWniLmJRCSH
qhlMjgezGtXE4DRPQv2qUK0jSmCgoqxmVZXeXCW3aU5Thr7/WplQzHO4uUIDKYrDxTB4CKAeFgiI
4iwQghREuQdx7j5Pecoi29nE9MSTQ76Yoo0OxpOPMMQScLTnQ/1IPRPt80cKmVftFFZGEI3WoBHB
7ELm+JNRQO8sjA1ka2tBivA1MiokE8pF0ZJR121Uee/RXny6x6zFEdek+Dnu4pIYLnGtkCsufS50
v5OYOC1GOYyJjE45czRUmvJQhQoqWB3RHEWQhryKcIQiTuMHp8XSE7Ehbyf+0Ik7dIKqVCXVVKua
X2GGCqv+NVudmANCAUtGlJhJ1VnPypS9MZhvaF3wLeYWTblOuFdJYcriTpHX/kBLQJCj1uSK6K2R
3id8ykKs/2FtS5Qn9tGfqBNJ6XqH2tgJb3Y9Uu30QtdbPoK2dglj2PGmSMWD6Qu1JcrYkCZqR3eS
ZUrCJXG4kvQVDWkEIxpRrZNSJlGQLku57ERicTk3DOVSky3fuWQlN1Hd7bD5F24OW3esm4kAH5NP
q0zaoXwaGlWWojl0Jq8pAC1ooqK3gH6IJSTsEJtIKKLR5JVvnZxK1T4MM4P2/e9/PZjBX2TibHPK
6Vf7vD+yJljBENYbW1ENDU6Ux8K2tYUyDGc4aMiaezrcoTcb9GEQX2s/3DqucYWrOMQi1pG4ZbG7
UgQKWLzoFSfxXT5TdK7ZWbl6anlijqfH2RRZNrT2DG1pi/8cx9RWz1jCJWktbrGUdGqOW5n7nrGP
vdCNsq6P7lleXJNB0fHpMLlJ/Pc6o4HEMYNZb3SD7v2s2RjtvNnN+KMTZZyzJ0JRp2moVGXSxBto
yNBZTxvfuKNTcd70IloS7g0AIBqNXvMqAtK+vHQiYO4pUFlV05q+6lWXk1NR6y+ETCk1KqADYVU9
mCmcQDWE98a3UsQ61kZBnIPvwzm9/mfXBhJsMN5N0uDWR5FNmW0TUbbHKtOrjDGWce2Cdy6EVjtj
rB2IHjF2FR4DD4zfZnuHHjLZfVZPSEbhpr//Dex/Z05CRswcOk08rrFfmY8Zy9VXdnXhcwO88oVF
xeIITvD/ZqkqO7Zy6ZzG0xw8FbgydYJ4px8OwrBeZs94DuD/hgpfOtNZvn8wxe1VXuhDxzISgJCE
olGO3pU7OtDylfRU7Xvp/FK1vvvNIO2f2kvlrL45omb9c25RVu2jGjpEJ3rSj670aXIP6UrnRPkx
n9wNc1jXQzRn1pfYTkcmjsvLUpZtlWEklBnEjZctHoyR1rdpkfAYD9sdWVY4Eehg24ZsG2WB0T+l
iEfMkVokmbJwToRknQZejgZqy+VkoIgh3knp38XsGJDMQgUWzrHwTZcBnOZpGF55meV1Hi2kmehZ
BjI90+hNBu3RSdBIHJ8xzf8gzZ6dl59FWn3VnvWN3Hmh/1ck8J4sSYIUfkJsAAKjMZofMOGjRRrM
IWHzRV8ShiEYBthyfFDHSVxYWV/bpFAKpQIneN/2oZXQpVrSIR2q1QKDlR+GTR3VgdPVmVMMKpZE
LZnIjE/ISJlQzJvagduKiETxrAsZOSLeOV7GZNse7Vbw1J0c+RElVmBRcBkGipgojqLlKBE6RYXY
bVawqMf1LI/kseCtJdGYjZmG1eLmcZ6YxSDnlNXb1ODPwA0OdsaqPNhmuMqrCNXD+ZkaqpIQCuHS
NOERBphT1cntBZrKKcJ69V4USqEUekLwpVyjXeE1bqHzxVx+heE0jmH0cdwY6lyAsZ6BlRAytUoc
KphZpf/a+PFNPkYFJwBDusFQ5rGfrlXdXmHd5kFFrMmahdnRlDgSIpJFVZTJItZO8aQRkVVkI0Jb
ZnViWmzIZn1RtFFgliAFimFg4+QaOaVktpDi4clf3zgRk3gJK96NK8La+C0D5qkT4Q2Dhg2DT9ri
LSKRJ+giLqBCNFjHz1QGMwFdqWmGMfbZV+VJ62HcT8EeajxNoZAjEnbcH5gXFPYeN/5eN9qBJwhC
FSaQImgjozVafNUXzMWcpAUYy5mXUA0aWLEj7YVVUQWhEKJQdcBhgnGfPTbT0ZUCW40fMHACNBjm
LWAg+7VfD5HTfmzOEknFrtRVr9CVrMGVxXRkH0UgjQH/WYzghI6g3Y1V2x89nh4tyWdKoBxFySdS
lP1pzklS3V4ZyNVFS0FmC9aRoggmy8n8zb3lCle0GizipAvilS32pE/Ooiw651AWJSqIFQ7+XIIV
pXSaVWpo52m0DRpinCshCmscEHvFEtLgJe3ZXqA5IVhKoViOpSfEp1miHDaqZQJlITnCpX2FoXqS
1/CN3PCxkn8O1V06x1E1o9FER2ZQBwAhGFOCn/Y1mB1OaGE20y1EAyoMnECmJH/w5EFCRVTUleQp
5Mpwpqygh2fKE5mkFouWSQFCRI2khPE8YhjVG5bhW8t0pCrShfIMBbK0oLNoyzd5mNVRy9VRjmCV
E4N4/+ASMQVRKJyuwBoLltU6DZxyNmdzwiAM4sJQZimWcl6EKeXemBUuQMIuSgIqKEpTKs316WV4
ugZrqIZq9B6jQMLTFB+kxRx/WmNaxhI3/il8xqcdzGfKxdKhWaGh+kEW/oHL0V46Otp/BmikhgaA
shKhCYpmBF2altV2cmrQ5ZnSQEenPij4qYqoropgnlqqGWWGNotPomSI7UdeBSUjkY+IypBboQz6
aAhBvIwJ7ljZ3QgADmAYbZRB4GgTiUWGMJ5GAVKSSV03PYv7FanVERFkqqRg8WRh8Y1blag0Wad9
tKqYeWhPalgweKiH6uIweAKWaqskSCd1WCeVZujUxP/pmn7GMVrfgR7Kaozna9TreErCeMYSerFj
Oralo/Wp70nCe0ohWZKlN5blJ8xnHTiaHxCDIhCD70UCMRBDNVTDojKqyMaX7TEqyDlhAaXlK4mc
yAmoeBlhUYmnnaapokTCpt4sp2qGg5JqYJaq9pXq9tEhDInrqxZRlm6p4C1XIyHO4WymrtJQR0rS
RgUOQ8kTQ4xWMbyCvtROjcpRvbmHBV6YfIgFi/mWV1TJXQUprN4mtQYRtWJrZI7TH/amtjZLNFDT
t2IY5pUVclppu54rlg6l4DZnMHxC4fok55XV3oxqWSlKdmrnp3Yn630GaXBXvy4KoGauFE5NAokc
W0L/mu3FV8L66Xs+bHwK6sQOqiDMZ8v9gTAIw8dWAzH4wRxUwzV4rDCs3O2VLMkaH58CaMqmAhS+
Emo0YaGdFwEZkL9uqr/GqZoyLpq+67viwvTybM9q33SgmtKNH5XiVbtiKeLNYlAqF4jqjYmJ6Aqh
z08EDvuCB8c4CfWAERZxbbRtouNFieFcmNfFh6xlyY9G67W2LYH41YAQ8IftJttWq4PIat3ipIM9
KHZyKXOeK+D+pCcwp0+y6ycYruH65Ltyamc86HYyzXeJV59pHKEdysz2q+Zqrp2i5caFru2NbgIB
glhG7OnawScM6g5P7MTO5x8kwh18LDFcg6PJLtfc/27COlru5d7vjm4WPiECFZBSGS/LUirTRM2i
NC8qRC8Xjyf1hrH0ijF2kurP3qM+so32yisG5kdQOqerem9zXh4dou8MCRLgCMsfBU4gyYogfWRP
dIREso6NHgQK4i8iQav8wZvJ5C8oqu3jhJPbMgMlVzIBG7ABC7C0FOTchtis4mJO7q0DZ2irim/g
BoMnAG7hcvCsFu7hfkJ8SuefFA3QmdL+4GtQXZ94xSyivUYLZ66h4inuPTEUNmzEPqwg7HAyry4z
CwIcxAYd9EEicErsKsLrCsPtym5XNlpXimzJMmqj8enKtSw2pmWfsuw1FtpRXWW/rgaa+qvARq88
U/+v9Aru6XIpGZtp4pYaWS2uCM0jqp2VCyKuKePVgyBuUTowHZoHrbgUsVzTWLRFr85MHvtqXEzt
3fjorRWeEp2UbfGbDp1kJPdVJQdRSV/yJZv0JLuttPBCAb+tbkomQifRdbZql67rKbBrT3JwLnyC
f3xCBrMruw4DUMvyKEVud1bHxC01gQLa8DkNnDZKPP8yNxJsOLfcEjtaLDWs6XqCD+vwMjfz6uYB
A8mBNCeCMNzBNAgDHbgu7AqDN7fl8cWlXGe1XTPhyhUsXVaqoSQQ5nYxzUZvF0vvu8ayYXPpYb9r
wDaLmp6VdDDFdLDhgY1pqYWxq2IpfxiuKwMu55X/b6r5jUSv1E/8TFy94lGUKIoKkkTnsevY1CrS
gpSmLU8SFpgprSLPNmT6IUpbMm/39kqjtEr7FTPwAiW79K6xLQIryExbNilj57uuK7oS9QZXywav
Kz4LLpcqyp+EWg6CFVQSKHiHF2kUUALVqcAGrOb2nl138+jaMMMCn6B6oyCAtVjXN1kHQB8EQiDI
gVmfdczFNaPGl37CpX8nwgzf9VyOYwx/3HghbwFxrp3+69RIIT1XuMmd7j3H5xh/MM0ydqlFh6je
o9CF8BmXWmFrmOFiK2dLJ06a2i2YxzP48axgk+FEnUcH54lK9Jl5yXcgsvZl2GPKKuItck7KIkr2
/9UkC3dv+7Ylm/RwU7LbEreU8wJx6wKV/1Xk3OaBAHVzsisuNsv04jOXrmvhpiSXR2eZOjZ1RKNX
RaWAfRXl7vJddoJ5IRV5l3fUSEKjNEq96nkwJ6wM03mj8Z5Y2oHJma4yl6XqijUcCMJ904FZB0J+
9wGlC7EQ34HIGngQEzil67ekn7Vcb3M4dyWd/67xpWd8NbhS4bmez2yf/6knXLhhY7hhS6+ioCn1
skaaWy+vk+llt5+R/kcH32KG4qRCRxiM001x7kop/CM3tdu2vvgMRemuVpJ6jAes5aRAGhEF02oS
mSuHTYuSLzm5Q7lwX7mV8zZxV/KVu7S7v19yI//IsHvoUI4xmDfLUE93ZApCT1v3B7dG0FEuXm4H
9amjV2kcCgMapJlXaNinw6slfjIx7sk1ydane8P3MSt6fW+8o0NzIlB6H0xDGoh8yE8DHVRDEDPq
gHe6p3t6pf83NZJsoKd6oDeqE5PcnZfcYANqrHOprAs10MeyFA62GAN2rx89vvs0kQLW5Cw3Ke8t
DEnYdbw4DGEokL9qunYO3narslsTceZN5lEwA2dd3VZe0VbdADv5upd7uUu5k7O7JU85EFG5lW9y
TGOrT28wl1t3hSM2UfPVH8JyvW9q/6AnwYcNMLnjO7b5eI3heqZXzj98xHNz6wZ4gBu4pofjxRv/
uh08bOqu7g9zfKM/cwDQQSKY/jRPQzWE/MdyTTXcAeajfqfnd8u3fIEPuH7S1zSGbsyDrjWys33+
K8//PK3H57oetoUXfWMzb5qmOZoy/71T6dS4qtIrcL+j+S66+Kru7XPK6rki7RKxKkq9+FyBNt4c
HdG28k/SdASPa7h7mEv7lZSzfW/TfdzXP9y3O5Ubd7ADRC5dAgXqMjhwYC6FCz99GuYJV0RPnoYN
+0RQIcKGDiVJQoUqVapSpUx12nTyJCaVmFCiNLmp069OM2nWtEnzjylTingqcqTITyShQ3v2/NPp
KE6kRxP9SbSUJyCpgCTZqerJjidBdj4J8voV/2xYrwEC0El0p1o1YdcSCZt2De6da3cS1a3bB28g
vXv57sWEF/BfvIkG2zVcF+nSnTt5OoqUauhQSJA6dvQk6fJEzBM5e/rkmWJniJYl4epourJpSKhX
l3YdERdlVKZpS7RY8GBu3QodPoT9e/ZH4cNxzf6Na9ipYMOCLW/OvGLF47iWfbyF6lb2W7a40/L+
3VZ247BPTS9efVnx36cqLtTNTBczXryYya9/H39++vXnz5dPfz/+BJxPF150Q6gg3A5ckLeKOLPo
oowOykUQ3hyCCJJUHCFppl82UemQWA5ZaaWWTJwJppueWlEpnRRhrKgYFfkjqcPqcioROjppiv/G
noSSqqOshLRjK7HEguMrOMgyS41qpqHjmj/omCata6hUA7A+5MhLjr68/PLLv8Tsw64dkXoxxqAk
m4yyyjB7k7PNOtuIzgtFw4UzPF877TTaXPtzTz85a0jCgww8NDeFHvKtNODUMw82iKJjrrnnnLM0
uojGKw47YLqj5ZdZRPXOllLE+2g67LS7DtVNmSs0vgL7sy+/Wv/7b1YAbR2wPwMTXfBAX4G1MJcI
ccOIIF0amihDR3R6CcRYLuFDxBFJJPHDlhI5icWnZkLM26PENSWnovwwakfC7rLRLhr/6MmPqSQB
xKohuzpSkDzg0DcPr5BUMgA1tpxGmCmFKTj/LSqnAaxLMB1+2MsxMSmz3MYii6RNNzXOjGPRPvsY
tI1EE03OO+O8TE+IVF45tOjc0w1RYQfqDc9h/IT0N0mRO4U95j4J5uefnROaufI05RSVZW4pxRbv
RH16E/C4AyY7qoG5eulSsNaOuIheNVRW//bTNcAB7SN7VwDVlhlYsHt9u79hdzOooAoFWdYjDUv6
EJMQL/mb2sBjCfyQQEYM5NqVtt3WzLo2WdzbmcQ9U0am7soyy79u7FGROvyoIxKp6rWDdKyK9DeP
1PP1il9+yTojEDlkz1ENOui44w7bGZY9dtm7bBji4PvqQ/OnjipqqHk1Xh7Okef0jE7oP3Oe//rq
WV4Zz9Ao2khBgw5FlO6fKcoetkAfpEg6SaMLRiH2gX7//d5sDu487JgO9en8fwGVVFO48587AeTO
SKzGqtm8SkEx05V+dtVA/JQNbgRqG9xqFcE8tI1uuqjQzD7jEVQ4yyTRmta0YjE4Z/DhbyQUHB/4
wBeV9OFxj1vcX2RIMaWIi0aJsQvxiDemvRTGXT2pw1TkdRUiEUkQ+1Jd6pjYxNS9Lna9K4zt1HA5
vPhOL77jnfD40sKHCcZ47+LJjyLBPDddpmQjmx7IosdG61lPT7Sh3kO2R6juMahYn/ENnmrDR4gg
BzmeOMX4VMaeoBVrIbwp1nP+SD/rlIIW+f+D2ixOsr/vXJIWJckkAAc4ElbV7GWG6hWu/ONAU94H
bXGLW26+N6tTwu2CvxLEQO7WwclEAoQfOgQKWeiMQMQiELy8xAmdMa0TTktwiFsJDHuICWWW6DBO
SZe3DAMYiJFpczwZIhFHRzok5suJ4QwnWbSkRdmpoYpk6gOWMKclzGlReF4M5l5aWE++YJNyalLe
PpmnGY+BRo0ADegbSYbGN53GeoTaIAaLhT7t1eY1K1tUdFo2KUQq8iJBy9QfOZU1WmxiFpig5EhH
WslO0OKkKfUOAP1nCqYR8DpeG0YovRc2sdHqlKZcG9zCViCblvI+eKggfwhkoFhOaFlozFD/SaCF
CWA+lYW95MMJeVlVYrJQLxJDnAsRBxjDTLOa1rzmFDlHxKqMznSsE+damUgGsrCBd2h4yzXS8JZq
sKGc5tyS7MoZRb2ggYv0/JI8J8ajMf5on1QxY8eoB7KJOJag1Dsoav50GTqK5iGE0uyxLHRZPv6p
NipDjoMmRVEIsc9YiPwZReMoHKadFKSV3ISHKJkJD/HvO53QiS126z8CUi0VqJrIbbrXSgqWLadm
E9tOI/i2oDJDqERtLi/yYFSDeOUzGYIEKpaaEhIZ7peBK6Ywr3rMqAbOYc6UGAzZRZg+9EWeXyoM
j961TdF586xJYut+U4cHsggMDWkJ8DTk/zANhfEVnr+LYsOAFwjABlYvXoyvXrDJudCVUWOKNeNV
sFK9NRLUjSSjLGUyVpnrqbFOF6lQUq/nJ1Tw6XqLcsiMg+EJoEUooxgVn3RM8xFgkASl3vnFL2yL
EkrKdsgn9Y5uSzUSl45EJKn4ZM0iBDOfRhCnyWXuKKfrXFstF5Y+veAFiyWJZvmEqYvbRA/DO1Wr
uvm8cKYqCwdH56y+cL3syksXBbsXvm4uiPalF1WEBBYl8jcPZMgDHhad6P6+Tg5osBKV0DBgJ+lV
r37Ool8d3GkI97mrN+JJUICkYY1ZZcMddt6Hp/fPkEGPZB0hMZteTNnlZW/VIjMZamJTGv/ubrfW
fqQjhCwSnc1eFMd6RBlInGwKlHYotpM00f5mglKdPFlrWotycLk7Wjti8Lhnw9XZwNxlc/tHqOmG
Lil7VV1dHHVml4FEJNBckxjyLcJzhvN5rypnOLtQMDwMuGHocjmIbanCPVqDNok4aG8SKQ5JBCcT
8VDxRjPa4oxWdOoU7dYAnCHSBIaLkyR9DXO2M68L1nSDAdvyT1NY1KSmimJRXS+DKm/my1N1Vh77
T8cuq9WdqcysJYExNmWM1zofaJ5QxiePTEY4203Ng3oz44bcWJHIvroePUiSZzm7E5k4SUhVUlKU
yOSkvSXJSKBcClQAg9u1rmMig/VTVwL/dWzTvbLdFQjUCuJB70e9W9F/8pPFJGVHa3Zm4KKqb6rq
O87xZQk2rUj5utDFKQW3Il8TzrnODVHQUyHdWb+ZxCZWPOOLRv3FMd7Et5qz0pWONBp8h87a3R5L
WPzdgxnM6b24PLBk6pFZqxIkN6G6MooNXT8nwvOsfIznH/uwZDWGMeuzacOueaOtnf7ij2wX2KhC
6KAgxL08np97dPLNdpuNUg/xrewqie1sU6pb3V6b7amAe0ji/uI6RqhC7si41kY/IsincgPeDqK6
qqtX1M0Bn6vd3k2DpofwfMICdyIx0kUlgkmqHo/fIu+8/EKd2usw7mAp3sVdbERKxKhz/yIh9O7L
4UYnSQ6tvzAO9W4QBxvN9T4O03oQL6oondYprxSMCFfO9zxNeOSgKcbIrDQM+axCw3JOsaLwjJpv
UJyPM3juZOBkeeZt3swsY0jMzKpwZNwE6o7u6baL//hvMnBtUaRHtbIuxXJsemJDQzjkJeBvJUKq
JWjC2jrB69bOEfjvg0JCOErj/+KwuPguV3iKQMZMN8bsgg6FAW8qui6RPwBvPi7objRDKH4CTUCR
J0qCKRQvmOos8iAvEB5vnrAqECgPrNjFXThnFleQc+rgBe2AXnQxBknH0Ggw0WwQB4ex4siA0fQF
DgAGrnqQGdfJ9pwx5XSvdzoNeBTsr/867cHAZEt6ROYazvjcpAnnZeaksCNMTdU6QwsPKvs6oozK
qMTMUOnKcAyhLhK4CxUwZg3XkLssA7PqpFhWTP3Kb1lUg9lciqmMTKRYgiWmrSZKAv9cakMcYRDZ
cB/lZA4bgpUY8dwkSIMWpBI30bkwMd3644LwJhLOBRQZQyUVQYe2hXgijAP3rZ6wKqpacZ6yivJo
5A5wxDBq0ShmxCe1KXS4ifR28eFmEBhZjxiXUuOQURmZESp9pw/OAEtsL8FojwgBa4tUzkuAb3jo
QIxABxCGsoh4cSoubCzT8sIiIy3F8dTWsZ805h3XEY0KStbM7DEeIx8HcSJToU2o7iL/069OpIeO
OgIk7tDrmApFTKQPaeLaDNJZSsERgKEv1zD8JmNjBuUi6m4jNzE3ZolCDGLMQNLdJJG6miuWOoje
UpInagLxNJDNIkyqaDImYdKebpPCKqxdatEnUZAnFk4ocTH0Ho5eSO+bWiecmFI5ixEPNu6JAmAZ
o5IZzwAv2KB2qAjkdE87qbEIFSwbkfCHcoQFR40sS00qhnItL0Y91bOIxpGfwHFj4FLWMPOMSGML
i27eJLLwBlEo0HAzBDIwGyIA8yh6MIS7QmJDTEEiJfMxaQImUuQmrk0iFVQ/+VJD/DJDjO77vg/7
smeWDmQ0T9OCrItuPvRDJbDdTlM0/wtkAanrujpIEs6lJ8jlW/TshbqINmfSJqdqR23yhzqvR8az
DhTBBYUTF12w4bjp4YwTiZKRrZSzDPCgDKaUSqk0BzduC15POrUI5LJTDqgTnXLEdqjoKn+HCHtw
03pPK/8MLIMyXojoYtQSEILiXGQUXuw0TeitTodCLSMjPjWDeeZtTchQHuctFV6k8CCDPuckxSiE
QOmEQjbIUZNqPjMkJPRyDRf0WW7CMTvBWShUQU3hQvOxHkv1lo6uIiWh/OwGRN9NRCtRAq9LVhXw
3SDRVmtVAjmRAgFBUM+FRtOlmdQLTHCzJnWUWH30nrJJiJA0SZP04Z714bDCm/wFGP87btGMUfVQ
r0qtVAzwoFujNEqZs+OSUUuj8gzOwDrHdExtjw6uU12xMyr74F3pYCp5xxqlKEeaAiz31V2AEyg6
R5vgRShAZ0hlJEZ4M4dmEXni9Iy08ObWM3lM7NUAdSgKTyggA2P48bHqxG4C8x9Bs5aU6jEq9EIt
dD8nVDEd00V04mT5Mi/zct64y+jccQw3g3tm6UQTMERTx0Vj6URzdkVvVTcEQTNyruiEoiemaQPB
xJn4jDZ91J6ER/jCslm7CVpP5yuOaCueNeJM7/RYL1u1dUq9lWzFoFvFwEpv0NGc8vW69Ev1CuTc
1QzWwAzmdUz/YA3wdkxpp0vR6W7/12BIhVMR8paKhvDPxBNhFRZgDZZxgRJhkSKs5iuMfGT5gmTn
DGosIwNP9Ulig07WILY/NVYzBdRRa2kO/zGPNCM/r80nKrQUfAIyMBaXFuPaymVlnWVUL/UxvPD6
vNB3NZZ0WRVkEZBEITFWaTWWhLYjvwKNQJfeZmRHXpJpxQpZo3ZYodbPllARmtU4P+GI7kUsIi7i
jkhrZ9CJmtMGw1ZKo/RsywBtzdZbvzVcm3PjkjEO7ldLvfRt9/dLa2du1wCAAxiA6wBwAfhd3dV2
pCRvAddIiUhwCTcR2KmK2hRvB3cW27RNf7MW8zZIE3cWw8pLvMp4gAJIzOgsT7Jx/8mzctOoMtYz
FfxAdinDYzbCbiiExTZ2MOVtdjsBTWC3MRR16PLzRXKCdkPRAl8Yl152Pb2wZnH4IqHHKxCwVns2
eXFVEmMVLCbwE5IPLdOTJyznL3404PCiaQXLej9NKpcwF71JK5AIicRXEOA4jue4ayPOScPJWtE3
bKv0fc3Wfc0WfrsV9erXfu83Dt4qO912f8/1XOV2DdrgkRnYSHHRgKloTAV4kqXCDQBhk6dikylZ
SubVFldwX/mVFj0YlXlyzxwGiJjQPM/zeVM4T5fPPN0kMkRxiHciYwfFM+6mlkw31/AGDHGJJe+P
J2I3Y0njc0FIchYjFEMChiHDMf9kd4kxzGZ17aAGZYNu9Ypz1ZsF7ysGsxzLERL69HlpxOB+tJ24
iPOypC6YJIKjqb5EbxeZ9HTqOCzgGI7vGNH6yxi1tWzdN34DWaDDlQzGFQ4MGX+h80sVOZEbekzn
9n8BuA2E0w0uWjgD+F3/YJJxkZM/epNDetCkgoBD2SxO+qTz9TDuloIvGHEVNgXNgnrla+DE6EfO
cizPBWGBUkacl5aP9hOHuCbGyMSkL4cB1cSq72LRBClcxBGCoj5b+Itds6ktsDF8Ii+DgprVM2P8
ifnupYpbNHWCNlfHul+wq9WEBCu4OHNDxyhUOYxF+C4Eo8EmbEvswixSuYK1aTj/Ca3QtmJ841if
9Rmw7diJ9iUZE/vQFA19pdSxzxaQIxtt13eQFduQx+CQofNcZadL3fZc2cB25haS66CiLfqiTzuj
J5qiOxoQhmiTdVGkQRoXLZhJqlIIryhLqgivSXmUYdpx/6DgroiVf1TUBFZzgRKsJkeM1MSn1VNG
awQxDstyBUpOzCgyrLoodItGdDl08dJQW1MpmtqZLdAx/rW5iw4uHyuKRdOJYtWsyxqLscuX5xtz
21oonhudK6+93slL7pq+fDNgAxdJQc+BG+4op5WOvwKf79cOulaxH3yO/yWxm+ifK45Kz9Zb2Xd9
DdopDdkO3sAN3oAszICRHfpt/6mSDkQbF0u7tHHxtN0gowO4xS26o2G8o40UgE0atxFOrwBjgsWU
RlqaNzHYioIH4eR6PCvH4ApjJyln1P51YY+7NS1HciiXH52Pi687RsjFmbl8u4FCyosC8ZgiMcSl
cZOYSNeTHetz1b6CvV31m6/YeDXISIzEe+cFaQv2rVOwKfrcKXhSXdRpd5SQvoTIo4+UYJu1tVub
WY3yKAEb4gSbwePAm8Q3GSXOwxtcoe9XsR3tn8GVfd33j9O2OROtkMfADbjgkduALNqADdigxEv8
xNE1xSV5xR/5xit6xm+cgAcYxwm413N8XesVKn+QTPbWdsSzlFO6nbbSYXqvnf/++7f7/L2SleD0
unEt50Ykx6ZXuIWRdhQnp8zL3MthRMtzAt3HfdzHpWKwe9TolC1XeGPn20g60orbW5zeDWeXl98h
Ebt00QVTWK+lpJrU5Z379fNeUNGnAvSEU5NFh0krHVqh9X4lncEnXtMNecIPWmwFGm2rdJAPGhnj
YAxAvA3qlg3MgCy44OTNwOXN4NVjvsRBO8XbwOYJGJLp1uUjWaJT/H9zXoDpdg0umQ6G3m6tcktP
Tl5bOtnNgjDMadOintN4L3ZQDnPwOnLlazAoT9BVMIimGtDLZITBXMvDvXFYRHJO8OuJtIXtNGHL
XLlPUEbqlEjNWz0lViz4vd7/a9VWW5Qk8V11VkcSA98TzvOtBR6Vm96UB7dzFp6km7XhPafhiaiT
HR3jJ57SKZ103MAOXjzEK53T+dnCQV3UR31s6beQO98NWh7mVT4A3kDXbf7mIZn1dd7mcZ20Iblu
Jbpu6cA6ad5ug19d0SnptVPp/XbZU5pJ+irq1VTqtcidUG6vjjzlrukVHwbJecRGLA8xPHgmNA9c
MK8pmrrdSe2gMlfM3WXdvzzJezoo0pwsryIsZBVn5TuK86WseZYBF+00ASKPwIF5dAk0aPBgHkGC
7NgBBKiOnzqK6kSqAzEjxDoUFf35SOejyJF/FJmkiFHjxogsVXLkWLEiypcv/yO6yXgTkMOdPHva
cfOTZk03b+zEOQonaR4yZPA4LQNVTBmpYqrigYqHaR44R8e4ccOlzRozZtiwMRMgwBuwX9uuXdu2
LcevXOq4qSPWDJ29dNic+SvnTOC/hAsD/qvmjJrEcho7fgw5cmM1fdTw3fsn5N5Emy0novw4kJxA
okmPHm06tWjJpUm7fg07tuzZgfrY7pMot+5Et2/v/g38Y6JOwIcP7yTSZElFkQBJ8mTHkydJ1AFF
iqQc+R/tH015NAkevJ/r15mTt26dunSGgnSxX8he0Kf47RES5JUHPx5evPbnxw8gfgQdJMhC8AkC
nSQqLagRRWv8sYZJEcIkFP9NEaW0Uk0Q3fRSTGt8GOGHEMpU4U1f+YTiT3ZUONeJRsWRFBxLNXUV
VDZWVZWNZThFRlJjjPHGWnWRZdZfbKTlxVtdBBkkkGPYkSSTQcbVVhtt6OUXY4IFJlmXXn7Z5WKX
fQTigxBethkdtjmGBmqnmYaGaqitVpqbcso2J22wydFbn7vhdhsmvfH2Zx+C6sYdcXcUt11y4UH0
XHSSVoedciJx99F34YGH3XUWATJec5A65Al99M2Hqqn1DdSfgPr1l59Tsu6Hx0AMEcTeQxqlqOuF
JHIkKoMbXYQRhhlhxOFLICoSYkhlrmEhskDxqmJcLMblEFJKMfXUjThOBe7/jln12BVcVpZVWBZp
ASnlG0/+CG8c8M7LLlx4YUnYYFwKxu++/m65JZhh8gUhtCx6yCxIe/XhGJ1ytHnam5CtZmdrFb/p
Wp60jYYbcH0O+nHHuQVqW26Y/lFcIiQtx1xGkthBHaWVWkqSpuH5wdxEF5F3XUaiUhfdJ/PJx5DQ
dnwSnXxDxycQgPnlQSuAsvZHq1MC2npgrzu9DN2kvQ4rLIPF4gSIiWWfTVOIZzrr7B/RtkXtT1/Z
lfYabbRIlB1jwLgtt93eGJWOOzKVlLzmEmnYkQF4saS77tIr71GSS773j/Ze2Vdh//rbWMABcy6w
Y4rR8aFQGemarLIi7hVa/2N1SvxYnw1XHGcgtWf8Wu23w1aybrdpXFvvvJUssqG2Bc/ZcCIx2mim
m4YarEU4h7ccyyWxHNNF5gXrs8vOSUoqdF1DN58dDRF960C0Qi211VVTzZ9/AhXN08uk9mT/1ywZ
e9NDZpvdkpz8ZEMb6ZCIzFCwNZAORDT5ik5QVBS5qO5DZBGLXYryIr7NiEY1CpxUBMcjwnEFSGA5
V1mwUKQzqEstb2jcj/T2o8h9IQ5fgMMXZjjDrjzpDWEZS+b4dZjDDKZfAOOS6IwosNGVDm8+MVHd
FEgHNbTOS5XhzGV447qH1WmLbbKdaloTp9q56XfAM03Izni8PgQPNyhTmf/vckOH3NSsItPbVHg6
Ysc8msQP46HIRSDCvQW9jGvSuR905GO+UtGnae6r2tSgNqtG4qohD4EZirr2Mo1waCUE1EnZKklA
jpTNRDlxYIWghUoRgQhCFmyRTyI4N45Q8ENXIgstgbI3bTHFb38TnI1ktcukzNByJawlkVCowrRw
gQtuaJwX5kVDGtawhjG6IeV26IZz/VBfQCwiETd3xH596Qykm8snp9UTtAnlQVGMDDnRBM/PqCER
sxNNnCSWGjth7E5fxKdjiIfG4anxNXwS2ch2s7I7KlSP1xsJeJaDkoo0Z6JhUxDMBrkT8SXSfOdj
GiOpNjVHRnKktdpKQzL/2ZOupbOTxTKd2So5wP2JkpTqTFsdUknBP5jBbglsIJUkeNOd7vRuJXKX
tuBAhg3SyJe/DGEwt2BDeY2hC2AJizGzwAYUrtAMWTDDMpvZpBhGc5o3FKYNc2g5IdXSL4bZV77e
2jlwhhOJkLGMwVzEq/9dCIpqYINl4JkZkiysSxSDnT3fdE86WWyx/3Rd7+KIxtu05jUM8w1CQ4K9
iEb0JAhj1neu55EIefYkkdCZsVRi0e9Zkmvmay1DOOrR/JABpCSt7axgBR9dWdK1rd1JAVnEorOB
MpbALS6LykQ6sYjlWWVap1DJgje3OGRvMepRUv2GFRA6lQxbyANUhSlV/yFZ1ZgoZMMKs/AXLJDF
q1xY0o+uIE1qxsiGwhwmMbO5Vra2tZtu3dw34wq6ztHBDDNF53TzqjrNZAaeA17gXqSYxdfdM2Jb
lBjESNPFxL4OoAyzomaGF7HKum5PornNPDGTHNFuFjwTiklHIgShkjzoOyqWiURPuyudoDR/Ku0o
bN+jvtu6j7a2dYqt4kDJnZwPyTzJEIVUWbAGjlJuFzLuKW1KS7s9q8F8YQODzdLXvditDT8lSi7n
C1XsNmXN49ol4bqrBfDat4VhWSZZsIrM8xYGher1ajPFesOyxvmsXEErCfG73hQaJoiM/iYRi2hE
Ilpmp0zkSRyyZZSeTP8QilHsw+gWCCLWRQZiD5tdY0gdYVOnujG4iWMcT5y8BX/meBrD2Gksm4g7
rGyO0IoJZzcL2kyF6NeKmIhFjr0gUFbSfj1G2mvpIyOBhLTI1L6aIJjcEyRf+tK+Td1N61CwGDNw
yioaZdnsMkoqYVnLFiTqTfPCZf0u2jADNsPdqMQkvdFwvm7ud7+hugXrwiHOcbbmFX6UJKpy4c5Z
Ta+esUAYiJ8BhfZu7zOPEuiynhWHUgWSwsOSaHnvV4ia+y+kAfYXvoxliV/BIIq4vZO7cGS5Dz5D
Zf6q0wW3U2AQu/BpSE2xOvl8Mh7mixWTB9lUk3jDVUT6mDCbnJlotiL/w36QmSTkYmDhGCK61fHW
duLsHzMEDgVilUhtS+RIDoTbp7P0ta/NE7Ot80MLfImJUGRghzhRlisfcHNPudO9+BUwkRbd6KBr
l5bn+5m5lG9SvgsHgEceqUjt0RYuf/mBbzwOB59qF0DO54lP/LwQx4LpRS969bbB4vGKb6FnCN+O
w6WY6629WW5vpPKKvDDy9u9e7M3uuyY+8XADSgT1Hku67+WdKucLY0IHJlL3HHasroyrkzfP3oSm
wkqPnW1grRvMYHbYKCHWZqsuY/LHRKY5fuADHZI/18aH7EkRRLSlTW1ZQc3skUxqQ4byfg2hbZlW
SXsnSwe4RImnIhCE/3zJp0B6wWW2RFQyZyUPSAckF1e8J4Gr5xZF8S76BiM1NGial2b+FnkB52Zb
UHCcZzmft3Bc1XClZ15pkQWlF3Gpl14V1wXwAl8Zd1Y0NC8J93HjVUHLZFVEUnu2d3tetoTzZhYS
aDfvZjB4gRcJaHfFZy03RTp+p3x88TnQFzqF5U7f9zsMExmmgU+JRWGsJgfz5Iau5mqBNSIocSG/
5SAJUzCeJXUawnWe5BAPFH898XZKISNlh3/5VyuJCElNASslxRUrMlM7sW0wF3fnpiw3xUBXOGUu
1xMSREHwZEtXmHxkcYGOtmheVkFkpngeCE2aN3kDF2cl+G/+xl1Qdf9DByeEdoZnMTh6NJhVpWeD
wDh6XtUFjIdDZBVVXwAvTFJVVuKMz9gWIFcW6/WM+WUWDbaEqNhgUEiFeTEWzyWBojgt6iZzPsRl
zkd4YKiOcSViXmIxp3ZYQfclZChPRdc2VliHFHJTnmV1SyQTf9QSn/SHvNJRSGZ/hkgQRZZ2ascj
+zc/cVBl/RM31iJzmBh4E0gl6WYHGDR7FGiOv0dp0RUX8OYXbvVoZ4CKwMdMRNEkXgBD+xaLtah5
sYiCtLhmTAFVWnBDCMc4n9cGWVCDp2d6EEd6EweMQpl6qtdexTgGPZhxGTcvS6Jw52Il47VMJlR7
zogX2kQYWbVedpP/hF/Zblv5iRBoS/bmSpzoEPYiSxD4e2ORGSW5jmBoGYkhJnXpjmuoRXopGd/3
amoCh86ihzJRZR3Cd4NpOgHUh+/nEx1Ff4MYbYgomYo4EI/oBnd1d0BRZmdjgG2gU6B2LcRHFD/V
lvUWiqL5U2LxQyTnhKm4ki3EivEyk/M1aATHXW6WXbuUeTqpjAhHZ1dSg7w4lKQ3lMEolHzWVcvU
BUwZQ8c4VkGYcEa4cFVZZ1h5Fl4ZlkRyjUNlJVtJiqlYB3XxEt25XM8FLfeWNzD0Qms5N+W5U6Vz
NwqUjnMpMJSxGIvhaWAohqgGGZ52czfHGX81JlZoZcDFfpwpkSgi/4D2RxD0F2RX0UHiEkk7ol1q
JxD1d2mFuU4lchcdSjdS+I1aViathJpABW/cWWZVgjis+VZdeRYVt4pjwHiNx3Gd9140NGiXxxRW
sKMpqAU6iXDL+XlVwFXGWZxYcF4xeKTCiJxVsJRvwHgHdwVS2pRBKKNekHBVJZ1bap0T94TXGZZV
GZ5cAJZi2Z11IZ4dSlREVRctd2CZtp5yM55ZFp9YQlf0iadg2EVU5J9i4nyAhY8tVVwTYiEI+kk6
ARSM2VpIphQDkpCyMhU58kGAM6lPMStJdaHadmmXWSZuqXLFNTfEdTflGYHhyCIVWHtRuJJysVYj
16KJ45pf4UKAtv+THieVUNqU0hSTtIh5NiSjLtgGRAqUSzqURnleQVmcRkmsXbV6Qoql9MKD9PJM
04qlTEJV0ailV2lMZZFVL2pvWlkX1fiMVNimq5qicINBL/QkG6luM6cX6+WF3vRfeUqv6vgX1sdg
8PQge1ig0WJud7eAL2cUDOqoA8FBkYojCZuweCAGDOuw4oKpW8EVkuMQmKiaUWSXYuZuIgkXbBlU
y4eSIJmd8NoXIjuqW4k5IjdEQzRvKFmELBlWe/MF8PUjzVRn7fU4TXlDP6qjKXh5BaeMjLNMwoqs
v3iUpkecxFqspveLQOmkQlqMzwqtUzu1WNqTy9lMWYu12npM3pr/iqtXheSJF2iaolNSZvmmN2lr
tlnojaSIgfwFRAFWr3PrGImRr5fBTn9nZTKFN1OmmXrHK5MYbZh6XZCKsFUBBmKQuAr7LQ0roUsh
sRQbFFT4iWhiqikqN+3pQyJ3jUxYskx4e33xrhVkeyXXsqfbZ8y0nC1UrTMapFf5VczJedIEizqK
eUB7BT3JBUQ7lEartCtEBUorvEjaVU8LtVYro1QLrTY6L1AqhLfaQlNJFuVFcdS4etVZZ+E5pm4x
mixJF2zRgUUhvhvZkaNYb6X4tiipviXnX3JFt+PUhn4qZsx1nt9mhZtESqR5TtWygHlnadrWqAKx
VAyrsIlrwGCw/7iMixVZEblHoXfj2Y3fOGBexoVUWKIfakKr+aqn25Uo2bmKxsEh/IQc2DjWGiQz
yjjNqJzMeQUZR3C3y5u46IK8O7xLWgU0iKQ1jLRZQKROKp3H+6xUyrxTOqXKOLNW2rwJB6VLvJzS
2LUvy0zai6bMtKrt0i7nGiRQQr7kq25Y+Z19IW9h1nsnF04te6d0Kxh2+3uglolWlr8n8rcICsd4
RS2Tc1SFKysFjMB7bMCKm8DfIi5bcWmy1LbPQop9YbfWi5oz94yby75wFcKRLMmnSBZPuiSMA5tL
/Lxbynpj4MI/qgU/e4u/OsNVMKw6XJw1SAVpEbxIm8O/y8NG+P95LgjE0fpeVZqrLdzCR3yluIrL
Muq8zxQkwLpeXVXJX2WEq0dmq1rCVuzM7fIuT+KSa7uSlKtcSYh7p7h7GdiVa7xN4lSvaUxOfyVU
ydVAdHOudBxzmukiBjYtagmC8xUjAmy4VIG4iuvHfvzHCpwVllmFwKdcxrSaLxqF2ksX4elu14wu
ZjzJDT3JpsdeTGK1wQy1Lrily/lMu/wFoMyzoLyTQru7u1ukv3ukNYisUJAWUICsrmzSOQyUPOzD
UQC1S2m1RGzT0UqlVdqbV4rRvxwlSYLJQprM17vMVGxVdQZWYaXFzQzN7kK+4vuBUcKMcBGuEQyv
S2iypAjCg7H/xm6ZLxnYvvDbOYpBzgsUn+IYqpi7lhvZgH/LK+saz/M8z7xEoYzLx2AQBnet1wnM
IyPkoRXpniUbjidrVeSqzP+80A7torun2OlFvOzlrD8Nm0LtxGZgvO/1lBvN0bz5qyL90iXt0sP5
yqK9ygEQvC+N2sSL2lUQ01ArBVYrtU2p0TNLxLL9y1U6rVDry1gqpNGr20Jts1lr1NQJVj+dvM/s
ktDqOMqbVsxYJXkBjl9pwRnMrX21vuxbeOA8V/MKGIlBwSv3bmidzh3IE7BE3h6Ytuv6JJIzz5W5
FL3UsAl713kdBvWN1/ed13v8LX3tFe1aS6Jbb3eDphF82KN6/4TTmM1OqHvUu4sS19heWoSqC5uw
TdnA+dKW3cmzndk/+tG7+9mpTNIgPqxZUNoq3dKo/dKs7cNcINNR+6xMINtEnNkzfsSdx3jUerUV
rePN9NuTHb0qfL1E0QVQ4iQxy9zKSzkdp67sEo0DHq5XAuUCPp4CPcbc5GhjzU1HBNZDxBdDVdDE
Vy0/lbl/O75sjS3T8oHvwt4B3G/wbdf6XN9xLudzrt85siNw8BNvUSXfiITgGRYI7cVhSQdYILrl
dbpmoVVey62oh7o4qFUVt5S9zTibvHCoTRZPG8RSatNFHGgHJwVDesrLKuqfbdI8zMou/dJQoOoq
zuIsjtGv7f8Fm67pM0vjMy7rU8qTvD3TF/2kyBuELdSM1Km6VHWr7tV6XRE5Sh5DlYPslUMvwJ6i
IDdmqxquWt2i/QXJhddfnGMYYXaW4vgW5Yst45tLkwPX5J7s2gK518VLEcq4+jzfeD3n847A+90j
XiHgKnrVoxvQqxdyi32d1AvC81a9X1vMyBSMOLhnSArpkY7RE13hRFpBPhzZmS7rPF3KpB7aQVnq
I77DqF3aVIDiJg7TThoF7SXTn46lTICluXvrtF7rGWfTT2njFG7RF33JsR2VFu2Msoy1l5yzOmtN
sMdxyF70kVPuzQvsxF5V3qlcU5wX+mXlQcSyi5blkPxo11j/b1EYF+Obxd2reC/JN5RXODq05nPd
7pYqOHZd7/E+72+f34kLFT3yE9M4stf5hF97L2bQsoa+aA6+Z90a4Vw6vQ1H8MVpXpf+w87q2xa9
4j7/8LDtupK/nCd/8qa80qKt8Rt/4kBZ2lFABapO8qPP2q0u0ykP2yzf8rF+67PNm5m9yx5N27ne
xLDr81Jb20E6w8LO46ur8zI09GQVaJ4cX9HUeUo+zGzBTP5ub99ajYlt9dHvX3HbaN2EGE84YGfa
9e3C1mkuVnzTb/IcI93lZobLVJSKuAfMx/lN33Af53U+93DgFdrptQn+FxU0piBn+IoNjADBJouZ
NlwMdkGY/9CNQS5mzGRhg0XimYlYzggcWKUgQy4JEXoB6QUhwyocO3YJmVKlFykiPUbpwhBKFok0
s9y8iYVmTZ02sUDpeXNmFioBAkSpUgXKzKE4cc5MmpQLTClVQTJJeUXrVq5Xmnz5okXsWC1gwZIt
u3VMyIQmO3oZM0ZrHLBX4np5M9Itwrx938CNOwYsXbOF49AljPgK4jiB775ZuJBjwTaUubRxyIbN
Gc6dPX8GHZqznNGdSZM+g7ozGzoO17Spw8XN7DeQbdt5M8ZO4MO9EcOBk4cMGeHDjRvHQwbP8uVl
yuBxHr2MGOrVq4PBnh17GDBhvH8HHz579edk4MR541B95v/NnzU73HgZs5n2oj1bxI8R/skutfvn
jSkmg6pw6KaIsDjwJoLiOyghkdjSi4uk2igJJZXWWkmKhGDqQsMuopBwKJ16GnFEp3I6EagshoKi
qKOUaupEnIJaEYqoTmrJCya6qusLrXwE66uw0EJrCyPF8lGulVzyCCS5rvAxDrvuwssjhjzCErDF
zGLsCym93PJLugRbLDDIBLyMi9hi24hNh+yDM07VPJsTNNbWg0222dy47Q07utgtLt8Q8/KwL4A7
brjklINOOkejE2M6667Tbjvvugsv0+/Gi7Q8OMaIKTP1IqqPMyzUsyw2hyz6DD+KXrWI1IEIOsjJ
wEICEEv/hih8KCMGr/xIJSslnLCkkLrSCkKEYGJ2Q2JRLNEmp0xcUcZql2rRqCiWqvZap0SU0cYq
mGXpqq2+QvcLIdU9a6wtiCTLR63uWqteYW198lYMQfqLSZSsTCguKM2ad0q7Dh6DrjDBCmykytaD
j8E2IIqzYosrfq+gPc/kszaPx8jNT94INZRQ4OAg7rhGJZ00UpdZnhQM6iq1VFPuNuXUOfO+GMON
+fD8uT0EUa3s4QIjgjU0pGui9STHBHZspb/acqtBLC20ECSqCcxCKgsRxrBDYqWaCscPu0hqWhlp
jFGon7pl0UUquqX72rfbfmrcDqvCaket1jUrCSjRJcuJ/yPHKgxIZLnad0llg603an8hf9rgpx2T
Usqo3zDoaAQ/n3XVi0cnHbQFZ/vv8qdDFlnQQgv17VA4tDDPOOdaxj33mWUWg+abwcOUZurKMA/U
ywhC3uhVD9RMQYh3ug+iEyWiXqemPwrsx4OnfDqlf68G//urSXKqJA5F0pDZqNYHkSqr0ueCWxql
XfGnoJiq8VqmlpJ7f27xF0qKwqW3HPVtKz4SHLLM0gR4laUuPyoM4xCmtQeFr0laUkvjQhI51cnF
g47hHpXaMh9WvcpU9zFhCUu3Qs+wQT2yqc3ISjYox+RGUF0SjGDoooWTIapR1uGd7mJ2nd1pR1PB
453OeP8mn6JBrFcPed5DqqdC6vmqiQSKGEcQkr25bE9gYKOS48Q4rLFVYUblW1/a0FiSqXQoQx9S
Ct3udjdsYYsKd6RCi7BVI/4ZJY915GMgveUtFtkoClFoyY6YoEitLLKAXAkSWRj4lcVV0i5aQ1PV
gPU1KDHuQoD5ZPagFsJbVUlAXJtI0lR5whSykoUWG5rGusCbwsDhUIZpzMgSd5iEESpxcNgCGW7X
u94FMXcy410QkVkzm3EHO5Eiwxdq4wYB8QqKoVvPToR2nypmoTJVi0/WuDiwCPKsKx503OWEdcqo
zKgm1ppeitjnxkVegQlVkUKIWEQ3O1LhkPgEqBQOGYX/P9rRj/jbI0LruMdvPUVcVCnX+1iiIav4
bXDsWuADJWgvYYFofV07EdmwJxd5UQlDa5lSSlCqOjCW0iUN+ZyrKpI0V7WSpjddIYJmJcu/2DBh
XjoUD21py8RxCaiZs0vmjmoWlAkTZsukmTGJWMTtDMFmQ3gmNHnGL708RFa9yolmqEeRsUbEm+E8
SUe0CBcImgVJSEpcwQQGF7rO9QpeuOtdMelRNeZkfu70iU/YtpSkQHSiXgAREuK40IUmBQmITOQi
+4bPQ96xjwEoKGP3x8f/AZJbAeRfYafSPgm1L5FaSUKQvpBAZGEFJC2BLUU/RCwzmBFa1buJSLWk
QcBA/423++pe46JWzZmySqY0PW4JVQirKR6IJ1P0pmwS0lMObiksQeXhLcEyVO0etZeLAa8vgTmc
YeIOmcUEgxJm1rLs/C4MVn2vdoY3nOw+xmGYIRAWl6bczlDPDFb7yNU2ODCxGMnABoYrwQ7GBCXp
1cF4hXBINPQsFMGzwiZiG4zyFpVDlg0pVaBCVEKMxxAPtKJXSEICJXvPqlQ2jy5aAmP15z/+FZSQ
/3OouMbl2MJ+SEd+E5zg5HVOe7IkJiAqo23pV8Xn9qRCGqrgkvK6kjBGWYwvlZBfq0dW/CTXy112
ChRpdd8FFc1qtcFVf9hKmNnNjodI4m5Rx4Sw8AL1l/9aCCakrKNe+S4zZu0Fg1W7QzP1Eo8M75qd
WUo5voZAb4rvrO1J8KVBkrbLwIcOZqYPp9GC4XWlEJ4yhCic2zTimETwZKgA96eUpJT4n5DFZ9+A
jGJ7SlZHlEWCQTGrWV4v1LIJBW3+aAxiHg+0QxZFbVcU+Vo4JgVvO3n0c+lHtrIB+MorETBbKjig
gYS1yxUBd5dxyrRvavEjUzM3XHqaZmr+JS5MJQsweYjooio6hEiNknWZGkynSkoJ2Pn3v7PzbzEE
HOA0w6qgc3ZoPL8ruwSrMtWkCO6bbMRBTvIkWwlcYANbweMfZ7gDOb2VHelIrzq6ipHTaBAQnS3J
4LL/CY0b2jamlJhvsu5KkHVO6xWzuMUg1nWMez10/hFdf3wMMbZYPS6qMJLkyHYtbJsNLQvvBNrU
QiNT1pdtx3XIglTL8tW/veWxPpqsGbEalW8FuZJiKFdacuubgfkuI8lb7t2VEp2hlHdzfqldxrHC
MAV+cIEPHuGBvlSgBy4GKxwa05p2uILD2BbbdpONwYIQSBQYlgN/3OOOt4LDtQC4rUT45H3zHmmZ
5T6vM4tY+7xWiNeXaoSuqApSqCe6JtmEJqSY97/nfYp7LtkWRwEJlvXnQfuZWV7jEQnPX8LxcexZ
OzKd2DZCwlRibU/u17qitpY6UprCE6u/Mygl6qb5/98pLjdqfowuz5L4DOLOaON2WtC9vIUqN7B5
OSaCLn03t3KzA3M8uhO9BAOqTiKMetuuhru08iq4gosq7LCqhNsOxMMqgDO0A+PAA0NAtcCky1Cy
SDufrMkajBuSjvM86fi4w0EcSiq9IkM9CYOf9mm/HRkDrKgKOIK9OiqsgVIshKIjf8o93nOCI3QC
LXCC3QO+3qu1nguogRqoHzAKofM15tMs55NCK1QownosKQTDivqxWSsy3IOwRZooEJEftVkyv6Kf
MzqjmkiKG1yciPK6DcmaUAtBJYOu3GqQ+QszjWgQjNs4tCAYydugShsSjjOSx+vAA2TASGwXjiOD
wP8rgymgDvVCL8WrwPgatPjKQICbAuLxwA58PEN8oLWIkJJgo4PwkBPEKwgqsNCjxUq8xCnARedo
wSQUCyGBwWQ5OQnzuhNDNntqiQ/zHxDzpx0bsdnLwsfCvb/hPSVUQiS0xtHrvRR7woDyOYD6J6Mg
gqEjAjzqNS0cKC6sIyr4woASKG6UrFqjtUYawzRsNgBiw/O7rcAiv5CCiWOBoGR5nByJxToMxphg
xfWxOPnLr66pEHH6kQI7jsZrvLToHhRcxIZzRMdzRAQjkkmEl8JwF1vExD0zOMWLqgxESZkhngYy
QASDRAeaF7ZAsoNoo4/IkRx5SGqkO47zOOnIxRb/NJIkDMpeJLlauzWUMzmvUJenMzJk5LB/EqhD
AjrO8qcwjEbfm0Zr1Eqt/L0r8AEo9LkV+4GopMIAQEdsCUcqIAIkGMcsVEd1lMKoRILo+0JEGr5u
dMe7BL8W4wLFcrZvuRs5ejYLIz8b4YLTuigYjCir0DxL6orXqiC94BCBDEG1GkSVgBJK7MnACz2R
SxKLdJdLy7ThGM1HfEQHbCBLCyZLxERM5LN/S0klkE3ZLDiC08TGe5dILIvUjKBkwYqXOJtgYTCV
2BGxMBwDO84teIIt8LyeLIMjKIPAm4Lm/LgkhEGnOxfCGb3R4zl2DKgOGSgu+LX9gUvIkqwUSwLg
/zvCJkDCJ3CCJ4BP+LTG4HtC4pOCscTPQ3q+x6pCKAjHcPTPpRhHdYS+AVVLAq1LqwSongsynmOx
e0LDekJD7/wwLKwbO9qjt7GbCnvDb6mCLtgRdUFN7iy9pDygouIRrkBKQnwSrnAtbDvBzHTARJHI
0DuSIbvIR7RR5qzEHi1AwCNN0mxEjmRJ5nSO1ozA9NIOgqOOUdRFMkCcuIpJg9k8BSvRs3lFevpH
HplFoDQcK3iC0FtOj8PFMkVSMx1FMN0C6+QK9nxPI1lOw7FOLVCxCEW5yfJGqXyxquQbFGvCSbJG
94zPQXXP9Qy+JPjKJBBLuaTLuZzLKABHAA1QIv8ggiUAQ6i8z0u91HaMtfNEz0/Vxrv0U967guJD
xs8CLRpzNaBbirfpidqzRye7PSb4gi/1uCPYxV5EknTZTl7czo7spAPyRc+00hyEzMZcxAPEyOaM
vIt0QA48NI/j0RqlzmptwVMkEiPpSSTNxMKbzYJzUhuVlw1isLzaF4TIUn+sQ8gUyJaQRV78Ra/Q
As9TzqA0sDG1gjLt1tmUzfRSAlz0uDk1QuX8OFz9OPhc069grfp8R0WyzwXdkfQ0wq0MVEKVT0P9
PeFTVEf6AU291LL8gSWgVJGdQvxkgrG8z5SNgo7Vz+cbxy9EWdw7T1pDz4xFTxRbMT8N1Rb7I87/
6sIaYbqBYlXQ+qun0J8owCslDFM0NVPPW8538dVqRE48k9M1LQtfvMgkjNpdLVF/dNa3wsgC5MjT
bEmJrMTmPNsV5MzopFYCrNYjrY7Z9FfabFJdPJKTG8aEgC0jq8Gyab+UK1fH1M6oVVgRTc41XdPl
jE+C1Vch6FclGILIjVzaBFiPg8/mZFowfQIl7ErusyjB+dNDRTGsbE9CpVhBvdjQzUb0ZIKv5Nj7
/IHYTdkfkCwfMIqTnV2ZrQra3V38zFQgXALnW8ex1EtFxco/DdV3ZNh7IqiEWiikI6APQYpfIyRC
GiykTQI821ZuVS/1atq3/cnpHMXpDNjRiyQl/+xAw6FGJCk9nLQ0PAPbZ2VOlzTNzrPWzYzO/F1b
z0tb5zzSSwRgXIzA7o1AcI1OLbgrr0Of2ZIQv32j4ISyRGrMwelFsABdSTLO9dVaxI1TOCVY5vw4
ARbg2Uw4yfVXps1c8i1UJ1zenE1PiXXTio3PW8VVXE3d36NYIAC+ms3Y1XXdexpLRCLenisCoyiC
nqNd3j1Z3+3YJo5dKaxL35VZvYxYGEZe4Ru+Om3eK0S+FinPS6VeWOUs24sCWn1PMjVTIZgCfmXj
b23jN/Ze8uXFOYbTMa1Xqx2LeGWgrHWXp23Bp23JDrRjEFZb/TXk/WXbjztSXCRgJO3eR+7eNP/d
gi8QifMRyDuczKTUKLwqRq5ILQb61XQBPsOt182d4+OcYc87AkauTTZOLx6YW8rVV9dEUzBdwtVC
LYfVy1F108utYSs4glU20yO42CUMXR1uQlBVZkQVS/w02RpYJB+Q5iYwiiAAAiAogiKQZtetgfuU
rPyEYraE2ZXNXdqlYitW3UM9XtZlXub7YumrMWIbsfGcPgAiLETyCoKVThFm5Mc1OMiV3IAuYSXl
1zRVXMWlRTA92KFUX13NYDltuDBNaKBE3AND6Iku5LWFTul8zgDO3wAW4biNwDMVA26dzkkuw3Kx
qJIzMjfaitRKrdbqvk9+6F4U5SFhIK1F3yP/lNojxNd+hs3JjdxAg9yins01nmUxUOPMteUd/lSa
pVmJ9WlfFuYy/delDuYb7r2tVt0UK4Ik+GofQNSx/krX5d3ZPdlobt0kAAKj+FdifgIgWMKw/uFv
jt27PiRKpdRx9l2wjGapns8YRsImXMIl3FiBcucEpeeh81mqNM/sPWNgztd8HWESBmjJhYEwyGwY
2OzNFmisks3KvV+nLeU4pVoQPrDIptd79WDFRW1pfdt8BeCO3uhDfk4zLWkzVS8hKOncHl+Qjs4m
ULakfNG9RUxl6z7P/ZGcDlPTzulq3Mo1hWgkVE6EXmUS/mzJDTg4PmohWOqmDWbNNebQfWGu/47h
MK1qoGZjNc7qQXUCZP49ZNbhax7vP/1qZnbdH07itG5dHyjiAOABJfDuIAgC+JTrA8/mbYbCuz4+
vX6svlbruubhAx9sHabYQF3Pjd3idMRConPehYLGiGXPy5VsXFXvy5ZczebszB4BGGjxF19xzZ7c
OFZlzvzt0W5Og6VFQrbcOz5o5gxTHqfOjp7O6CzyUYROgBXftb3F3vbe3ubnxs3t6NwC4ZZBdsWn
gSSceF0cdQFlVC7t6i5lgrXYg55h9c5uoebuNm5NFMZFGy7UrVRdnw7mKXDcNRfwMg1mAo/P95Tr
Cz/wa26C+ea9sFbrJb7r2I3w/xZw7z4CAv+HdPmM6yXUYUR13d01vnH8TyIQ4r/2arDGSvlmzz/H
WJtF599bpA338FVvPruMWC2Q6PSubOyOXBiAL87W7DAYAV3n9RHYde2OY93+VzeH8jJdQWOX7Mle
aNfGcUXGVbYt01uU7SMHaWC+xTXO7ZIe9hGuzQEG1ylAYOMOP3rakefmXOEGXXQ2zoolc2ud4ebW
3OoGZjRHcWA/6hPvbjUWcDbWczg33Qt/T1y8cyXgAR4YAoMveIKHY/a2ZtQdVCCY9EDnPWSm60WC
5kR/YkXv769kdO+egh4wgiMIeUgv8AJ3z2vWYW2W5kzdz7V8cG/+64lH+fcGePhm5kUa4rv/FCi2
ZPWez0JXl+qlFeDvZmOBxvUV52xf9/XOtnc0fWRhf2Pf7mgbv0Ujp1cSl+gaF98pSHLKTlOuD2DK
FnvxvXbfZmTX7HY3b80nEBzv/L5Xl1Oe5j0vB2XjjOHShnfLVWh4J9S9l2in526k5npglnWATe+B
n83vruEyt9g6R3yDz+6EL/gAD/A8h2v4NHmI13yap29Bx+YUM2tE1/iNl+b+/m8h6AEhMAKQ//jV
H3mSj0+UF3RtFv1E33ivHnRSZ/yI7z397l39NL4vZMvF9nmf59NFSs8zVvs1pvWAfq9cz/UYt/Uh
+FbX3HZ9JeA3bnM3v3ZkP9ga7/pcFP/J/452rjf/a592r+/2wC9/zyPf0LPO1fIR3Rsy5u7xOV13
ntbaqZZogHhi5YnAgQYJIkxI0IqVI1MeQowI8cjBhQwpYjyiUaNEIVM8RtRoJQjGkQqfOBSiZOVK
HjyGwIwpU6ZLHkpsrvQYZOeTID0R+vz5BIgTIECaNClSJImPpkx8PH3KdKkPpj6WFgESIIAQIz2M
CPn6dcpXI0Z2ouVJ0KhRqkx+SIHLRGqSIk2MOilKFMhQoUOLIm3CdG7cKEiQGI5ChAqUxo4fQ44s
eTJlKIijSJmbpIkTlCIpFsT4kGXMlzNhhEENQyZLJR5ZQnTdevZsMQ/FCLFtWyLvKQx/X/88UmbK
cOIOIxYn/jB5cuGxZ4OZPUWMEogMnzjZ4iTw5sBa8jr5Dt57doV5EwIf+ES7doW/BVKseHIgxZC+
T+InGKThRofHp/zXW4APGfFZgCrdZNppQ8DQoIMO0jTESy5Vl5aFaP0UFF97GYXUDkllpZRVTZG4
lFYBnEWSWWKZdYSFT8igHxBBYdfWiE+RSGISSbBVVF99sXWUYFDN9cMPSCxGBBFR/BCFYkRAASWU
UVJZmZVXQkEFYlJkNhcTm50HnpjgofTQa2aSNtMQSqxJG0S50RannLPlNkV11K20233pDQgRc34C
Klx8VtzWGhgKtobgQwNph9QVXHLpBRP/V3QXWBNfbIYpZ+VZ1JBEsi1KkHadoSfQT+ohhCpC/V13
UmekrioQSfxx1GdvHyHIkkcg4dqSgjE92CCDwT7IYGmuuXhhssleiGGQQGRVV10i5ljiVik261OM
z3JrlAwcUlVtVE3ZdVe3QlrFRFxHJukYEYjB1aSS7j4mJZX2ToklZVpehlmX3Y3HXRJeIiUmfHbO
GSd1Ec2mJkxszllndXM+1J9DZdh6q331HRfnmg7Ddt92V6jL5ZeUNqFFyklcQfKkm4m30JsR5Roy
gKDlZ2rOOyP06nz7kYRRgbfuamZHsiFdtJk2Sdi0wwoSuxoMFPbAbIEbFZh1ENimNRRb/0klNZWO
4lobQBDnGrVDEVdNa5fa3OplI1Yjjt3UjliFTWKRTSI5r5JSLmlkYUvMe++V+Bo+Zb5WJrnll0gd
NTCXTlJRueWOJ9EZRx8l/BFvabLpMEzCgix6m3napzFvNSux8JwLrjZTdUdsIZiXm10hGHcuo3xe
cLFNN1rCOd3Hs/H69YwdfrP2N/TqnnsOEq9Ge7TRQz0IwXpOSCcI7NMSCsGsRlm3qLWLBTrb1tpK
2UB3te/7sMNWbV11VRFqhwt/21kBsQPaNkKlbvAjkpGc9LfAMclIgovLW+JlpMIhDnFVkoziEjfB
yGgpCnNByo4mZxgkMAYyVMAMEwpGKv/+PK9im2PJr0YXtReO4IUQktBKFuUp1T1neKGTSbBSE7uH
za4JJMuMpLz0pc3sCGCkKslxaoYg0+AkUQDiWZiSp5CMuGh5QMPacZoIPaWBkSwq1AhaUqIr12Tv
CD0QI/YQdAMW1iSOQgiCE9JyPjWaj2tee9ZS2rc+pdwPkGt7XxG2MsgBIrJEbAlRkJwQo7Xs0X3S
ClcDn3RAJCjQiDi6UZEI5zcLAq4xERQlKUtpwXsh5nGAaUJViuQkJyFhCYch4RFN2Blabc5AaILY
x4DlwxEAM5gwCCYxixnDGJKuhjgUXmui+Lk0uVA1P4xidZyQBCnAkpYo44ylYAUf9fz/p5kxYROF
dHUzK44pnWMCSn9o5BOfuGh8DjHCFOgpPepFL5/0JN8RrtZPXGUvjf80U/YAGtCDovEsRnknWryS
tR5sTY/bCpJSqtU+/6UtCWp7G0ZPVAMdKPAHOsABDkBag0SSCG0xCsIMLrTHr+1gMPI6YJSURDh4
GakG46rKjqCyrih4cpT5EiooDVfKKcHrcXcBDGB29JbCvPIHRuQpmPyikP1s7okvuUnoGpSaMIzg
q8UE6zHBSlawFgsmUWzabKi5EiBORHjAahAyY0cn31hTXR900r8otaPA3DJj2aMN06AYsiO4Ki97
KQpjF7uXnb3TYs6bWfSKVlBerXGN/xYbX6+46hGvkOWgoh1t+M7Wo4WWcWuqdem3KIrSat0vSDKQ
QRC2ooO/4eCAuMVBSH+gU9h2NEg92UkP2hiWruxkkU0xkg76ptvnGmkudmtbUpwClQLq9l6fJKq9
SCnBv0k1Kkn866bQpcnz3m1Tr/LmSTjCOqZFs4eqiSFaj3lMB/kwdmk9FmFbIqeX0BWYw0xmdaa4
nSR6CZv+MiLAEqKR6Q2We92DooRsApKgdIYvBGmsYhk7JqJ4k6FkvGM967nGXYURJPQUSz/7ib6G
GhSNHjkxaQuaWZ0URSnm4ktazFIgiKaFLf6raFNOCtv4FcEGSV6yDfoHBNpG1LbPnf/ylEkKUgUa
uUQ2wGhDjRsW0x6ygT94bk3/xqQciegoHQKbXYgs5r+VmbvaBSW+MHle6S6VVB1aymA0WSmq/NWb
7N0c51pjumHJ8EH5peuAg1WaCrfVexV2ITLpS+ACP8FSghkYYeRC3sAQZVMEIXShbQI1RKuVeBq5
akIAo+ZnNXYoQbFQPFssRs9l9iNgqWc/v9LirMUzW/KsmldqXOOz1U+j/HvycJs1FLXprQY18K1v
cRS/4MbUBmhu8oxaGgQa2Da34iZCbslN5Sojgbe+RTNbsoUW+uWIuecmd3Q3ibdln2tID8QXnLNL
01GWWZYJDKlU7NLID1fXS1VZCmH/NGMXHyGvjCnZZTmdxtW3Muir+JXaDxE94LoKS2pqdUl8E+1o
GiJrKANjilOLZDIf5DmdauZMTyg+1xeiXCdAUuzXNK3p0wLlJ8vy54oduivQPvRqwB6fWXjyzmZH
FLSk9a+Fz3JIHS17yMHtn1OkndO3lAij34JR2uDH7Rm0lAZGyIGUy21uc4877lVWUkmNRCKxN2sG
ZO8fkX2gU5HOO4G//eP9drwhSHbIKYD/93b5Pe8lDfyp0YV5njnUF8UOabp3QcrcKtUjWJHkTQga
fT4JysJognwmiza5mk5e8hnmBLF5jUuXfhp5peKFvaMu9E1e32jSWTiLjRUSqLMC/7ZX+0jDUE/t
1lxcFjY6lMXo67WXw8KsHquo+gFNUE2+DK312c9/+EvktL2+bnJxu7Xfai0QtJ2jLbNFBi1duxBu
sBUf6GCkJH073eH+drnzX92dFP+wVFq0VJCIH9+RiJG43XOpm92Ri3C52x652b75DeNtV5wtwcCF
l1SFF+X1yI8cnmNtx2lFDpFsUk+BiYrgipmsGklskXvBEaIVE845iIDh3GkQWAsBUfhghw9gk5k1
STYxCWY4yQ9UxaYtlX4EAe/Fke8di4W5xhTQCIcEieHhxWMtnx21mDxRn495xa95GffFkYx1RfZE
32iR4Qt0X3LhG9+1z3IxV29dGf9zYdL5oV+S7YD43Y/7+UAM/GH8eAtx1V9NbIUfAqK0fVT+jZv/
lVsjNiC9nRTe0Za3/M8g/d1tnVsmNQWXBYH2YQtFDZIFYuDjEdxcnNRO2c+OdcYjQV0W/UWGeQ0r
MYFOWdvd4AVQYMhOuMhIcBHnkNzNfZww3VcxDhMx/V7HqdUc9cQRONFHIFYTMIFioNIG6lYCxRIt
2c1dCF2pxUlhoZxsiBY0qgVfcFjQuZsdwSAvnsX5BM2PpWGEPaGxrEYZ8oAavlEcvcAQ7ONqsGEP
QIv9wM+0aeJuxd1IwV1u5V9vYdlJOaTXKaIPbJn80UAOZM8N3AAPbMUOxAAgapv/+8WAtOUfQj5i
/5Wk/ymJSQli/FnikyGgkykZiRBk3IlbTjXFXewEWAhBHL1RQKXIcA3FKBYkmVEZwWVZjuAI5OyF
S+Xk9anFhkHL3jgcZxDFjySExP1aSmjVPAojo93XMSKjgKWeTRjBUEAOqcAgVNIidv3NZRzGEqzL
EDLJb0nXZhjFE+xa1TgE9hhUrgSUGG2fSqTRWZCPscWTPY1WWZiFsd2ASuTjGc0jDLyAZDbIZNZE
RsaRPvpjhfEAG7qEEACBRckkA+IWlZVUujVgSYqbAEpbIPpd+UmbRz4Z2qHdtxkSIIakIprfSDIi
SflmQpKb3FmZTW7Z1q0ft2DU/x7Gm0hd2W9dhWx94mBl5nSKFpAZhd+FFEKe2x3WonQtm45JoFng
ikO9Y1a6VI4RCbmYCxPS2kY0nz1R3YSYGoAZCw8Ri1h+3AxZGETZjnquJ1B+TZ85EENO1TY+lobx
hXv6RBZeFUloVtag2EHFoxJkJFeV4WCpBE5oqBlm6BNyXGXyY/fVBGVGjWVeJkJNZ2bOUWhGpE55
nXYGoCM64P/9n0llWQ2E5GuSSHF21GzNALgFQAww50j6ZpEGZ0mBVJLqX0KuJt0J4I7u4dYJ2ZT2
D7RhJ5YJ4mzByJbOgE5ipkvsY5i+RJhW2JedTd+N5lDSG5bhiME9S062EYVYWP+NiQVZYAsFSsub
viIXqtHUkaFpOFrIfah+6socSSNQJVBdtpm5cBgf1UUAFeiy7VgZvdgebR7aJF861lr5tBFZtNGf
diY/iupkGss+8gCJEssHOJpnhmmwxJCqEstnBlRj0qkRyEARTJvbNSkA0mj/BeevAqBv2iiOAmJT
eGRxeouPepttBsAiFqlwrqaV6cCL6t8jRmtwqqRE7qGTueRsHSf7VamSYeJzLhSUiUUb5WOoTmaq
wgCslumKLpIgYacDRl6JKAWPSed0cmYUCSYZohGQmdarPVY6Nt87Yg+FRuYM7atb5cRBJQsQMIFu
3WG1TAsWdljcdAj+uGlValj/tswieArsuUBcxEVdcTkUhAZUTXhcu/7eq7rsMBoTrEYNrH7ACNTs
gMlsZbJh/c0qrWZPD9BAcvnAmJVm3TGXrqLk/v2qI9IkuWVrU9hA1CLrk3lr2tFARVYk2zVrDbDA
kFbrs4LtsH6Us+4fTfpWDGjbtnqrtwYBbbUUbXkrAvphlkKZRWbk3T7hujpIzRZTzcLqZ7ZtkIzm
D0QieH1dlvlPEGSPypqqqaYowsonhfwstmBsx2pqOzpjhvqeZ86psX0WT4Qm0R7QXCocT4EsWwyX
GgGUGjllj1VW9ixoiIBIE3zI/8gWjBCiyeqkcXEfDRoTMeXsDYpl8Kpq8TaI/6raLMgh7/EGy3RS
qBDkANCmiAzswEch6eHu5tcC55ECK5PmX2xKZNRGqdhRrbJ+W9bmQPrmgP0FgA10ZG7qpiIyIm/6
VvziaPgmovwu5EnBH7euX4ywrdt6W9ymjdQGV0vV30280Zeqq/Dybd9K5j0mV9rw3SgSbgBm6/os
lHGlKE/ygM/OqoXa4wd3xbOsVIa4G1j03oM4bk1waEBhj8kyS+gWZVXY67P8yNbsJH1KjQsL5vaV
oWtAFLQAgUYlgZLtDxbeLrPlpE6OVk3o7QP/rs3GDhSzsGRKiN6y7DEh7xRTsT9+cGNiJM9mT/QG
7dnYwLQ1JNSOb5JFbZHdVv/Zdq+08uZI3q/4Run/yh9t/uj5qm/6YmQgbySP7oDUSm1Hxi8iEyvU
Iiv1il+Ulm9L1SZtFmBtVvJOyF/btq23nfEMxO1sRScDMzAbRnHy1mBlkvAZo4UnKxeJFOtzEtcn
xmkHd99BmezWQFRxFWLeVtgQnwsTorAKp+i+NmyNNR2M6AWuOpduQeAbLh8NaK7wClMEZ+Y+Vlhj
+nL92A25VIWT4dtwnayXYSbnusSDQLCDTKaJugQDr/OsWvF9ejGsvsALgPCsQi/QAm3b7sBrGlmT
+c+3UnAh/6FI0WQdT6v9HishRzIl/yj6qi9GduY6s29HTqSPru0euq9uvi//sTbZHtOAJKPd2gpw
2qUv9KYvDQDt1QZt0Hpb2vUARIfx5EZv/bEzKU/nDczzg3yA3wLTzaqqZ9Jq9AbucXpzR0fnLkPx
qHLmAv+shcQfLi/uqaJyCa9NmyrFRsnWjBDiReZtO5vsuR6XdY6iKdqdc3KLDmek3npxiYJP7JLN
+wES6uakaKXrfbKs8SaamPJkdQIZSnN1Z+7tTntxTzfIZY7xDURvPu/EDFTpIE4yS4V03GL0H1rv
sy7kQfdz+Brw+O7AbM3mHqOdSv8xIAdyDqj0IaJtRYO2t0Zp1HZkIKa2smYtYps2S0+yJ9MmSqMv
9NbfaJ90Re7yGK/vOHem/02DKT+SczW/c4mucw6wlFFo2/1I6Sfa7Yiuq5h65uQCbODObeJ+KkR7
n0zCD/9si6z1mC7vsOTectMRJnki2+I919MemQYf9Q6X8lrXY/h8i3hTW/lVS7sVIPZg5pdqMc6C
HAvP8zwXNzWvM8IedlhYZCHm9F1LsRQH007rrIJ/cPqmNEtRb/zV5krrttoptmRrm/U67bC+9mZv
a2eXr0gra2g39NX+KB/PVgu4rw1shbe2AIzDeAtwdiEXp2zTQCAbNkY+9G9fLWkHMmIDrRlfbQ+s
r0mzFDTjdIEnuHEn+JGDaZhmuYbHtBCc8bcI+T/z8bcNVlqns5fLUQ6chf9nc12OGNk/xzJPgGsg
yXlKdSsoo0VZeFlxqdZ2pwX2OHdAXqlI4SEg8eH97OhVA3goM+7eojMJP/famF9vOWcnmrAOu7NO
syyxGLcLdzDe6mOXR/EwWbjN+u1Os7rMznOIkjCE2+0N9AAfc7Jv//FHezZGh6SwYnZqc7aP2zpo
2/pHh7QnOzJGF3JH6gAL7DiQJ/se9riPizSQ57FHDzdO43REr3MY03a2D7hJ1zaUs7SIB8H6AvYL
/LRkJrcHBzVN0zIIu3kBknmyGuC3Dfc7662C07o+62GSodm2suRTezicxzk/+wAO1y1Sh7FrzHT2
0MCtanpyLlmR4SFcr03/TO3zIRlZbFEtIcI0t7fzHDG2xTNkSLUmXCsZJAPBDAh4l1Pml+91WOgy
O0c0KaczZdIsWA62KQMvhjMvGzZ5WrP7DRiBJC+5RZa00kNv0JI5ry/ir282jNt61dd41V80R9ov
C4zUCtTAIRqyAW/Zlk17bn80jUd21f5ovis4vw+9af9xk590bV/tt5l9tps6ggO1cN/zDOwz2j7Z
t0l51tJ0b7N0sloiboPysu7kdaMzKt9jxLcfk73x3c3mYos0X6wUnAu0IrV828YIAhM9qRo2pYfm
lsWW+LnfTPJWax4lG1s6cT51T3ibE8Mwtuz3pV/wQaK8a+5oXaC+2iqu/82T8T2LuW3vcoJ7uvEK
NvD2/PMn70/fY0kzsJjf/WhjLd2j/Wxp2/t6P9ruoUhXvUqTP9obe9pTb6+DbZE6e/vWAApwdNQC
OR4Te/lv/9o2NJPfgP2rNEDMEDiQRsEcBxEeLFgwiEAaOW5ElCiRx4sXFS1evKFwhgwbMXTgwKGj
RgwfNnYAkSGjI8sZDQWulClTpQyVQGq+pCHkRkUYL2D81LjRSBAgO2wUsZH0pA+TPlKyDNIjSNWq
HRvKMGoTpw0fX1O+tCq2Bw8eQ4BmrDjELI8bRrgeVfq1ho8aNX7gIEJk5I8fd53avVsXr8i6UW/S
xFlz5dHAg//61RFyb/9ly3tFTv5b8uvXpEpRFtnBskcOnkJyGKEBU2eO0gd7mrUY9MUHGLZHfBix
e7du3r+BBxf++4PtFxth37hocSPMIKsZ0pix0GBC6TKQmozhdekO7zNjDnRInbz0mB5j1GDBQscK
HO7hr1jBIkUNGwEC7Iixnz/KFjta+C/AAWcqcKUAvftvJfEM7Eg8gsZbKKEcJDRtoo0Kmu6hnmZb
zi0KZ3DMKc5K2g8lnGzSSqCGnIvpJpy8i1ElgUqLSLa2XKsKO6+aOonHwGxAUafVxGIxiBRFPAmI
l1TrgQaqHuLpBiGE6IHKtsyakgabeMTrB8r00ouvvjazy68zJdPhh5P/UkpssRhR2kE0wdA8E0y+
8Awzz8rI3Aywp5JayjOkvGOssZcslK1DoYIqrrjccnt0uEl382AESy3lrTja3LrhIYgw+snTgRqc
IbmJFMJuu6VYTRA8lwgqL0NSW/ioBvdEyhU+kVYgycQd8GuJwBZmGjBGAFlN1rtkWSX2QABlEk/W
aSmkkDqIYmsrIoUMshEooXigcKVjVTrW3GhfEi8rmeBk1cc4o2KpoNKyOkpQQXvcb7DDhGQx3Xp3
HNGkJYMwzTTUUHONwqxessk7we6STE8898Qss5ByzRiHv0yS8SikOgsZsskwznXMPfUMM1c19225
TJNaJsykE2VkCVss/5dr1DdIbdNtZ+EwvfTSTDPV9CeM3CJyww6Zs7ajoxbcEFUQd1QW2gIf1FDW
8/SLgYWM5XsvbPjWM3GpFvBzoTyBVCh2QAFrbdZYG2oVENaWFoxwwr25XYggbJfLCEPyAM9ICPOy
dvHYFB1MvDFzl/Vq5o/SA0xQ7bQDEnOYB7NrVY9nglFOM3/YbrTnLJxyyoOoehpkyihG+WSR8qT9
MpUz66uupn6svAaWvSxZ9pTHJDlmznycy6nMmf8qveWB7G7GGitqKyOdgXP0UUcprZS3ol9APMOV
aOAwy063LY9vv4V1FuvEtd56hlrVw1VsXHvtlb317jLxhABlgJ8buP+AgAVUm3TaRiwELfBtAgIQ
AKNVIcJVKwcElIgLBlhBDVprVhG0DuIiVJ2+sY9BpWLQeQpUqGOxij+++92XQkKSfe1neZwDTEk6
N5jPoURQd8EYSaCiEtRNyEnXAZlXamAyjWlsdrTDXcZQBrznpcd3aYqh8KCoxDGFCYhQSQlSJAco
d3VnNAuCCU3ASEbGaAhbygnVz4jTqNvo7GdBE84HwodCdsnLPH38VEIuFBEXaHCQg0TOrLI2LUS2
xAa/C9v98Nee9bCgBijozwno9sAZCHCAAyxgDkowq7bJxFgKlMHbHrgSFTikggbE4HEEh74MDvIg
hXRaS7KzqlWRETz/sVqbdBYJP4ec0WFpZFayOAfDkq1Mhsdz5mAmo7vH5CWLODiMGaEDnSM5bERf
cuLFLobFJypxiZnxU8Tw8rtlMrGa49ziSPrnI94xK41smhFMsrmwEubtORt64898tqmMDLRnP7mN
9rJ3nC39B3LMWlXUCFlBbw2UooK74AENQoNCutJvp7QBC+QjH0nyrySWbKGJGvg2lgjQghh0pdpC
icAE7uAEaYQbABlIrAi59EIU3dYnacnBgfzHa/or0Um7czdgxo86DmGq3xA3rnYtZZcr/F05NUYy
rZKkmceLJlZxNxn7FApdXNtBDSMm1meqE6zvnN1WSQZWdrZTrlkt/5FTWoWYqm3HbKNhI99AtKIK
ceigkRKoRWRpI/QBNoMFQc8M+cqfu+yvJHTj40MwqJyBGrQ2Aw1kRI4jyE6KtoIZUsFHJ1kiujXQ
Bv/DJCYJZKBVlgA/oSzBSzlagpgEaCkgiAEIzqbTGYwybs1yiUFeSdDOZpCQtixkR/XDnhX0j4XN
KuOD7va+p0bVQMRaXLGy87W6ylWtXs1YXOHZV8jlLV2P7RzlkrW8Z65TrpTUF32x+s78krOczTSR
j/pzTMpt57h/rA4iCefPwHHWokHV4NqeVav0iDer+WvPSCJJycpGTaOZnU0HOltREVsEj6GdiGfV
Nr8Br9ZApEypDP9UEGMZw3iV+FEBsWJcEI66IKYJtIFvW/g/VU6HbadsgWtb21qdFiQiJmiyIEGJ
2VoSkJAdbYHXdGDf7tzUfQcycuSU5b6sdRfMloXVuLw23roaL2ZZ/iE0K5sTDU2njQmTzg4gCy/s
lFlfPvwqVrVquTBKtn++42rLKhdXuOJXd2azlVpbuC8ZEviyD2kq4TIrkRGnD5EeHXDl1nPhJe7K
frriVZY1bJ8lS1TTI6ao9mD9gQ44atbaA/ELUjygUa5ylSGggW3ZpwK/JVClKkgbsQk03Bir8m0n
4I9vgazkI087yawC8rP3A1wcs2SVTC3gaA04PgmbjaH/oWoMTLr/y3Pry9FgTFCCWBjZvhbI3GlW
M1h7leXJqkerqS50f65bPoyYOAcziNx3sbPn7rDQz2BVK3v+TcYYMbTM9KSq1bxrK/bQt7xebdky
SYISWFWob20E7WZRHFUJg1TUvBq12GBO6vaIdD463E8LxmPBTm40kB4mMRyD46gQZ0RtN1ZltzsM
04L42tehDMGyA/TaH98nAHg0AQ1urGtn8RYEKPA6ulFQn0mygARjH3tI+ffbJGd7l//DMa8LUgJC
jtaTnjTtlVOQ2knm7372RYF69i4f/qUbmYSmJEkdfW5+v4fxpL73ykbiK/88y5hw8qvUYrORhO8R
fjNpV58Pb3N5/7cwr2XdbUPzet05V+3Rap6M/dB7XvuuasmY/WyrNy0dc0+2PRceGyR/z/jGo3pf
/KNkfWJQ+1C2srTATPoNTGCRWgN9UgGVNXN0S2Max1jZWXf21307dd9aEgWTTAF+aG2CEsi4BTe+
8Qm+v575yN/s8g8p2u8/fxaYdCnwX637ek3Hvg2DnEyQCsixbAAFfO/3+G7m4oN/3Ex/NAypSI+q
AI+S/s5E9oM9hM/xPLDxQNB+3IMFKA1vkMVELsuDsKXgniVv/kghbqkjcinAyqjFSOlqvCy7doT0
jgWA8IZdGK7lHi8EXW4kUu1XlGp8LgsifMpTVOWkJqzxHK/38v+nClHt8MhvwsyukloLxkJo6abD
gjJCUjSlN3hmOISO6ErAyGpF6ijn7+hP/9YjBcJu7+gD/WBNBFxguKJuQOAvBvIOpARxPgSPEAfx
EEHq/ujD6/4PgGTMIWLq206OOQ4oBGSgqELKAfNvPhxwAQWvsn4MqWBLgXgLCiWrExmQCD9QBHFF
32KgBj2tVcjH0lrCqbDLBZHLlpoqFlvFWcZMWiSkqWhlBo8KmfwDQAhl3UDK5VaRCDWG1BDPdIRr
t8JsyEIIb0bpQFbOwrgxPqzwEysJ3fbD63hP/1DAsrjPtlypyUisNmDNDLunN4oDxExAbVpg/FIg
H9eDBOgw7Pr/8bcAEgS6DuwCcQXOr+pirTheQP1U4AQG0uvq0OwKcSIPkRDlcA7VTut4bQaY7tc0
ypMIyMkICOsei+Xyhz5KShzR7QLl8C4sSdua7cgeqMtKkT/IrwbqwyX5wyR97wrNjgpFcAK3Yxpd
sBYTx/lAiFQKTBifpRrZa6n8qNUm4rmu48omK/SQSsAoZ/GaURWBb/hmj9y8MIFIyRp9yTw2kg0/
4u+qcBPvb+ZSKwtt8ioDb5IsCeeQrsM0C8Rm7QU6YPrOsHtgzSLs8evAr7XgD/5Sqv0ayCG9zvzw
4wVEQDItYjIncyGLLgHtbxEF0uvyLh8D0f4M0fz6MQtfq4Fk/2wjOxLYaCAE5ifqHLJ+0K4kro3/
MEluBiRZamqBkCW4joyFfCs05y8ccXKSNPEkkWpu4q3txExWXMpphHHMzG21IoQPNW7saA9d1GcS
8ajEmGOAlLC4/i9vYMxt4iYKV7Er34MK4TIc4ZAEh5IUrbE8XHPZXGzc4PAtM7EbMXAcsW0lRTP/
9m9V3E4Fbisj+FLWYg1SBHMeK3MhdYsDErNAY8zXFsLXUrMxuy40QeogHdQyH3Qh65HH3i/sUAC4
FFPrOCDqNnQz18NET1Qx3a79lm0jA7A1cbQ+s+7K7NAQSWA7rs3tts9GT+k0t44Nb/MjQhHIElFs
jtMtj1PLhP/LI1kz50DSgKBPs0ILo0TJqczDyLasWBqpfjDmASsLx0LotjSrO73TxDyJg5zzwUjo
QJZiPVRx5qjQ+M5uP/FP8AaU9gikbVIT6toQCsevOPfUJ8eODtENMW/z+yKSfxg1Bv7nEWcL+qQv
ITV1U2kN157u7QZVBXQ0VNnPDxMT3UCTBLwOBPCDZ2jtLztgMk1gVutx/e7xJQOkQkNgVzkyQ++x
6xb16yhV11LTNZvOI0MA2JiObdrmBMovDufvRB01Vzky7jTKI4mtERszFG8yEaFUP2mO5qQUTYXN
5xC0HV3t1nxKJEdybRIIk97TIvm0Cu8nBUiv2GbAXF0tSwv/MNPCzVpjCutecwNTy15PypL8g7ca
iT33s/eky+zqwzaVVDfX0lvpI+9Gs/4+EyJbCEV388hSlKakbdcs1JWcLFPfUeguU0RpNfooE0QJ
sw1TtDwH9W1WVMZ2tQR0tgR2lf1WlANkrFWJ4/oWUjJllVYJaP2AVlSTFbeSlmdjDGRBIBDp0LdS
9O04cld/rel4bCRtC0NvrPwKkf5e9Bz/r9eq9baSFuuOjCAX8S79EN3MD1EH8SKPT+zyMRwLdLg0
xAVc1i81dfpizS8rql95rDWHi061cO8YNlyB8j3mEGGrq/0+UnAqavooKvrAE0eHzZReLFC175Sy
kbcwFlzd/9It57CSIBIi6TbwTtf8DrP/EjPJqG0U/VDa2k9tnexvKVP6YPVBR/Sl+LV3i3ZW189Z
Y7QFgFZ5s25pi1VUd1Znecy2eLZno9bYAgANHRTEjjZpXeDpRPXXpNdvW3Z3k1ZHWfS3PDZAnJcj
q/VYpVdnkfXGbKDszk4QyxYEZhRrQ+lw108GnNVi7XVmA4QgVRdR589PzxFFfwzw9K+STgDGuBZT
ERTWhCJTa6MvCddy7Q6BAHg/ONSBv3UTUTLdjDRQWc1llSP6MJce27UguK9UP9cGvZBtErcxvUYi
LdYiE7Fu/TQcwe4Ce9huI/fmxpJXvQ8xHdXtJtS1qFV8/f8W+goo+ibTAJ02JGn1QUVgizHTVrsO
2hJzQJaXeVVgaVdzZ3dVa+X36TgAaIW2+mztL0Ugi0UgVue4VnW3fOtxj10JakE2jHMVZ5mWSqlX
fmMMBOyQbMmOUVM063C2NeszQICV/uCW/eIvH+twbPG3hA2TQ+0ygoXt16ZYSwF31viSOZqwVpGV
b7nPyHwrQEm4Ty12QHHXCy9Uo0RsKkcycY10IzsiG9kQNUN1BtS2gGwV7ABUh/O2IhFxPlJAf5Ms
ODczWhkYRXNVa+H3tpyuVF3L/044VJmOertWm8eZnLt2lPXYmG8MBOyX7MxPVQVSf/uQfduvZ8FX
VJmWVGn/K3vj8QxtTVb90pRn1ZinN3p3lla7V2nnmUYrNGuTFYqntzXDNgMKMQM4c1r3V1DZb/tq
5VnHLkZn1DHB77cicjQFlBG9GSCFNIZNiyMza3cLV+lCiVlptjy3r0gBsWBx0kQ3UEBfdLVYupgN
6G9dmMciuW09ev+EzFd/7O/+caX5VseU45RxjQZaQDhJuP4M0aTNj1K7+Q8FUn1ndFAlOmq9eaW5
D3xB9scEEpCJNWsLmZyFuqANWpvn2pih9gRSwKL5mgUsepL4Mew04ERPVH8dsonpWXnbuEJ19o37
+Y5kbYtNgIvrWNY6YKBv656hl3y793txNo2xuZBfKnrX/3mvOfN/gHZIi9W2uNkx47D+FnEcpdX/
SrqHydaSvHnaQvpqjyzsdppjcXtG2XBIYezttk/ZagUf6dDM3vX7/lHJciwki3bEqJpdZSq5PXmA
QxpVB5gl6tMLb4uFY40eSwDvbFuHedhuFXH/QIChu++4w5dX1drZMLmw3boxX2t/p42MRfV9x3dW
LTPAu7iu7Vqodfbpprbs+tqv/ToD+trBGfyvLTqwVzWeDZu/Q8CxKQVT7Ghor2+gJzuOW3Z6yVeP
Efoyj5aPS9zEkdaz/5ihw3d81zhqj2z8PDPCEXEQ/5q9J7RF+ZE0KdzreNtUoe1Z5fV0nfnCYVyG
f9MhUf/1fp+Zif2QWHPM1/zWHbcnIQ1rHumxHtk2AT15Dhk5QIj5Bur4L40WcLfHw8MHZHN6h2Hb
dQXvmQNZfO0aknNUs9mv6yp8yBUbaJ23VFfUiflbVzVqVgO61kxZD+t6iv3Wbw88bBWc7CadrxX8
wfnawTFd0/2aBDw9BQZbA9paw4Om1IWGwz2gaHIjVjE7WcP7jkc0j0uci/8yIdF8i+uYcE2ZewkX
1uS4Hq0XZ9HYrFGg7Dx9kVfXM4+dond8/lT1JX8L/jpzdVE0rGe72Zw87Nr5tTN27FRVfTE6MTc0
Bba920lzVZOsQFfzygHzHc1wcHEtr7Wd3Pdx7OTZQK//HKGsjwyJowNcIGq7bttBiqLH1hAxWX85
gJjvmq4L+p5hE3n7UZ5n9Gd1zdWhVldz9sDvObwBvNbj+I6fdnxdoAJC8tEPXELJPQP4MeUbPNNb
3uUvHcIzXeY1XeUdXAM0HGi+59QrJdU1ZY41XgU2QMbauI1PgAJOAGhdfYonu9ZN2ddh1d3hOA/x
OMZWlEVXN+LdDtBZtCAtvWrFHYy/z7AnFFWTPevbeTQtGjTz7q95+GL1cQ6LOJMTmdvrPljbG2ev
XM2hXnDlkXuL7lYDMchRIOmTzmU9ntYsO/E1ZSFVoEXH7uvZ/uAvvNd2lq531s7j1+nU+sWLNdhz
9tFZ/5wy+ZJ7Oz7qbd2FozdZM77A2dghyd3YPZ0EbP7SO33CHZz2NZ32dT/3bd73ex/Uc/6xvQey
GVJCm9gxNYD2UWCwER5opRfAz3yLYzVWjfbMueexre8vgb0hN3RVURvjrX7QpT2ew39HlfePJz41
27jGtZ3BJ4mi12PCwT75HdLCA36T43z+5w8gMqzIwIKgwYIrWCgsyDBhChQnWqiYUcKFiRcdPmj8
0OGFiRsXL2bcuLGjiRIqTsQAgQJEjBMRVagIQaOiCREYSZL0aMIiSJxATZyUASKFQoEkHoKAGbFF
Cw5PZc6cGaIqzRJWpcq0WrOE168uvmL1KhToC54Whf/eFNGxQ8aRGuHq1Djiw4i6eEuKcKGCA0wQ
gFkGPsHBLwgNJDIQTKy4sWPHjB8XbDxZceLIlh8n1hAgwN3PoD/TpQt6rojTQktwAEHicorWrTNg
bq2h5dKZJdTq7umid0+hI0MLH1467km/TDlsxVpV69YQYpln7QtVqtUQz7HSwK7CKVOWiDO8bv2w
ZdTrM5rPTI+9BWuGB+EvNJiQRf369g8KXEgehe0TM4Vl0Wk47fYCWxuJZlx3Tj0HnVfbVYTTXB2J
IJRvaQl1YIG9heAeCSz4t5RTyjm3lVZOSSRVgw5eV5NvF/6mG4GpSaeCTWu59ZaOchFXnEZ7qcCa
fkf/yadYZUjKZlBiBcGWQm0t2TbYUn+Bl1lklzWGQmd4+UgSj26hZkIFYWHFAQWHYfbYlU8+qQEI
GGCwlHJVRVdBdGWd5tZcdvmoIEcd7BVCiSdyR11hVD0YHU3QqUdnRb15dZ2k2EF1AmAtMaUpTOfV
FKFXZfYWlofv7ccQfPEZpKp8py6ZwmsLKURCpsuBCmmGcgF6Vk/SleApjmrpqJNJMl4YVl8ktnAp
S/4xFZV1hjqn7KYwFUanojZq9aCoFnXLXHfUElonjmzl2mdxYfK6wXcsxbbmlbExRt6bgQEGEwWI
biCTchvo2+8G1v6FQXhKWnaBBhpgcEJncBFXUqAW/1rY050hAHwpwVcqmaVltdGLKQYoIIawvYiO
6wKZuZkgLJ/nhmbXsHuhhBxh+/ZlorbXRXuouCYq99R3lzoLlXJEZyeWqLpFit0JKIB4JEED5TdZ
q0Wu+rSs/jF5JH+03gisWjTihFGFFiIN9tgJols2Vvte+tpAK8Qtt3iDRUTozdbmbW2ttyot01/V
4laBWqP2VSV4IScFpWCEPZhnxDfpKPGF3xZGwaUDy0tCbUsFNnK9J+Cb6KTX5Y1v6HpbvuxhA8tJ
JeocdEbgnn2yHOiYXy2N8AUXNLbxu1ci/Hm9AyN2mfAK41vYBtBFvnKCFIY5u54Qm0nt9YRd73lg
/v+JiHhtr70Kpfebiout2bvtNuqglzYNW8fuE4Tq1KnCl5Rt3Ye/uX8PNd53hmOTy+3KlJsMlYsk
Lrudag7Xve4Jr26cIpqyDvMf0NkNWmBJX5mmY53oeAVZmwIMwt43QtnUxm7Y8gqZdDO4EtwJKwCz
VFEgczAIvo4wHGBeCqVTlX7tLHTYu9fedGiVGG6gMxVIItjKlau3WOhOEKjYaoSnAd5BJgO9yyIW
NTM8e3kOYxybE1XIcsDR1KUkFxrcEpmYLheEAE1g9N2T4lUw4NnxXf0RI26Olr7HTY5wHsxdc6DS
Lso8TVVXOxJskjIeJ3kMQNA52YDM9TDpqS9ygBL/1o4shBKjVYSH6qmZtaaFgRSsqUmKy1Rh6pQh
3VCKOiog4nQCFsJ6hUwDdaQNCCgwRhWykICC5M6ZDmM82BwsYYO5nOh0uKgYps4wcaKinJSXwwcl
cXDXjE5nTubCa0aAjbYL1J1mRs3LAQYDvVsTCbR4TNdRiQLKXJY7cdhLNVJPkxwR0wrVuBvITQ6G
hSmkmjSjsYJqbWNZUtPm6CmVEunLZDP6IzdBhclhmWBQrHGa1fRjSMdUBpEgag1EblQW2klubWlh
i8QERKZulWVDa6FRqH4jSUG2KJT7MowDMYWwkL3uWjnrizkH5lN74TBg8RxYOtXJMTnRLGeNCqRV
/8ZynRherIqyucwxEwa7fk1VimdiyuWWhVUsIm8p+GKeCpXIwgpA4K0V6MyY5gq2k7IRTCJwa8Wg
CrCh7o53VswiFZFJpWcadpXQ4WcfhUKmxqLshSrk5p2SeDK1eGU16VwnHQd6R8u4y3cae9NRx7q3
Pd5psRuc6oDKqMDVwAZe+6uXLRP3O8yIljC5USmvKvWUvUXSsqDiZyudh0ZJ6St1VQqcMPNlM0TF
8rm+LSIsC3MxxjzJc5sTLZ30ZbgTYDWhBZNXO+Pkumotj4iLqgp1r2rFLWoRMghzKjzPNEylWsAC
F8BvBiyw38AC1gKiVd4ERtfDvSa2MyWAQDcrEP8BE0SgwUmM4r+Yp2AFq9CFFS7iBCyHJjgVT3jt
hJO94BnPy/mFvnkLHTX5dR0LX9ixfpQYZIPL2DFRrC/ErOIiDWrQGs6JurZE2HV/nLeH7vAraUyv
vyD6uJO0YLCZWiZ0R2lOMGJJlXrLKTlptoHcTg6yMb0dmBEkKOxwF8il9N1tV+dF5YplXBoMJnVb
ByfhJaaGhJGlFKvMTvdu0Y7aZaaCk5jgPR9mTX3uHX55p1/F5DeL/nVvFhedXyziF8DxTdiHJQAY
Eudw0BUQQWeUSc0JWEXBYJ2AV6vyVlC7EIYbDmu9JCC8S/MuYcicL3p7+K++OHOs89Xbql38auD/
4DNMhJ6sEvlJ6HWFB5dLXRMycejDnVlrrOZVayCRvJZus3DbXvWlWu7kbNpgmcVBxTHBENrUc4YM
BXKiLrYf5cI15kiTHVBNvoo4VUkZLk3h7Sye8UXNxMbUwYw1U4dLuLHevUl5q7bKMKuYaEkHFou3
BgEHEmvPhAMU2+esIrQtbUX9Ppqd/H10BjRw6ZW3nOUwB/Cl78tfACePA6oOQRIRZJfOgMABcdpl
sHMegpwzT9XDFuQEVK06WuMXYZdm+cEwjQFOpzUEFU4wKKvaVyCuOHVIr9PgaPcl1BBaOv9S72ES
Den4/piIzjxTPAOja46PG3djUXBFo6dJAnHy/9Uow2hZBfs5IYZuSHXMTOIbg2egph1gk/Klnixa
sVii98WC7CvAQZul9zrmYNRuHsLPzr61M17S7p027GSt1P362fOW/nN+H45uCExW69JZ+sQfDeAt
Sl3miv791H8P82hW0dZPTxitlZowCph60N8Ek0Z8fl8HOACZDCAxAyRQdQYIncQEBz88VYwm73uY
1senuQWmWeoHSZgD3rf6160FMKJXrP4U9gqowcmnDhznBB+WcsjnebemXTn3ZvenN3X2QO9UGEh3
XHK3ShCgMqQhGl0yHBxxEhPlF99FUCSXXdAmL6+HRXd2W8sDHcRWVRsXVV8RamSXgZClKIOWef8x
dDno5Gd3VIBBVzeehhx1VmmKsWgml3JbxF/7RVj2JYCMxnsnV2mKNoQ2JwFdFXb/smFwtIQuN3v3
RXwApoUsF3VRx2lOR3O8pwGcBhjcJwHOh4JK9GBgkhGdIQHAZwEOsIWYpgHXhzB5KDx5iH58WDzc
R2InEH8fxn45ZGpYh3VRNCjD1GnBhnOQmHO2d02DEwHPMxcOAyQQAH8eBmIjN3vulEwnGEUZFnf1
tYQlZ1ZyAnVZpDAb50IHxCOZ9IKiIU5mcmifh3E4yHjShDDutU4jk2fW1GQ29mrMQVX3p23LFoP9
ojpTAjrxxGbGtztu505QN3NGyBg1V3MYl4r/KseETChzUodx+jWElSaOg+V2IMBp5Dd+4tdhSah+
9xWOv0eGA0hz9WiHMfeFF2B9ZogvzzeJDeaGHWCJluhzDiABChknYyiPdVh98qh+D5lfW+gAIJB9
PYhzqoZ0z6d1qLYBugdPDCBfGilLtndvL8gnfnIX+TQmVRFr8LSOx4cwnMYAg7hL2ddVrEYpE2CD
u8NfuGRrWnRfkpYw1aRG38RGfjeQKrMnyAYwxYNW5wSEW0WNtFeDgON1AoZ1SHlXgaIjEEaJRWdY
AMh9xWOE+xWRtJdDIFlkzGMxxncwvBeE/UWOJ0dpFOlyMymOegliyLeP4kiUVGRzQncp2Ydz/161
AAg4Yb8Wk51Ya/goj4AZmdc4mWoJYIGIc4p4TQ7GFm74YKIWAN4HkDAZfwrpAI9mfRcgAah5fQpJ
a/1Ih7GJjQeTkNn3fJToVpT4VrzWjBzQAJppe9GHbLn5TUn5lcbJRBzBdw8mFBFAaBIGkzKZftK0
fIBhkxSAkeYEm3MofEIJinJCa2pYTRBwMpXYmUmJcAMpAhA2KB02X0ZnheaEVsokdGx5fxu5YUSk
n8PIc2f0hhBzEpoXdO0oQrjGaK7Hi7hGL8rDlYQ2lnIHJ36oaR9GkXPJjdu4ja6nfsoXGE73aKxI
hvGFAdopkutIogDJhrnpVovIaq2mbCzaQ/8w+Y492AAxyZqRSYc6iof9aIYLOZrBuWw8t5w8EgGd
sXRLh3ULsABVsQAzun1VR2uqmZBROqWyaX2tWX0YsIacGZYr+qW5iZ5gOSZRBJNyR6MOiHQJFmFw
VYkNZmPQmYgVA5Nl+YURaYTySJF26IWaFnN8KnIPp2qg1pSZ9EQlsAFoIifkZYYjpmLV1C/yaS2x
Jqmkk3VZh3VrOqRuUYwVVqZhNTCYSaB6c6OyBU+qVmggWSdvBVCxRnSoBgFvuWHyuYBfiDyheJPJ
BH5pumEj2YeVWZPBFpPkN2IbN4lgyqaDCppJ+WDNSYkeiWERlmBteSamKQH92I+tCawkBpz/uEmQ
b8isLIpgTNpq5MqmC0CtCqmj2LqurTml7oqHJPppYFpoHlmubQinlPic1xRFcpd93ld1gJqu+ZWQ
mYmpYGqpCdZqY0kBDWmnMweYlmmneDixYBiR/RhvHAB9YAJhsLoad6qndFhegoidDniISKqqL+qs
GWZhAsme7Ik7izitGhmhaDJfXIlqOcdgltgwLxMXkuNW9Wdqa5pEzZpNVnht5gefSRpFTBoCC7AB
q2qpvCmzMel9VntOVZe1KDoB3fSczFq0LKp1nNmlzOpgDKaex1qJuUmuC7uOWLqa2uppEyCc+PZg
bLqwDNAZpNhqa7qzPptXbgV/r8ma7equ/1dKhwp5mwE5ieQKkqq2AFnHorzppBG4AYq5jHplptpH
iDhKkUBHmpOaNxuZslBUdPCUtWk4nTJ3pxyao/Noh/qIadxnn5o5dpLznAnWkzK5VYH5JiPJfXqo
j2aIsS7aTWrhpbtJiQ4GFwW5rwt2GmFZAk+bpGqUr8Gxkiz5MPrapdCblHpFrou4dBSWiBCge+KL
iG2aTWWKpG0pfoNrhodpakSLbz9bArK6mboZprupsOM6tPu7vhvptEVno9kZpa9ptfgCuTq7sfr6
VkuXnQoJAkcqvksKV377Mtn7AXlVvj0JwdiKmoPLABjpgFC7t3Mqq+aLc5A7iXCqYE/LpP8w7LTg
u75niiY4Oo/+mKWoWUV12MNUCpALBq4R1qQCrLty2JrXisSoCbsA5po8urpqyX3YqWsMVqR6Zboy
qaPqd61p2JARaZEUUMIJm7DKi7xi24bs6aVdy548wp4VsLD40gBhp2CWWIErqRP/eVcm4Km/iZj5
yTyQm7Dh64D466a7qXVM2sGou46Jm6Jt6q1uYbdA28HOB5KATMRL6rj5Kb7p67V3+8BxjKSzepoE
m5C2yQEK7MmSm8joepoScKQKbL0N4yXP2ZPpWn2NvKuWC8Ok6KQb1gDAKceP67/Mmsbg6sDySaNL
N73yuX2kTIfu6q6x2cMSEL/oK8ikOKf/guuwd5qtwKqRv4xi2ld1OZy6I1zCd8vKFIABS3xfUuxp
Iqmr1LqOPfjHsiq6ULumCpu+CsuVy2uQBfmc0dnHaapDFlzHdnxGCCQcgPKcTrrO6WqGjFqihQGc
NQyc6KyzQlyuyExiFynC4vebkpivDLabvMqaVhfMv2miGMmti+tNAl2+NirCg1vN2enMNX2a2Pqa
SjsBFZzJEzDTr4mlrxwAdMuzxXGBCtK8Mi2Szpx9wizD+zyuTivKywyS4/rIG226rlyTIQyQWV3E
cqeQH5zEdWitb/uQuMzTymOjvwmc4uevuorCppbV3rSvCuu4lrN91nfDfd2OoBvUNTxf/zRKo+vI
yBc5shfJyH1tdZAoz0mqzUtnrMi6vlRt1bvMag7qrZXks2Ei0JRsw9YHkbic2OAnwiAN1sLplQEt
ybxphSL8feD80hrt2h1MuDuduBiJ2qBrrybNsNMMzX3dwxZAuFh63ENd01A920ENwV2thrBMtyzz
JZEMoGAZAeULwS0tzMvsyzZKwDh9wI3sfOzLzJT81LFNyn0N1eVNuQyL0qtpysadkPGd09p5svvM
tFItkF9rt6r8pQCMwnDNyGZopT3cj2yNm/vak9v3xWqNuGooyivttgRrwCiNpRAewbyd2vAcbHJM
ikjax+K7ywfNrJc4i9jty/1qtQtZzf+oDdJLC775C5q0qL0sCqlIatEEDMwU3Mm//bt9Dbc2DX4q
Pdnpu7ZOytfJPdQE68pNLt9ELd+JK8cVTK7eDU88Ht0aTXbo0tr9bbcyHd5N3tKiLNQ5rdtyTQEf
PsO299o2ysgofeFE/ZofTdPqPedyPub+qrhHjte+beL9jdcZvZsb0ADhzeSFq5q4PdrFLQENoHP7
arqofeaDK3RJCrlV3a8iGaVcHNx0frX2rZ3cHeI8jqSY/uduON0BDb5FZ9Xi25uPO+j8zdm1UxcP
INAPzdtUvqSiDLkKkEQKAAHBHuwO7NxO3uRquOYs6sum7tNWbeZSfuHJXcpxXu13bpv/zmesnuzA
Zp63AbDCWo3QFNLQX+tWC8CweG7Tpe7TS8rrrr50PG65Mr7ABtnfYd7Vpvzk+T7cz53n1k6jur4A
dw2m/u212/tWzA61RKuvC9AA7BzlUC7t+1641UzlVi7hcO3U4gfMb62Riti+8MSaBYDc/Z7TeP7R
clvmJZnVWp2SFILdxgoBzB7j7e7uDZAAOJ8AA7Dz/QAO+7DzDIDz/rDzA0AABMAP8CAP8oAP8ND0
8JAO8GAO8ED07/AO8PAO44D146AO45D1Vl/1YM8PA5AAJSrCKNoAsRzoqwzvwNz2xn7mT17T1D7f
jT3ePk3Zyx7UZo7SetvJJj7LDM0R/3bb8Gqu5uwOVzHPm2wu8zO/zODr+AsfyaD93ks+uMhO6Ree
4YSr7moO3gA5617uVt29+E7K8cIM7rt5rkrO7xHP71/t8aS/yzk+X21PwTAM7hNgAA1gABSQAAWw
D/pQDuWgD/ogDyN/+fke53DL4eve64+L+gSZ0EuN3bo36vAu0mEX1DrvD/JADt/w/eDgDuAQ/u4g
/OXgDuV//ugPDt9wDuegD+h/DvHwDUovD+ZgDu1ADvf/9OYAEO/ewTMnTx66bwYTmnuXLt27cfwM
GGhA0UCFDh80buT4ocNHkB1EiIgQoQKEBhQYSGDZUoIDljBdzpTAwCYFnBQa7Nw5Yf/BTwhBhUL4
yTNlSpU3AwQo2dRpyIwaR0ylOlXjR5MVtGp1WvJk0AUTGjDI2UBsSpsrZ9qsyZJsg59xxap0CVOm
3ZcxHdiVeVMn2pVqW6Zlq5bsBAgVSn7ciDUC0Q0TVOLs2YADzrQ6fQbduhWC5Lwt8dIcfHjz0M5a
wU4Qy1poWA5mXQc1kGBAP3DYsJXD9o2c73jnyg0H93tfP3/+4CVPjhz5gAQ3zf7cEDexas5cRYCU
StWDhxHgrUYIuzOpZtZiGThIUCBBcnLxwcX7Fm++/fng9LPT/w2cO3eGc+ccAgnUJx6EyEHnt/h8
M0geBYMrMJ54yDEoPnPMIShDDuX/yfAdfg44AIGqSqSKow4ek2yl0Wa6izS3NAMKNeyGAosootID
jLKlGuvqx5A84i4jxyJ4oCnHwCpvJ7VajIm0F91iSzSZQhPtSSfdkm3G19LzEqmkSpvuOsV+9Ooz
CmgijLItF1CSNcBgrJKmvtp0k8yv3jRqSxw3aGCAfYYrZxtByzlHt3PQ8TBDcgIE5xvesJnn0W8q
rbS4dxKAy0YykYzqgxFABbUq8EotdaoOKpiLMPMYaM+fgiD0Tz8AASwnQAFrdWc+euLzNZ5aC5yQ
woQopFBYdAgMUJ9g4/HQQ4LQIfa3+hIiJ8OH1iEAARJNDDVFNAWDca26pJzuTqG2/zIpq69+8tKn
sM76a4KlTryKsZCA9Ko2AQrwpxxxAgaYmwEGOIACA9Bd7ay0oMyLLynDfPKlvSgObc6aGDiXy3S5
8szGBZhsK7O/xrzux6BAK/et2d6Ml7U7F6BrXCj7IosCeIlyN84ra9LJ1X+32UYcoQEWp1BD0ckG
IWuFc4ec4QIO2JujBQXHnBDL9MozdTPyltTwTuzgM8AKS+C9ehqkzz535gnwHkGrvhVpuHO9r754
9DFwQAKN/Y9tdxB80CAJAXzUoILOAdAeffS2r0IMOXTooXFGbCzFCpY0z7ykCLtpyrYyfstkj1PL
syiYY9ac3gBCvWprrZ36qT0Bpv/25nbcc/cmHKqpnqeAi5zCrqixXApMdM+bXCv5hmM0ucvUOTPT
xpPibfXmnnLOTjHVJgB9LbgUK3KxTzEvvkXB/JLOrOx9kvf7iWOqfRuqpUZa6qPnKUf/efoXdB4C
AWx34SAg7253NGyAox/wkIgBFAC7zkQgKl8rkUfO5C4K+OtC5ACHsgAknKiJwxtwu4c4SljCgKEw
hSaUm6AMJyECfeMc8/GNfypFHwAlRB71UVyiiBWgwIGwVv85x9oWog0OxYcfBHhgU6q3KlaxqSdx
kcue4OUm1REPLnA5S/ao6K6Q+WQptTlbAcx4xn6ZsXbiKCAB6ycwbEzNgG+U2u3/frcAxbwmZHvi
yVm4pDmjWAdkPPmiIDnzptMkBklmyspq+gin9ARFeFoJWWbGkha4SJAjFHRdqirpF6RY8lwgW424
kicaAZQjdyYU0Dz0Ng9uxG04/cOV0QLGv3K0sY24KyHVCCWPEI1vMd2pikYe8IAanSxzBKgH3vxj
q3LcQ5pRuwfuCChC3WUTd/irWtV2FZ8LQeg3xwLiKw11LGEpizgB3B829HFD/agNQQgJTgLfQYAD
KAAsm/tLIRXWLusAck/wU5NNnkdFCCxFlwtlqBvrt5t5SMqW3IwjwHZDNGzswz1nc0vGdPLFzXCv
emEBClcY+ZhD6tGfK5LOnYYp/xUfoXSPU5SLm8QHEpPkqI9cUsyoKOjT1+VUp5fUGFxm1JkbEaV4
4nJJAfRRTd3JjZX6wwaC9FcObrQtblOTWywZqs0D3gMcBHhAR8zqkZGeZTNxaQAB/PGNXf0HV2+7
He8cWlc32nWA2nSjHOl4tAHpZ57JquX/2qa3D94tOO7ARq1uRSBFJUtvMwSHPtw2HGwUKHDkSMcS
KXJUj62La0jVacOOd0o5ia6fQHGTQhv6Wt5xk6LimMfRBMYb3kSUG7vVjW64YQ97CEC4wi2AAPzR
r7MZQJFbw1HHuuKYzPGkc2sq2U6lp8lNis0kITMeWVhlU53t1J/T6al3wmYVIf/ly4mZm2lIPxay
6Y7LAQXAjS1XWU1s3nY45/jGbgpVtXnAbWqzZKMudWfX2A5nHwf41FnHBkabVkABCyDAO+Shn/no
ajjV3KWBd5k7ve5ugAa03QFZ2ML9gdB+9ktxrR5XRANNqFLg3KF+2AkOgNWNG/rjGzjYUSl/EOCz
WuTjWHZCvPSZ1nM0w2RAdfYT18L2w6vkZu+2ib/98e+q/NtNlyOFDUJFarfcwAc+hHyAYzr4AUTy
kVKZWpqi3il2whPKS60Crj1OKTDMy9iRNRcmg0IAuyhqZBZpBFC2ErWoDGOqv+jxH6PdN78m9p9t
Z2m0WLI4agAbzkLBertb4Rj/HQcopgXzlJgJH8AAFW5HfChEKwHNjcMFHGFYRUhrvN5u1gamI9Vs
yemuTjTH1dxVffJDQ3JUqCDXgkc64NFsDpkj2RICtgj1W0v9tKMe/ihAUXmiscLQDEZJNuimbhrT
PClgKXv9tDWjWmIq46+2sqV3va1dtd5mQ9/YQIeZRXRMb+GZSc3DpJ+fjNBEG1XQ5INKSdxc0HAv
OcmbwuJMFY28cgOlK9Urnrk4ptQGJKAfjw7Q0HhZ61tDtX7V7qbU9Fc//+mPtlmech3rB2pn9Vce
3UJVdCdCgHXwYxwNcYg50kaOXgHrVm8TocpBbGLYghjXI8QyNyeav6unEG7u/5hx32a8KIYI5CHq
eAej1HaogcEb64+VYXHI4Y8GIvnNgwndyKSkMTe9dCPeaswH1t1uBIf46XPkar2zae86lhiO2OBG
N7SRDW70lhvnMJioLLjPIitcpRbPs2HiHBR9xqWJXvlkR+FMGHLhXaXfbp6VpPQTBby39H3GY1MO
QAB++AM3rxZgvE+YuxLOMuaCErAAgw9NuAGQQNi8ctRAfUtnmeNQBAjVYwzAD3UMfXLt4P61MiTO
aUOa+NuoZvlnffO74lXwH656CKW6YlYGv1A0hJwzF/WQdHxf2gwiFoWk5V9ro6P9+aBQiyfuYyCO
Oq266yhTMqi8YzifMq/vOP+vdeswdhOxqGq3bOK1A+odaxsalsOfNxIUxhuzdgKzbSAYJlKAFEmR
rIiA0POnLCKkSlpAvKMiQhqKomi97kK9iTMqHDQyPjOlTREKfQqvHBQfBWA1diisSGMhaWKlDZMm
KtwfAekgvjkHt2mcaKqacxCHwAGWeUiWIurClaujuwLDczAHdMioiRgHhzg6dmAbwYqHXiGHOXQ1
LIwm8jshadI1KuydQHSje9ArA4IqAqrC/xG+/hm+edu0y+ogPaSH70s2cqgHaCm736gx+tghY9Eh
wtoqSxvAWHKbGaoPcuA+bcsHM4oOu2Oq76o4LVKkCPSWCgy8u5qjbdJAT3v/OqlLvxHcNBaLKC2D
JUmBpVgiFEKxh30gAAJIAAL4CdkLwoFjntPKOC3ytoJjvTj7omr0nMxTtHJjvSMDvdjTithTEkFL
kQOAh0vBseEYGqk5IRSLphLqw1xxrA9CkEpRlEZpJbgxunaAoRqyH5mzJoeaJYaANnkAFnfQB1rZ
lV35sfigh2pZLOerNQ+EKijMR1UaIfPTSGuKQrsBIgLJrHPYsUY0Gk57lHPIBsVxHLCTlgYpiIIg
rBnSQmKBEGNJlsmbPP6JpSx7rL2ByMepD3Zoh3xYyla0RoMTNNX4tnIsiWOqSqt8gL+bOrAyPKnD
QFz8xahrPtzaNKTpH93w/x/hixqhUcZ40Cj3AMLOu8Yb3CI/C0JMssbAMKrYozO75CM3OULi0bim
GL2TkiDyeYADQIe4gqZB8UNCcSwqjEKQHBr5mxtDQRZ5eDaCaEiHhJxUjBVFMQdIyTHn2yVx4C8N
iRZ45BtdARAKcbXgULpCKT/bQSESAiziiEgAicwNqytdC7MhWpsOmiws9C/DaqwAScldeZDY1KGD
8I8i+g9XYixmeRSEOJTJ8h9lUZbd0kJJIRAea6zMCs54YAfzpAd/0JRCOhkFaM+JWDV+iE/55Aei
M4f8u893WArm+7T9XCXA+yopey0MXDn3ayHdakRkHDPjXEuhcYd9EIB+cP8Pp/zLknggCdPBQorB
kCkKKtKaztAnwEy4L4KA2CtR0CuJe3FBCcKprpAKBJCHwKkPxhQU4IQ0KmQhqiOUKKzMLEunhchM
CwO/ehhS+3QIzSw7MvygwJGWZ4sVCyEHEFo6YWGWGaoQefAgWyq/LjQ/FiqUwJGrK4Q1oYlMp6sb
GLsPhTgQdOgGYUHQwPogGToHgzjFGHK1tnGHycMVrFvJIqLSaukhS8EbaUmnKDUcxSnAh6wVduiH
+HRGZ9SWCnOIdkiHSZ2cybFPsSs6h8jPAAhADfzUA9urvFK/AI06/dK0eEQapGHQe1BGBg01AYgO
uCRRTymSNXsurADRO2n/ogYTJtHSVX/ilBOds5MCCcTkh/6gEFyBm8dcOrY5IfLTtbBS1Q8SlrVR
FCAViIHQVkstugyBtsnR1oGoRPsoIhnKFViCoSKqkISQoYfMsaiyx6WbwroplDBDGlvBlT68UTU0
tsCCIQ3phn1AB6YxV/6aMfwQPyzsIBtbuovSr5T0UreZp8TRhyf9umohwwIZDne9FQvRh1vhDwAx
T+7rVkvNEG1rB3NQRZUt2SLdVP38T11UvwHdwAEtVZxNQ9lyVVWlUXlMoX2VpqKJpgh9ywdcDCOZ
oFJDERVt0Vq0l6Y1TOZSEkEyqadowR9BgAPgB3iwMWZxIReSK2iKP6eb/1ak4a/MfDZtbTaIGAe3
fdu3FdeBaLZwXdtYcU4JWRu+saxawZvXTEWSO1QTAskRmhsgmo8Qasz8MiHyW8tByRV7/Z/xLKxi
60eC/YbL/YZYUQhhYcnc2JWIqqXC0rR6nSs5zZBjeZxwgodB9Y1xCg4MoxCVLIf7eM1vYAdf0bZ6
4BBMXJSW9ZWXnRx4iNlR9TRDBNVd3MCcbShtoresIxqWo0zGJT/G3bp8dQd2GAAHGj3GqKCO6NWr
yC6rqKAUeSAFULX3/Dm4k0/mSA6JEBH4hd8morB3aIcfq6y3sZoqfbVa2Q0yBT4p3NtESVttHTqB
cFuIUAcFzj4EFgh4cP9gZ3sIzfy+g6CWQPXbvrlCY3kQ11U6sY3HE6LdDtIsK7THujEhiSIadxAh
PmTQx3TCxAWYeSDIhSgIZ6oPbJUHmWOsUHsbHia+ECo+KcwxIPK+HbIWV0NbeXpOS+FJxWksw/VM
8AMnTPxWbzW6lY02lB3eTh2xEQNQ34w3QiEaMiZjK/NNXCQgAAjLmk3ee/PAgPlZ6p3jVn1cEoyo
3IBJ/dgHcNgHA1hRpr3aXl2zWz2SfPqINeuA83VGfjAIdNCHofWx+Gg14OUgGxPP/cDdSY3PdMBd
GdWV/6CUiqxIwJlRLt0vzCXY0PzWtRVXA97WTGVlA262DUnNzHVdDqb/xCuNKx9zkAuxjwOpkDuk
J8Z8yFcTP0HxBvK7FZAVxWjiQ2YtGhUuuXuUzDeqG1fqG2kTzUrpISwUFkiDtdH92XnUL9ptO/pI
iAee2820lhn7DcWhRJvkkGQRrL8BJ5sEP+7DFpRV2d3tkG8dh1v8MA8TPDoSGtm6MnfTRZw9Y3jb
SvrpQKIhZ6Kp1yxzUxm7YGyQBwdCWiDpgAdQgFUbAHToh8ExaXV+toMAh8jTjQCxOrT91iZViOZ8
50nmkH3myRpOolHWQ8bcVxMWkJ5clM1k5YeQ27ILO7Fb57XNv1iJNguh4EpuhyO+Fgh5loY8h+p8
HDtEulSk5FF+NBwC/+IubKWtIstq2i89ZdCKFiARRFVbcTvOEs3oZFdZUZxqxeu5up8gjqZa0Qdu
SGcNmVuBMAiVto9FEadwUmwOPsqve5Bo21QDPur6HFJy4OIvbuhPJTwzdrcMNKCG8tQqO+PbkWPE
M1DlG+FhqZYdWpAG+QYQ6WinEGkCkIfImyXdmCUC2TGUFBams53bQsZEUWV0yGdsieAifdmGgGqE
tUN/zVcTJtw+fExhwVwLgRamllu63RBo02LE6ZBr6VaVrmpsqWX9S5wz3RX8YIdHw91fMRb+kKsM
izUgas1Ym0KqqZtaYlXi0zoTM1BBOZBH8ZUZs8nwY1gbO1dVhaUhLv8UGBsQzJUhVWbDpdEQG/a+
ZUs2zL3JHarEaTuIIx6ckqVsubXUesDsUSVVC2zjeDPnMV6loVnLK9tPxCPnK6Pocpaaey2QiwSc
rOKGA8Fqg9CGa7GUt5MIAoCHQ4EoYFvEHeO0RbQvKzPnWRoQftTj4lBuiBBXGzaQrKIscpI1ewza
ZRaQdMJWbInleS7SBz7vq35zDyFxcZ1pD4lqmbZwDJc2eaBqxa4Hf8ZDSY5vXvYxwxHbuEo6MGdv
94Y1au1ZtVShwvNSF+pb4M0/cUrn2EQiDJPvvX5ccKitx5TR4aYPDTFyBmGUle2+6/6N1Hw2bfBH
X4l1CNFi5cY/k33/COL1bGDUQB2Xx3u9nzge08ZF6Iee8f78QDtG6Bjf2W5qJwgv13b6ccbqG/pg
mtDcoRliPPBkSdu6LdvqH7mRuYnyNVwqYawSlmzoxExc6miJyaua9A2zLUCkwnt1MRiKvgie4GUr
CJU94HE9bw7J7gN+5aFrUvskiHW2dZN92f2LD8vmj1gf5aP7lfuoQ9ecNnowFiO6XTw0T0ZXRheS
OeoN4V+LKHh/Gsn5PnpqzgbBsN/YdGzb9Gd+mnECDre7UgTB8DxvNY7PcwqGEP2oBwfeELBD9ZZN
9YhPh5j1wOY9mjCb6KkxORwv418vFP/69Z8t7VZN3gENMwC0rWVn/2urY8lZ+uaD1Wsrp4/qfs6+
8UkE5WtJwYZusIctu2iZO5rJ2+26N0v+ytxFoXh9gOIY3p8dW1YTnqZpEt3apRB+tkm1RWoEfmWk
3nKio5x3WOBxUGC45db6bLWkpFSn5umV7fjYbbVe+RBny5C0OWbIUbpCp49k+48D4fGV59+IhKV3
728T0u+vJUrDeQhpO+rNVIhred0ZkyHkdBRJbni5Kk9Ajw/3hviWbbXIZl3+Cu/IXu77tE+zu+6n
NjoL2V3g3ealiCMzZr57w5+s78CIPjwTi/FfN04aJZoDWvatxKyvv7qerTdOAwh388oRPPftHEJu
2eJ9kyfvG0N03/8mPmx4EGG8eAjPadx4Tt9GfdzmcfPIrdy8ee5AfkPn8iC3kfOw0SyJMdtEiB7P
DRxIcN7GeOAIbit3j6C7pOCSMnUHDhxDh+beUa1q9d24quPUce2qbhxYsFq5bvVq9uu7dGnTmWtH
jtw3dnHjvX1br565u3jNyXtrzhzbdnnJtcObDt7fxHzp9XUodCk4em8zUhaa0e/Dy0KbIkWqjylB
pOByQoRIV6hkwenUVlWM161DeafBFXUKta68v+SetlPLt++3dsITr/5rNeu73+YQ507cvG1d1YDZ
Jkb8t+/fwOTMBQggzhv48OLFi/tenrz4cOrHe9vmvpz7+PKLzpf/T/R9aILiimJzh43gf+WIkx+A
52SjzTfZnHNSeQOW95NP7gSFjlSIwRObVM3J41JjcLkkUUQ5ZcRRSxTB9Q05DpGTEYp1kSNRSxhu
6NI+Eu20EUGfnYPOOeCco5RS4LCj2VO2scNYbvBUxRpVq6nlZFlnWbUaVVGuo86VXonlpDl+6eYi
OexsBxhW71zY3GrwOOlkWs6RU4+M1/32FmOTbQbVUxClaJyabnWZ2VJJlcPUU0sN6k5Dy/HFl4vy
1NMba04qmQ6kVFLnVl1PxSOmmOSsyWaZTx531VWBZUddXXKCKZhixbkG5pt/dfddeOF4Y6ut4Zm3
qzfm9cqervvB/zcsgcXGJyB/NM2ETUk0lfMfTdAyiw1C0Z5DbYKJmoOggs4K+CxChEblUKK5SfUX
POk6txxzNk4YG4wMjXmYurpBdFuS6SqpVVUXujSiQRbtyCNkl0n2pkOYumiYWmdpiZxaYKGF1Vdk
aSVxlGaNw6XCb90r5FuY5rYko6d2mSK53+AFZ1/k0NMihr/F2fKK9FDm8UQvv6XiXtRtaJFOQeH0
IjrpUqWumtZ9mZ3SeQGmJnVsWUqpYPVQeVzGDp+1VZOfQg0YdB0LJtxwn4Kqbr7wzMqer+DtWt42
++3X63730Dds3EURCC1984Wmd9zDDljUgMXSZCBOEzEk4ofZSP+EjjYvTvQjiT4iNNp222GoTYaK
satvveZuKCPK57JLb72eg766NqCbaSFie7kZa149uxkzmRdjHJZYVa7VlnBrQoqcxBqvRZ11FWVU
KF3f3HZdnCnCLFuKBsNFGfN07ek5hiluXw+dB8MKpslsconu5/uSylxsnq/7uWJKNye7+k2mhVXv
Zl/N71VZIUcqdRTjJSatKS8tk4faAsCNBjGwQXT7VdzMk7dt2E0cFSwWsQgUHwc18D7w2Y97hIXB
IJHmRBxJXE4MQg7OLaoiC7rcN9wnQ9XNMHkxM93q9PW6M6HLTE1KmnVc15q/wMlFDGHIUhbXnORV
p35V+h/v0JL/FbaEqVDgCFmXVlO8h/Xuf58Cn50YsqB4UMh01UmM7OryseVtSntqtFPpvOQ0mkXH
aa8RjouGQ0SnFYYweSGbHqdDqkEqyYloYxe7eha73Nmva8XRH6jWlBYLsWuQ+PufvhC5P0GaSS3d
mQetfnWeBoqyPQ26hwgxqEqifKtwoQkQgCRUJGyAw1nR6k8tDQSObIyGNCh6zqLcF8AueW6YM1TU
MVsoo4qYsYXBtNBV1JRMAbqsLsvTB1Qus7O9yI44j7zk7rYizrXgMWRusdrVwqKOS04pLVnRGsTe
R5zkqG6HSTuac4CjObi8LDYZMWPS/uKWdrRsoNCxS0FhRdAw/0omNYB8KEQVBil+/e9+5rMkxrhY
UQBaskxLOgxGede7pumQYrxb23jgBkL42Mc+I2yKOwC0SgABZSMKQshNaeIf//SnRzXp0eUWkqCF
4MSKORmfi6aZmMz5ZUwz7JxiYlO6eJGoIfMy5snA5LwjIRWpczLNRFLFMFDZzzeSnBKV9rXF3lVp
nfcrnjq5cqV1ZEmc/uMdPpn2RJFu1Cr1wgvsjLa+YYIPjC6Lx8HEVk4wDWlI9KCHmHoDyEflpYBj
a0tuxvqp47HprlH8ShQ/SxbjlUmkHiXrVupa2qx5sYlqXUd3kBXBDeYNhHbDT37qg9uZ5iem0HrW
s27JrBfaZP9a+pBWtLhBS6BabiPOO6IvoysiXjrPeT16ioF6VN0W7Qw7HcJZV7FDGKSSLTpMHR8x
YaW49ZbxXOkCqe9G1dHNTsqRkdrrXvkKxUaCM6NkyRpdA7wOfoRFd/31L1+7Vtna5fEtXO0UO44E
2adEOMKQrXCFU/NYh5INnefzJllJtcWKiVZrWarYaP8LVxLDVSwZKzDW/AdOjH4yhLt95aCetdP+
6JTHEtqIcC9XLaACOVwbcQc3diohWtKklj5e7k4s56MpXxeovMQpCqMLo4aUMXKjQ0d3VXTDP63L
Ud7rUJc61lV+dlUypeEuzirDol8uUbAdvTMAIxXiJ4kKnCr/5m+a7NzfK6lTwHO1a1kqqmgZE2+j
j1wwGrOTTBdJBrGB0tRjIxwopbBDSBhmR6XaKV/diXOuo00toUUq10RHMdXFo6vG4Foq/sY3dk0T
5Di60w1w2MSmOMGJQXDyoWE/7kM5aS+FpJuNX2d32c2+SYLioaCOSFu6vlw2trNNGsihTIZIyyQQ
A1qvICLTfa/JKpiO+BgrPqYpRbJiNuVcmdLAKs1OBVuI+6dfPPf1fk8clX5Nq++Ax3Vr4uxKolFs
cBhvqVT687eC/6gXOlZTfNa8sMs2nOlPB89s/M7owdUZ8APLFUuwNrWhYa21lbe438fpjjYUJPNs
BczaNi/R/7FLRCFiPwTMNy/hG0dnkYcQPXLtXeYNRTdmpcbRe2t++vVM8xjLWNE22atMe9G1Oh9y
ndQHRzhoT01wRLs4tPnjd2lXK/K1gtajeBaxwNOOZyYtibORXlntygu+2q3s3HgHW7nNPR0nVerh
IWUt2cse9q6c2GFZmmvKIy95jZEY4WGBbQAupA3ObV4enPe8Q7Th7cBPczuRg8uJSKPu0sgbutJ1
UYtuvnoWqZsjGrk9R3Kf+9ZLvfXQXZwboY5UR7kWvm/PL1/DnjXKh3ztuwPt2EXO8v8uPvoF9mw7
6T734nATq8NMGpfwXtgzh8x74wem1N7Llm/nEGr31bP5QP/lP4WvXMUJJnj9Twz5ANc/+SPGUnfc
2jEFFrghEmKI3rbwxedxjveAmUTQDIpEoMfgjOqx3jfYDOvR3gVm4PJoSrzJ2wdWBryx27wtDpgA
0x4N4Pr1GdyZFvGkHaOJmJ+ZReNxkZYoHw4uX/3tYP+tk6OVFZdgVfk8mhAGkNVI2uAVkF6MjR+x
CvAAUh4NRzexBTfNEPLUl+5AX/NZH/SxXGhpodmNmMt94dcxnuNhHjxwTvugoGKI3gqBHue1xAPi
3M+FVXTJy5vlDIpY3BsJnx+mXnShHvk4IatAkqg8nPZ5VAzC4PHFWPKlGA86H9lVXsKtnKmZIQ9m
4n81oiH/WopFcZb+TEd27EV5DRSdRMdDjddA4VHHnMowBQZE9V0w7ZHUMMldaaLjYYnJ6WIN7qD1
PeJZnJzkBWACmp7k1OF62aEgQt3BnEbNIFZG2IzvvdkydpUESuAfPp1hQV034Ru+GSLEhRT+9A8j
8lmfJaIl0d0t6uAO1iD/9WImIprbNeInlpVFQRLY3MVgrCJhCMej6GMtflE6WI3sUApgXNYjSU1v
uKKryJATChNqxRU7ahT+TSQuTl/lXSQakstDAKLvyRlYkREZDduXleS/VOBRpWQ14gb5dYh4Oc1T
tUwE+hJcNEb7JJMQKpWirA69KIrUfGMnBmEpquJwBE8S/xqe9ClcyF2kw2yJOU7NJ/KZRYXdO0Af
RwWl2TxhRI1NhxWGUa4GOoXlpwyeahgi2CykZLVFW1DNVpINpQQhUF4URdXdU+JjIaaTIsYXOT5R
/+GVZ6ka5qHDR1KG7t3I7g3mYJaGzqBI8zCEzpygUq3ge0HNpBzGYQgeTHpb+xXSZnbmZu6knCCd
aJ7LGtKQoJFjRW7hL/ofi0GMWb4lbG4Wa4gFVfJP9hWQWl7W2BBWCrZKEgJeCsqOPhaGXjxKW0ZU
P5ZXcgLSWmKlc8pmPXbN73jciznfOnkcxLHjPH5UOgVgDi1H65jLM6WPZzLR0h1T56AgubmOE3Fd
e2IUI5Qy2vWtZoJRFFv5lT2V52Z23Vwumn81ZTjpF/3JleQVqMpZn9rtGz3K3dupD2fqJ4TmkA85
UUUV0uvkp4XWT9nRJ4LSo3wmJVMu3C8iX651h4meKIqmqIquKIu2qIu+KIzGqIt6QADQqInaaI3i
qIx2h47uqI/+KJAGqZDyaIr26JAeKZImqZKeqI0a6ZI+qZL2aEAAADs=

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722210351im_/http://rastertek.com/pic1002.gif

R0lGODlhIAMBAPcAAAAAAP///wht//7+//b5//z9//L3//f6/wlu/wlt/wtu/wxv/w1w/w9x/xFy
/xN0/xNz/xV0/xZ1/xd2/xl3/xp3/xt4/xx5/x16/x96/yB7/yF8/yJ9/yR9/yV+/yZ//yeA/ymA
/yqB/yuC/y2D/y6D/y+E/zCF/zKG/zSH/zWI/zeI/ziJ/zmK/zuL/z2M/z6N/z+O/0GP/0KP/0OQ
/0SR/0aR/0eS/0iT/0mU/0uU/0yV/02W/0+X/1CY/1KZ/1Oa/1Sa/1ab/1ec/1md/1qd/1ue/1yf
/1+g/2Ch/2Gi/2Ki/2Sj/2Wk/2al/2il/2mm/2qn/2uo/22o/26p/2+q/3Cr/3Os/3St/3Wu/3eu
/3iv/3mw/3qx/3yx/32y/3+z/4G0/4K1/4O2/4W3/4a3/4e4/4i5/4q6/4y7/428/4+9/5C9/5G+
/5K//5TA/5bB/5fC/5jC/5rD/5vE/57F/5/G/6DH/6PI/6TJ/6XK/6fL/6jL/6nM/6rN/6zO/67P
/6/Q/7HR/7LR/7PS/7TT/7fU/7jV/7rW/7zX/73Y/7/Z/8Ha/8Lb/8Xc/8bd/8fe/8nf/8zh/87i
/9Dj/9Hk/9Pl/9fn/9no/9rp/93r/97r/9/s/+Lu/+Tv/+jx/+ny/+vz/+71//D2/4m6/5PA/5zF
/6HI/6vO/7nW/7/a/8Pc/8rg/83i/9Tm/9vq/+Dt/+Hu/+Xw/+fx/+z0//P4//j7/+v0/+/2//T5
//X6//n8//v9//3+/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4ALAAAAAAgAwEA
AAj/AAUIHEiwoMGDAxMoRMCwIUMFECMumLiAgcWLFhto3NjAgcePHiGIHAnhgUmTEVJGkMBSwoSX
MCnIlFmhpoWbFi7o3ImhJ4YMQDNoGKphg1GjHJJ2WOqhadMPUEFIlRqiqoirI7JqJcG1hFcTYE2c
GHsChVmzKdKmUMGW7Yq3LOK2mOuirt0XePHC2Asjht8YMgLPmEGjMI0aiGvYWHyjMY7HOHJI1kF5
h2UemHn02NzDh2fPP0L/ABKkdBAhqIUMWT2EiOsisI3INnKk9hEkuHEn2Z1EyZLfTIIHb0K8iZPj
Tp4ohwIlinPnUqJLmUKdCpUq2KtY2W7livfvWMJj/8lCPouW81vSc1m/vot7L/C/yAdDv36Y+/jF
6B/Dnz+Z/2SUIaAZBJ5hoIGkoKEgGmk02KAaEEK4xoRsVNjGhW24oWEpb3TYIRwgghiHHCTKMceJ
c9Chooqm1OGii3bYcceMM56Cx4035qGjHjzyuMePfPDRx5B+FOkHKn8k+QcgTAISyJNPCiLlIFQS
YmUhWBZiyJZcHuJlKqkgImYiZJKpyJmLpLmIKoy02WYjcDayiiN00vnInZDkCUkkfEbCyp+sSCLo
oK1MYugklCSaaCWMVmLJo5a4Iqmkl1RqKSaYZprJppm84ukrmoSqySakcmIqLKiiGksnrHbiyauw
elgiy6yyzGLrLJ/kCsquvIbiayi30CLssKIUaywuuIyirLIGNOtsLdBGm8u0BFSrS7XVHqDtAbZ0
660tu4Qr7i68lGtuAeii28u66w7g7gABxCvvvPTWO29AADs=

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/css/banner-styles.css

.__wb_overlay {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; border: 0px currentColor !important; border-image: none =
!important; left: 0px; top: 0px; width: 100%; height: 100%; position: =
fixed; z-index: 2147483643 !important; opacity: 0.6; background-color: =
rgb(0, 0, 0); -moz-opacity: 0.6;
}
#__wb_record_overlay_div {
	cursor: wait !important;
}
.__wb_record_content {
	margin: 0px !important; padding: 0px !important; border-radius: 8px; =
left: 50%; top: 50%; position: fixed; z-index: 2147483644 !important; =
opacity: 1; box-shadow: 0px 0px 30px 5px #000; background-color: =
rgb(255, 255, 255) !important; -moz-box-shadow: 0 0 30px 5px #000; =
-webkit-box-shadow: 0 0 30px 5px #000;
}
#__wb_record_content_loader {
	width: 574px !important; height: 355px !important; padding-top: 30px =
!important; margin-top: -177px !important; margin-left: -287px =
!important; cursor: wait !important;
}
#__wb_record_content_done {
	width: 855px !important; height: 355px !important; margin-top: -177px =
!important; margin-left: -427px !important;
}
.__wb_record_content > * {
	margin: auto !important; text-align: center !important; font-family: =
"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
display: block !important;
}
.__wb_record_content > wb_h1 {
	margin: 0px !important; padding: 0px !important; width: auto =
!important; height: auto !important; color: rgb(34, 34, 34) !important; =
line-height: 2em; font-size: 36px !important; font-weight: normal =
!important;
}
.__wb_record_content > wb_p {
	margin: 8px 0px !important; padding: 0px !important; color: rgb(34, 34, =
34) !important; line-height: 2em; font-size: 17px !important;
}
.__wb_record_content > #_wb_logo {
	margin-bottom: 10px !important;
}
.__wb_record_content > #_wb_spinner {
	margin-top: 30px !important; margin-bottom: 30px !important;
}
.__wb_record_content > #_wb_curr_url {
	font-weight: bold !important; text-decoration: underline !important;
}
#__wb_record_content_done > #__wb_link {
	padding: 3px !important; border: 1px solid rgb(170, 170, 170) =
!important; border-image: none !important; width: 80% !important; =
height: auto !important; text-align: center !important; font-size: 20px =
!important;
}
#__wb_record_content_done > #__wb_link:focus {
	border-color: rgb(66, 139, 202) !important; outline: 0px !important;
}
#__wb_record_content_done > #__wb_donate_close {
	margin: 0px !important; padding: 8px 8px 0px 0px !important; width: =
auto !important; font-size: 18px !important; float: right; display: =
inline-block;
}
#__wb_donate_close > #__wb_record_done_close {
	vertical-align: bottom !important; display: inline-block; cursor: =
pointer !important;
}
#__wb_record_content_done > #__wb_donate_close a {
	color: rgb(66, 139, 202) !important;
}
#__wb_record_content_done > #__wb_donate_close a:link {
	color: rgb(66, 139, 202) !important; text-decoration: none !important; =
margin-right: 16px !important;
}
#__wb_record_content_done > #__wb_donate_close a:visited {
	color: rgb(66, 139, 202) !important;
}
#__wb_record_content_done > #__wb_donate_close a:hover {
	color: rgb(0, 177, 247) !important;
}
.__wb_banner_div {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; width: inherit !important; z-index: 2147483640 !important;
}
#__wb_spinningSquaresG {
	margin: 30px 0px 30px 160px !important; padding: 0px !important; =
border-radius: 0px !important; border: 0px currentColor !important; =
border-image: none !important; width: 240px; height: 20px; position: =
relative;
}
.__wb_spinningSquaresG {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; border: 0px currentColor !important; border-image: none =
!important; top: 0px; width: 22px; height: 22px; position: absolute; =
transform: scale(0.3); animation-name: bounce_spinningSquaresG; =
animation-duration: 1.9s; animation-iteration-count: infinite; =
background-color: rgb(0, 0, 0); -moz-animation-name: =
bounce_spinningSquaresG; -moz-animation-duration: 1.9s; =
-moz-animation-iteration-count: infinite; -moz-animation-direction: =
linear; -moz-transform: scale(.3); -webkit-animation-name: =
bounce_spinningSquaresG; -webkit-animation-duration: 1.9s; =
-webkit-animation-iteration-count: infinite; =
-webkit-animation-direction: linear; -webkit-transform: scale(.3); =
-o-animation-name: bounce_spinningSquaresG; -o-animation-duration: 1.9s; =
-o-animation-iteration-count: infinite; -o-animation-direction: linear; =
-o-transform: scale(.3);
}
#__wb_spinningSquaresG_1 {
	left: 0px; animation-delay: 0.76s; -moz-animation-delay: 0.76s; =
-webkit-animation-delay: 0.76s; -o-animation-delay: 0.76s;
}
#__wb_spinningSquaresG_2 {
	left: 30px; animation-delay: 0.95s; -moz-animation-delay: 0.95s; =
-webkit-animation-delay: 0.95s; -o-animation-delay: 0.95s;
}
#__wb_spinningSquaresG_3 {
	left: 60px; animation-delay: 1.14s; -moz-animation-delay: 1.14s; =
-webkit-animation-delay: 1.14s; -o-animation-delay: 1.14s;
}
#__wb_spinningSquaresG_4 {
	left: 90px; animation-delay: 1.33s; -moz-animation-delay: 1.33s; =
-webkit-animation-delay: 1.33s; -o-animation-delay: 1.33s;
}
#__wb_spinningSquaresG_5 {
	left: 120px; animation-delay: 1.52s; -moz-animation-delay: 1.52s; =
-webkit-animation-delay: 1.52s; -o-animation-delay: 1.52s;
}
#__wb_spinningSquaresG_6 {
	left: 150px; animation-delay: 1.71s; -moz-animation-delay: 1.71s; =
-webkit-animation-delay: 1.71s; -o-animation-delay: 1.71s;
}
#__wb_spinningSquaresG_7 {
	left: 180px; animation-delay: 1.9s; -moz-animation-delay: 1.9s; =
-webkit-animation-delay: 1.9s; -o-animation-delay: 1.9s;
}
#__wb_spinningSquaresG_8 {
	left: 210px; animation-delay: 2.09s; -moz-animation-delay: 2.09s; =
-webkit-animation-delay: 2.09s; -o-animation-delay: 2.09s;
}

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/analytics.js

var archive_analytics =3D {=0A=
    startTime: new Date(),=0A=
    img_src: "//analytics.archive.org/0.gif",=0A=
    values: { service: 'wb' },=0A=
    =0A=
    onload_func: function() {=0A=
	var now =3D new Date();=0A=
	var loadtime =3D now - archive_analytics.startTime;=0A=
=0A=
	var v =3D archive_analytics.values;=0A=
	v.loadtime =3D loadtime;=0A=
	v.timediff =3D -(now.getTimezoneOffset()/60);=0A=
	v.locale =3D archive_analytics.get_locale();=0A=
	// if no referrer set '-' as referrer=0A=
	v.referrer =3D document.referrer || '-';=0A=
=0A=
        var string =3D archive_analytics.format_bug(v);=0A=
        var loadtime_img =3D new Image(100,25);=0A=
        loadtime_img.src =3D archive_analytics.img_src + "?" + string;=0A=
    },=0A=
    format_bug: function(values) {=0A=
        var ret =3D ['version=3D2'], count =3D 2;=0A=
        =0A=
        for (var data in values) {=0A=
            ret.push(encodeURIComponent(data) + "=3D" + =
encodeURIComponent(values[data]));=0A=
            count =3D count + 1;=0A=
        }=0A=
        ret.push('count=3D' + count);=0A=
        return ret.join("&");=0A=
    },=0A=
    get_locale: function() {=0A=
        if (navigator) {=0A=
	    return navigator.language || navigator.browserLanguage ||=0A=
		navigator.systemLanguage || navigator.userLanguage || '';=0A=
        }=0A=
        return '';=0A=
    },=0A=
    get_cookie: function(name) {=0A=
      var parts =3D document.cookie.split(name + "=3D");=0A=
      if (parts.length =3D=3D 2) return parts.pop().split(";").shift();=0A=
      return 0;=0A=
    }=0A=
};=0A=
=0A=
if (window.addEventListener) {=0A=
    window.addEventListener('load', archive_analytics.onload_func, =
false);=0A=
} else if (window.attachEvent) {=0A=
    window.attachEvent('onload', archive_analytics.onload_func);=0A=
}=0A=
=0A=
window.archive_analytics.values['server_ms'] =3D =
window.archive_analytics.get_cookie("wb_total_perf"); =0A=

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/disclaim-element.js

function getFrameArea(frame) {=0A=
  if(frame.innerWidth) return frame.innerWidth * frame.innerHeight;=0A=
  if(frame.document.documentElement && =
frame.document.documentElement.clientHeight) return =
frame.document.documentElement.clientWidth * =
frame.document.documentElement.clientHeight;=0A=
  if(frame.document.body) return frame.document.body.clientWidth * =
frame.document.body.clientHeight;=0A=
  return 0;=0A=
}=0A=
=0A=
function isLargestFrame() {=0A=
	if(top =3D=3D self) {=0A=
		return true;=0A=
	}=0A=
	if(top.document.body.tagName =3D=3D "BODY") {=0A=
		return false;=0A=
	}=0A=
	largestArea =3D 0;=0A=
	largestFrame =3D null;=0A=
	for(i=3D0;i<top.frames.length;i++) {=0A=
		frame =3D top.frames[i];=0A=
		area =3D getFrameArea(frame);=0A=
		if(area > largestArea) {=0A=
			largestFrame =3D frame;=0A=
			largestArea =3D area;=0A=
		}=0A=
	}=0A=
	return (self =3D=3D largestFrame);=0A=
}=0A=
=0A=
function disclaimElement(element) {=0A=
	if(isLargestFrame()) {=0A=
		element.style.display=3D"block";=0A=
		document.body.insertBefore(element,document.body.firstChild);=0A=
	}=0A=
}=0A=
=0A=
function disclaimToggle(largest, nonLargest) {=0A=
	if(isLargestFrame()) {=0A=
		largest.style.display=3D"block";=0A=
		nonLargest.style.display=3D"none";=0A=
	} else {=0A=
		largest.style.display=3D"none";=0A=
		nonLargest.style.display=3D"block";=0A=
	}=0A=
}=0A=
=0A=

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/graph-calc.js

function getEventX(event) {=0A=
	var posx =3D 0;=0A=
	if (event.pageX || event.pageY) {=0A=
		posx =3D  event.pageX;=0A=
	}=0A=
	else if (event.clientX || event.clientY) 	{=0A=
		posx =3D event.clientX + document.body.scrollLeft=0A=
			+ document.documentElement.scrollLeft;=0A=
	}=0A=
	return posx;=0A=
}=0A=
function getElementX(obj) {=0A=
	var x =3D 0;=0A=
	if (obj.offsetParent) {=0A=
		do {=0A=
			x +=3D obj.offsetLeft;=0A=
		} while (obj =3D obj.offsetParent);=0A=
	}=0A=
	return x;=0A=
}=0A=
function zeroPad(str,len) {=0A=
	var i;=0A=
	var pad =3D "";=0A=
	var s =3D str.toString();=0A=
	for(i=3Ds.length; i < len; i++) {=0A=
		pad =3D "0".toString() + pad.toString();=0A=
	}=0A=
	return pad.toString() + s.toString();=0A=
}=0A=
=0A=
function dateToTimestamp(date) {=0A=
	return date.getFullYear() +=0A=
		zeroPad(date.getMonth()+1,2) +=0A=
		zeroPad(date.getDay()+1,2) +=0A=
		zeroPad(date.getHours(),2) +=0A=
		zeroPad(date.getMinutes(),2) +=0A=
		zeroPad(date.getSeconds(),2);=0A=
}=0A=
=0A=
function calcTimestamp(event,element,firstMS,lastMS) {=0A=
	  var eventX =3D getEventX(event);=0A=
	  var elementX =3D getElementX(element);=0A=
	  var elementWidth =3D element.width;=0A=
	  var msWidth =3D lastMS - firstMS;=0A=
	  var x =3D eventX - elementX;=0A=
	  var pct =3D x / elementWidth;=0A=
	  var pctDate =3D pct * msWidth;=0A=
	  var date =3D pctDate + firstMS;=0A=
	  return dateToTimestamp(new Date(date));=0A=
}=0A=

------=_NextPart_000_0021_01CFB21A.280D2E40
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/jflot/jquery.min.js

/*=0A=
 * jQuery JavaScript Library v1.3.2=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Copyright (c) 2009 John Resig=0A=
 * Dual licensed under the MIT and GPL licenses.=0A=
 * http://docs.jquery.com/License=0A=
 *=0A=
 * Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)=0A=
 * Revision: 6246=0A=
 */=0A=
(function(){var =
window=3Dthis,undefined,_jQuery=3Dwindow.jQuery,_$=3Dwindow.$,jQuery=3Dwi=
ndow.jQuery=3Dwindow.$=3Dfunction(selector,context){return new =
jQuery.fn.init(selector,context)},quickExpr=3D/^[^<]*(<(.|\s)+>)[^>]*$|^#=
([\w-]+)$/,isSimple=3D/^.[^:#\[\.,]*$/;jQuery.fn=3DjQuery.prototype=3D{in=
it:function(selector,context){selector=3Dselector||document;if(selector.n=
odeType){this[0]=3Dselector;this.length=3D1;this.context=3Dselector;retur=
n this}if(typeof selector=3D=3D=3D"string"){var =
match=3DquickExpr.exec(selector);if(match&&(match[1]||!context)){if(match=
[1]){selector=3DjQuery.clean([match[1]],context)}else{var =
elem=3Ddocument.getElementById(match[3]);if(elem&&elem.id!=3Dmatch[3]){re=
turn jQuery().find(selector)}var =
ret=3DjQuery(elem||[]);ret.context=3Ddocument;ret.selector=3Dselector;ret=
urn ret}}else{return =
jQuery(context).find(selector)}}else{if(jQuery.isFunction(selector)){retu=
rn =
jQuery(document).ready(selector)}}if(selector.selector&&selector.context)=
{this.selector=3Dselector.selector;this.context=3Dselector.context}return=
 =
this.setArray(jQuery.isArray(selector)?selector:jQuery.makeArray(selector=
))},selector:"",jquery:"1.3.2",size:function(){return =
this.length},get:function(num){return =
num=3D=3D=3Dundefined?Array.prototype.slice.call(this):this[num]},pushSta=
ck:function(elems,name,selector){var =
ret=3DjQuery(elems);ret.prevObject=3Dthis;ret.context=3Dthis.context;if(n=
ame=3D=3D=3D"find"){ret.selector=3Dthis.selector+(this.selector?" =
":"")+selector}else{if(name){ret.selector=3Dthis.selector+"."+name+"("+se=
lector+")"}}return =
ret},setArray:function(elems){this.length=3D0;Array.prototype.push.apply(=
this,elems);return this},each:function(callback,args){return =
jQuery.each(this,callback,args)},index:function(elem){return =
jQuery.inArray(elem&&elem.jquery?elem[0]:elem,this)},attr:function(name,v=
alue,type){var options=3Dname;if(typeof =
name=3D=3D=3D"string"){if(value=3D=3D=3Dundefined){return =
this[0]&&jQuery[type||"attr"](this[0],name)}else{options=3D{};options[nam=
e]=3Dvalue}}return this.each(function(i){for(name in =
options){jQuery.attr(type?this.style:this,name,jQuery.prop(this,options[n=
ame],type,i,name))}})},css:function(key,value){if((key=3D=3D"width"||key=3D=
=3D"height")&&parseFloat(value)<0){value=3Dundefined}return =
this.attr(key,value,"curCSS")},text:function(text){if(typeof =
text!=3D=3D"object"&&text!=3Dnull){return =
this.empty().append((this[0]&&this[0].ownerDocument||document).createText=
Node(text))}var =
ret=3D"";jQuery.each(text||this,function(){jQuery.each(this.childNodes,fu=
nction(){if(this.nodeType!=3D8){ret+=3Dthis.nodeType!=3D1?this.nodeValue:=
jQuery.fn.text([this])}})});return =
ret},wrapAll:function(html){if(this[0]){var =
wrap=3DjQuery(html,this[0].ownerDocument).clone();if(this[0].parentNode){=
wrap.insertBefore(this[0])}wrap.map(function(){var =
elem=3Dthis;while(elem.firstChild){elem=3Delem.firstChild}return =
elem}).append(this)}return this},wrapInner:function(html){return =
this.each(function(){jQuery(this).contents().wrapAll(html)})},wrap:functi=
on(html){return =
this.each(function(){jQuery(this).wrapAll(html)})},append:function(){retu=
rn =
this.domManip(arguments,true,function(elem){if(this.nodeType=3D=3D1){this=
.appendChild(elem)}})},prepend:function(){return =
this.domManip(arguments,true,function(elem){if(this.nodeType=3D=3D1){this=
.insertBefore(elem,this.firstChild)}})},before:function(){return =
this.domManip(arguments,false,function(elem){this.parentNode.insertBefore=
(elem,this)})},after:function(){return =
this.domManip(arguments,false,function(elem){this.parentNode.insertBefore=
(elem,this.nextSibling)})},end:function(){return =
this.prevObject||jQuery([])},push:[].push,sort:[].sort,splice:[].splice,f=
ind:function(selector){if(this.length=3D=3D=3D1){var =
ret=3Dthis.pushStack([],"find",selector);ret.length=3D0;jQuery.find(selec=
tor,this[0],ret);return ret}else{return =
this.pushStack(jQuery.unique(jQuery.map(this,function(elem){return =
jQuery.find(selector,elem)})),"find",selector)}},clone:function(events){v=
ar =
ret=3Dthis.map(function(){if(!jQuery.support.noCloneEvent&&!jQuery.isXMLD=
oc(this)){var html=3Dthis.outerHTML;if(!html){var =
div=3Dthis.ownerDocument.createElement("div");div.appendChild(this.cloneN=
ode(true));html=3Ddiv.innerHTML}return jQuery.clean([html.replace(/ =
jQuery\d+=3D"(?:\d+|null)"/g,"").replace(/^\s*/,"")])[0]}else{return =
this.cloneNode(true)}});if(events=3D=3D=3Dtrue){var =
orig=3Dthis.find("*").andSelf(),i=3D0;ret.find("*").andSelf().each(functi=
on(){if(this.nodeName!=3D=3Dorig[i].nodeName){return }var =
events=3DjQuery.data(orig[i],"events");for(var type in events){for(var =
handler in =
events[type]){jQuery.event.add(this,type,events[type][handler],events[typ=
e][handler].data)}}i++})}return ret},filter:function(selector){return =
this.pushStack(jQuery.isFunction(selector)&&jQuery.grep(this,function(ele=
m,i){return =
selector.call(elem,i)})||jQuery.multiFilter(selector,jQuery.grep(this,fun=
ction(elem){return =
elem.nodeType=3D=3D=3D1})),"filter",selector)},closest:function(selector)=
{var =
pos=3DjQuery.expr.match.POS.test(selector)?jQuery(selector):null,closer=3D=
0;return this.map(function(){var =
cur=3Dthis;while(cur&&cur.ownerDocument){if(pos?pos.index(cur)>-1:jQuery(=
cur).is(selector)){jQuery.data(cur,"closest",closer);return =
cur}cur=3Dcur.parentNode;closer++}})},not:function(selector){if(typeof =
selector=3D=3D=3D"string"){if(isSimple.test(selector)){return =
this.pushStack(jQuery.multiFilter(selector,this,true),"not",selector)}els=
e{selector=3DjQuery.multiFilter(selector,this)}}var =
isArrayLike=3Dselector.length&&selector[selector.length-1]!=3D=3Dundefine=
d&&!selector.nodeType;return this.filter(function(){return =
isArrayLike?jQuery.inArray(this,selector)<0:this!=3Dselector})},add:funct=
ion(selector){return =
this.pushStack(jQuery.unique(jQuery.merge(this.get(),typeof =
selector=3D=3D=3D"string"?jQuery(selector):jQuery.makeArray(selector))))}=
,is:function(selector){return =
!!selector&&jQuery.multiFilter(selector,this).length>0},hasClass:function=
(selector){return =
!!selector&&this.is("."+selector)},val:function(value){if(value=3D=3D=3Du=
ndefined){var =
elem=3Dthis[0];if(elem){if(jQuery.nodeName(elem,"option")){return(elem.at=
tributes.value||{}).specified?elem.value:elem.text}if(jQuery.nodeName(ele=
m,"select")){var =
index=3Delem.selectedIndex,values=3D[],options=3Delem.options,one=3Delem.=
type=3D=3D"select-one";if(index<0){return null}for(var =
i=3Done?index:0,max=3Done?index+1:options.length;i<max;i++){var =
option=3Doptions[i];if(option.selected){value=3DjQuery(option).val();if(o=
ne){return value}values.push(value)}}return =
values}return(elem.value||"").replace(/\r/g,"")}return =
undefined}if(typeof value=3D=3D=3D"number"){value+=3D""}return =
this.each(function(){if(this.nodeType!=3D1){return =
}if(jQuery.isArray(value)&&/radio|checkbox/.test(this.type)){this.checked=
=3D(jQuery.inArray(this.value,value)>=3D0||jQuery.inArray(this.name,value=
)>=3D0)}else{if(jQuery.nodeName(this,"select")){var =
values=3DjQuery.makeArray(value);jQuery("option",this).each(function(){th=
is.selected=3D(jQuery.inArray(this.value,values)>=3D0||jQuery.inArray(thi=
s.text,values)>=3D0)});if(!values.length){this.selectedIndex=3D-1}}else{t=
his.value=3Dvalue}}})},html:function(value){return =
value=3D=3D=3Dundefined?(this[0]?this[0].innerHTML.replace(/ =
jQuery\d+=3D"(?:\d+|null)"/g,""):null):this.empty().append(value)},replac=
eWith:function(value){return =
this.after(value).remove()},eq:function(i){return =
this.slice(i,+i+1)},slice:function(){return =
this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.=
prototype.slice.call(arguments).join(","))},map:function(callback){return=
 this.pushStack(jQuery.map(this,function(elem,i){return =
callback.call(elem,i,elem)}))},andSelf:function(){return =
this.add(this.prevObject)},domManip:function(args,table,callback){if(this=
[0]){var =
fragment=3D(this[0].ownerDocument||this[0]).createDocumentFragment(),scri=
pts=3DjQuery.clean(args,(this[0].ownerDocument||this[0]),fragment),first=3D=
fragment.firstChild;if(first){for(var =
i=3D0,l=3Dthis.length;i<l;i++){callback.call(root(this[i],first),this.len=
gth>1||i>0?fragment.cloneNode(true):fragment)}}if(scripts){jQuery.each(sc=
ripts,evalScript)}}return this;function root(elem,cur){return =
table&&jQuery.nodeName(elem,"table")&&jQuery.nodeName(cur,"tr")?(elem.get=
ElementsByTagName("tbody")[0]||elem.appendChild(elem.ownerDocument.create=
Element("tbody"))):elem}}};jQuery.fn.init.prototype=3DjQuery.fn;function =
evalScript(i,elem){if(elem.src){jQuery.ajax({url:elem.src,async:false,dat=
aType:"script"})}else{jQuery.globalEval(elem.text||elem.textContent||elem=
.innerHTML||"")}if(elem.parentNode){elem.parentNode.removeChild(elem)}}fu=
nction now(){return +new =
Date}jQuery.extend=3DjQuery.fn.extend=3Dfunction(){var =
target=3Darguments[0]||{},i=3D1,length=3Darguments.length,deep=3Dfalse,op=
tions;if(typeof =
target=3D=3D=3D"boolean"){deep=3Dtarget;target=3Darguments[1]||{};i=3D2}i=
f(typeof =
target!=3D=3D"object"&&!jQuery.isFunction(target)){target=3D{}}if(length=3D=
=3Di){target=3Dthis;--i}for(;i<length;i++){if((options=3Darguments[i])!=3D=
null){for(var name in options){var =
src=3Dtarget[name],copy=3Doptions[name];if(target=3D=3D=3Dcopy){continue}=
if(deep&&copy&&typeof =
copy=3D=3D=3D"object"&&!copy.nodeType){target[name]=3DjQuery.extend(deep,=
src||(copy.length!=3Dnull?[]:{}),copy)}else{if(copy!=3D=3Dundefined){targ=
et[name]=3Dcopy}}}}}return target};var =
exclude=3D/z-?index|font-?weight|opacity|zoom|line-?height/i,defaultView=3D=
document.defaultView||{},toString=3DObject.prototype.toString;jQuery.exte=
nd({noConflict:function(deep){window.$=3D_$;if(deep){window.jQuery=3D_jQu=
ery}return jQuery},isFunction:function(obj){return =
toString.call(obj)=3D=3D=3D"[object =
Function]"},isArray:function(obj){return =
toString.call(obj)=3D=3D=3D"[object =
Array]"},isXMLDoc:function(elem){return =
elem.nodeType=3D=3D=3D9&&elem.documentElement.nodeName!=3D=3D"HTML"||!!el=
em.ownerDocument&&jQuery.isXMLDoc(elem.ownerDocument)},globalEval:functio=
n(data){if(data&&/\S/.test(data)){var =
head=3Ddocument.getElementsByTagName("head")[0]||document.documentElement=
,script=3Ddocument.createElement("script");script.type=3D"text/javascript=
";if(jQuery.support.scriptEval){script.appendChild(document.createTextNod=
e(data))}else{script.text=3Ddata}head.insertBefore(script,head.firstChild=
);head.removeChild(script)}},nodeName:function(elem,name){return =
elem.nodeName&&elem.nodeName.toUpperCase()=3D=3Dname.toUpperCase()},each:=
function(object,callback,args){var =
name,i=3D0,length=3Dobject.length;if(args){if(length=3D=3D=3Dundefined){f=
or(name in =
object){if(callback.apply(object[name],args)=3D=3D=3Dfalse){break}}}else{=
for(;i<length;){if(callback.apply(object[i++],args)=3D=3D=3Dfalse){break}=
}}}else{if(length=3D=3D=3Dundefined){for(name in =
object){if(callback.call(object[name],name,object[name])=3D=3D=3Dfalse){b=
reak}}}else{for(var =
value=3Dobject[0];i<length&&callback.call(value,i,value)!=3D=3Dfalse;valu=
e=3Dobject[++i]){}}}return =
object},prop:function(elem,value,type,i,name){if(jQuery.isFunction(value)=
){value=3Dvalue.call(elem,i)}return typeof =
value=3D=3D=3D"number"&&type=3D=3D"curCSS"&&!exclude.test(name)?value+"px=
":value},className:{add:function(elem,classNames){jQuery.each((classNames=
||"").split(/\s+/),function(i,className){if(elem.nodeType=3D=3D1&&!jQuery=
.className.has(elem.className,className)){elem.className+=3D(elem.classNa=
me?" =
":"")+className}})},remove:function(elem,classNames){if(elem.nodeType=3D=3D=
1){elem.className=3DclassNames!=3D=3Dundefined?jQuery.grep(elem.className=
.split(/\s+/),function(className){return =
!jQuery.className.has(classNames,className)}).join(" =
"):""}},has:function(elem,className){return =
elem&&jQuery.inArray(className,(elem.className||elem).toString().split(/\=
s+/))>-1}},swap:function(elem,options,callback){var old=3D{};for(var =
name in =
options){old[name]=3Delem.style[name];elem.style[name]=3Doptions[name]}ca=
llback.call(elem);for(var name in =
options){elem.style[name]=3Dold[name]}},css:function(elem,name,force,extr=
a){if(name=3D=3D"width"||name=3D=3D"height"){var =
val,props=3D{position:"absolute",visibility:"hidden",display:"block"},whi=
ch=3Dname=3D=3D"width"?["Left","Right"]:["Top","Bottom"];function =
getWH(){val=3Dname=3D=3D"width"?elem.offsetWidth:elem.offsetHeight;if(ext=
ra=3D=3D=3D"border"){return =
}jQuery.each(which,function(){if(!extra){val-=3DparseFloat(jQuery.curCSS(=
elem,"padding"+this,true))||0}if(extra=3D=3D=3D"margin"){val+=3DparseFloa=
t(jQuery.curCSS(elem,"margin"+this,true))||0}else{val-=3DparseFloat(jQuer=
y.curCSS(elem,"border"+this+"Width",true))||0}})}if(elem.offsetWidth!=3D=3D=
0){getWH()}else{jQuery.swap(elem,props,getWH)}return =
Math.max(0,Math.round(val))}return =
jQuery.curCSS(elem,name,force)},curCSS:function(elem,name,force){var =
ret,style=3Delem.style;if(name=3D=3D"opacity"&&!jQuery.support.opacity){r=
et=3DjQuery.attr(style,"opacity");return =
ret=3D=3D""?"1":ret}if(name.match(/float/i)){name=3DstyleFloat}if(!force&=
&style&&style[name]){ret=3Dstyle[name]}else{if(defaultView.getComputedSty=
le){if(name.match(/float/i)){name=3D"float"}name=3Dname.replace(/([A-Z])/=
g,"-$1").toLowerCase();var =
computedStyle=3DdefaultView.getComputedStyle(elem,null);if(computedStyle)=
{ret=3DcomputedStyle.getPropertyValue(name)}if(name=3D=3D"opacity"&&ret=3D=
=3D""){ret=3D"1"}}else{if(elem.currentStyle){var =
camelCase=3Dname.replace(/\-(\w)/g,function(all,letter){return =
letter.toUpperCase()});ret=3Delem.currentStyle[name]||elem.currentStyle[c=
amelCase];if(!/^\d+(px)?$/i.test(ret)&&/^\d/.test(ret)){var =
left=3Dstyle.left,rsLeft=3Delem.runtimeStyle.left;elem.runtimeStyle.left=3D=
elem.currentStyle.left;style.left=3Dret||0;ret=3Dstyle.pixelLeft+"px";sty=
le.left=3Dleft;elem.runtimeStyle.left=3DrsLeft}}}}return =
ret},clean:function(elems,context,fragment){context=3Dcontext||document;i=
f(typeof =
context.createElement=3D=3D=3D"undefined"){context=3Dcontext.ownerDocumen=
t||context[0]&&context[0].ownerDocument||document}if(!fragment&&elems.len=
gth=3D=3D=3D1&&typeof elems[0]=3D=3D=3D"string"){var =
match=3D/^<(\w+)\s*\/?>$/.exec(elems[0]);if(match){return[context.createE=
lement(match[1])]}}var =
ret=3D[],scripts=3D[],div=3Dcontext.createElement("div");jQuery.each(elem=
s,function(i,elem){if(typeof =
elem=3D=3D=3D"number"){elem+=3D""}if(!elem){return }if(typeof =
elem=3D=3D=3D"string"){elem=3Delem.replace(/(<(\w+)[^>]*?)\/>/g,function(=
all,front,tag){return =
tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?all=
:front+"></"+tag+">"});var =
tags=3Delem.replace(/^\s+/,"").substring(0,10).toLowerCase();var =
wrap=3D!tags.indexOf("<opt")&&[1,"<select =
multiple=3D'multiple'>","</select>"]||!tags.indexOf("<leg")&&[1,"<fieldse=
t>","</fieldset>"]||tags.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,"<ta=
ble>","</table>"]||!tags.indexOf("<tr")&&[2,"<table><tbody>","</tbody></t=
able>"]||(!tags.indexOf("<td")||!tags.indexOf("<th"))&&[3,"<table><tbody>=
<tr>","</tr></tbody></table>"]||!tags.indexOf("<col")&&[2,"<table><tbody>=
</tbody><colgroup>","</colgroup></table>"]||!jQuery.support.htmlSerialize=
&&[1,"div<div>","</div>"]||[0,"",""];div.innerHTML=3Dwrap[1]+elem+wrap[2]=
;while(wrap[0]--){div=3Ddiv.lastChild}if(!jQuery.support.tbody){var =
hasBody=3D/<tbody/i.test(elem),tbody=3D!tags.indexOf("<table")&&!hasBody?=
div.firstChild&&div.firstChild.childNodes:wrap[1]=3D=3D"<table>"&&!hasBod=
y?div.childNodes:[];for(var =
j=3Dtbody.length-1;j>=3D0;--j){if(jQuery.nodeName(tbody[j],"tbody")&&!tbo=
dy[j].childNodes.length){tbody[j].parentNode.removeChild(tbody[j])}}}if(!=
jQuery.support.leadingWhitespace&&/^\s/.test(elem)){div.insertBefore(cont=
ext.createTextNode(elem.match(/^\s*/)[0]),div.firstChild)}elem=3DjQuery.m=
akeArray(div.childNodes)}if(elem.nodeType){ret.push(elem)}else{ret=3DjQue=
ry.merge(ret,elem)}});if(fragment){for(var =
i=3D0;ret[i];i++){if(jQuery.nodeName(ret[i],"script")&&(!ret[i].type||ret=
[i].type.toLowerCase()=3D=3D=3D"text/javascript")){scripts.push(ret[i].pa=
rentNode?ret[i].parentNode.removeChild(ret[i]):ret[i])}else{if(ret[i].nod=
eType=3D=3D=3D1){ret.splice.apply(ret,[i+1,0].concat(jQuery.makeArray(ret=
[i].getElementsByTagName("script"))))}fragment.appendChild(ret[i])}}retur=
n scripts}return =
ret},attr:function(elem,name,value){if(!elem||elem.nodeType=3D=3D3||elem.=
nodeType=3D=3D8){return undefined}var =
notxml=3D!jQuery.isXMLDoc(elem),set=3Dvalue!=3D=3Dundefined;name=3Dnotxml=
&&jQuery.props[name]||name;if(elem.tagName){var =
special=3D/href|src|style/.test(name);if(name=3D=3D"selected"&&elem.paren=
tNode){elem.parentNode.selectedIndex}if(name in =
elem&&notxml&&!special){if(set){if(name=3D=3D"type"&&jQuery.nodeName(elem=
,"input")&&elem.parentNode){throw"type property can't be =
changed"}elem[name]=3Dvalue}if(jQuery.nodeName(elem,"form")&&elem.getAttr=
ibuteNode(name)){return =
elem.getAttributeNode(name).nodeValue}if(name=3D=3D"tabIndex"){var =
attributeNode=3Delem.getAttributeNode("tabIndex");return =
attributeNode&&attributeNode.specified?attributeNode.value:elem.nodeName.=
match(/(button|input|object|select|textarea)/i)?0:elem.nodeName.match(/^(=
a|area)$/i)&&elem.href?0:undefined}return =
elem[name]}if(!jQuery.support.style&&notxml&&name=3D=3D"style"){return =
jQuery.attr(elem.style,"cssText",value)}if(set){elem.setAttribute(name,""=
+value)}var =
attr=3D!jQuery.support.hrefNormalized&&notxml&&special?elem.getAttribute(=
name,2):elem.getAttribute(name);return =
attr=3D=3D=3Dnull?undefined:attr}if(!jQuery.support.opacity&&name=3D=3D"o=
pacity"){if(set){elem.zoom=3D1;elem.filter=3D(elem.filter||"").replace(/a=
lpha\([^)]*\)/,"")+(parseInt(value)+""=3D=3D"NaN"?"":"alpha(opacity=3D"+v=
alue*100+")")}return =
elem.filter&&elem.filter.indexOf("opacity=3D")>=3D0?(parseFloat(elem.filt=
er.match(/opacity=3D([^)]*)/)[1])/100)+"":""}name=3Dname.replace(/-([a-z]=
)/ig,function(all,letter){return =
letter.toUpperCase()});if(set){elem[name]=3Dvalue}return =
elem[name]},trim:function(text){return(text||"").replace(/^\s+|\s+$/g,"")=
},makeArray:function(array){var ret=3D[];if(array!=3Dnull){var =
i=3Darray.length;if(i=3D=3Dnull||typeof =
array=3D=3D=3D"string"||jQuery.isFunction(array)||array.setInterval){ret[=
0]=3Darray}else{while(i){ret[--i]=3Darray[i]}}}return =
ret},inArray:function(elem,array){for(var =
i=3D0,length=3Darray.length;i<length;i++){if(array[i]=3D=3D=3Delem){retur=
n i}}return -1},merge:function(first,second){var =
i=3D0,elem,pos=3Dfirst.length;if(!jQuery.support.getAll){while((elem=3Dse=
cond[i++])!=3Dnull){if(elem.nodeType!=3D8){first[pos++]=3Delem}}}else{whi=
le((elem=3Dsecond[i++])!=3Dnull){first[pos++]=3Delem}}return =
first},unique:function(array){var ret=3D[],done=3D{};try{for(var =
i=3D0,length=3Darray.length;i<length;i++){var =
id=3DjQuery.data(array[i]);if(!done[id]){done[id]=3Dtrue;ret.push(array[i=
])}}}catch(e){ret=3Darray}return =
ret},grep:function(elems,callback,inv){var ret=3D[];for(var =
i=3D0,length=3Delems.length;i<length;i++){if(!inv!=3D!callback(elems[i],i=
)){ret.push(elems[i])}}return ret},map:function(elems,callback){var =
ret=3D[];for(var i=3D0,length=3Delems.length;i<length;i++){var =
value=3Dcallback(elems[i],i);if(value!=3Dnull){ret[ret.length]=3Dvalue}}r=
eturn ret.concat.apply([],ret)}});var =
userAgent=3Dnavigator.userAgent.toLowerCase();jQuery.browser=3D{version:(=
userAgent.match(/.+(?:rv|it|ra|ie)[\/: =
]([\d.]+)/)||[0,"0"])[1],safari:/webkit/.test(userAgent),opera:/opera/.te=
st(userAgent),msie:/msie/.test(userAgent)&&!/opera/.test(userAgent),mozil=
la:/mozilla/.test(userAgent)&&!/(compatible|webkit)/.test(userAgent)};jQu=
ery.each({parent:function(elem){return =
elem.parentNode},parents:function(elem){return =
jQuery.dir(elem,"parentNode")},next:function(elem){return =
jQuery.nth(elem,2,"nextSibling")},prev:function(elem){return =
jQuery.nth(elem,2,"previousSibling")},nextAll:function(elem){return =
jQuery.dir(elem,"nextSibling")},prevAll:function(elem){return =
jQuery.dir(elem,"previousSibling")},siblings:function(elem){return =
jQuery.sibling(elem.parentNode.firstChild,elem)},children:function(elem){=
return jQuery.sibling(elem.firstChild)},contents:function(elem){return =
jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.contentWindow.d=
ocument:jQuery.makeArray(elem.childNodes)}},function(name,fn){jQuery.fn[n=
ame]=3Dfunction(selector){var =
ret=3DjQuery.map(this,fn);if(selector&&typeof =
selector=3D=3D"string"){ret=3DjQuery.multiFilter(selector,ret)}return =
this.pushStack(jQuery.unique(ret),name,selector)}});jQuery.each({appendTo=
:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",r=
eplaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=3Dfuncti=
on(selector){var ret=3D[],insert=3DjQuery(selector);for(var =
i=3D0,l=3Dinsert.length;i<l;i++){var =
elems=3D(i>0?this.clone(true):this).get();jQuery.fn[original].apply(jQuer=
y(insert[i]),elems);ret=3Dret.concat(elems)}return =
this.pushStack(ret,name,selector)}});jQuery.each({removeAttr:function(nam=
e){jQuery.attr(this,name,"");if(this.nodeType=3D=3D1){this.removeAttribut=
e(name)}},addClass:function(classNames){jQuery.className.add(this,classNa=
mes)},removeClass:function(classNames){jQuery.className.remove(this,class=
Names)},toggleClass:function(classNames,state){if(typeof =
state!=3D=3D"boolean"){state=3D!jQuery.className.has(this,classNames)}jQu=
ery.className[state?"add":"remove"](this,classNames)},remove:function(sel=
ector){if(!selector||jQuery.filter(selector,[this]).length){jQuery("*",th=
is).add([this]).each(function(){jQuery.event.remove(this);jQuery.removeDa=
ta(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},empty=
:function(){jQuery(this).children().remove();while(this.firstChild){this.=
removeChild(this.firstChild)}}},function(name,fn){jQuery.fn[name]=3Dfunct=
ion(){return this.each(fn,arguments)}});function num(elem,prop){return =
elem[0]&&parseInt(jQuery.curCSS(elem[0],prop,true),10)||0}var =
expando=3D"jQuery"+now(),uuid=3D0,windowData=3D{};jQuery.extend({cache:{}=
,data:function(elem,name,data){elem=3Delem=3D=3Dwindow?windowData:elem;va=
r =
id=3Delem[expando];if(!id){id=3Delem[expando]=3D++uuid}if(name&&!jQuery.c=
ache[id]){jQuery.cache[id]=3D{}}if(data!=3D=3Dundefined){jQuery.cache[id]=
[name]=3Ddata}return =
name?jQuery.cache[id][name]:id},removeData:function(elem,name){elem=3Dele=
m=3D=3Dwindow?windowData:elem;var =
id=3Delem[expando];if(name){if(jQuery.cache[id]){delete =
jQuery.cache[id][name];name=3D"";for(name in =
jQuery.cache[id]){break}if(!name){jQuery.removeData(elem)}}}else{try{dele=
te =
elem[expando]}catch(e){if(elem.removeAttribute){elem.removeAttribute(expa=
ndo)}}delete =
jQuery.cache[id]}},queue:function(elem,type,data){if(elem){type=3D(type||=
"fx")+"queue";var =
q=3DjQuery.data(elem,type);if(!q||jQuery.isArray(data)){q=3DjQuery.data(e=
lem,type,jQuery.makeArray(data))}else{if(data){q.push(data)}}}return =
q},dequeue:function(elem,type){var =
queue=3DjQuery.queue(elem,type),fn=3Dqueue.shift();if(!type||type=3D=3D=3D=
"fx"){fn=3Dqueue[0]}if(fn!=3D=3Dundefined){fn.call(elem)}}});jQuery.fn.ex=
tend({data:function(key,value){var =
parts=3Dkey.split(".");parts[1]=3Dparts[1]?"."+parts[1]:"";if(value=3D=3D=
=3Dundefined){var =
data=3Dthis.triggerHandler("getData"+parts[1]+"!",[parts[0]]);if(data=3D=3D=
=3Dundefined&&this.length){data=3DjQuery.data(this[0],key)}return =
data=3D=3D=3Dundefined&&parts[1]?this.data(parts[0]):data}else{return =
this.trigger("setData"+parts[1]+"!",[parts[0],value]).each(function(){jQu=
ery.data(this,key,value)})}},removeData:function(key){return =
this.each(function(){jQuery.removeData(this,key)})},queue:function(type,d=
ata){if(typeof =
type!=3D=3D"string"){data=3Dtype;type=3D"fx"}if(data=3D=3D=3Dundefined){r=
eturn jQuery.queue(this[0],type)}return this.each(function(){var =
queue=3DjQuery.queue(this,type,data);if(type=3D=3D"fx"&&queue.length=3D=3D=
1){queue[0].call(this)}})},dequeue:function(type){return =
this.each(function(){jQuery.dequeue(this,type)})}});=0A=
/*=0A=
 * Sizzle CSS Selector Engine - v0.9.3=0A=
 *  Copyright 2009, The Dojo Foundation=0A=
 *  Released under the MIT, BSD, and GPL Licenses.=0A=
 *  More information: http://sizzlejs.com/=0A=
 */=0A=
(function(){var =
chunker=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]=
|[^[\]'"]+)+\]|\\.|[^ =
>+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g,done=3D0,toString=3DObject.prototype.toS=
tring;var =
Sizzle=3Dfunction(selector,context,results,seed){results=3Dresults||[];co=
ntext=3Dcontext||document;if(context.nodeType!=3D=3D1&&context.nodeType!=3D=
=3D9){return[]}if(!selector||typeof selector!=3D=3D"string"){return =
results}var =
parts=3D[],m,set,checkSet,check,mode,extra,prune=3Dtrue;chunker.lastIndex=
=3D0;while((m=3Dchunker.exec(selector))!=3D=3Dnull){parts.push(m[1]);if(m=
[2]){extra=3DRegExp.rightContext;break}}if(parts.length>1&&origPOS.exec(s=
elector)){if(parts.length=3D=3D=3D2&&Expr.relative[parts[0]]){set=3DposPr=
ocess(parts[0]+parts[1],context)}else{set=3DExpr.relative[parts[0]]?[cont=
ext]:Sizzle(parts.shift(),context);while(parts.length){selector=3Dparts.s=
hift();if(Expr.relative[selector]){selector+=3Dparts.shift()}set=3DposPro=
cess(selector,set)}}}else{var =
ret=3Dseed?{expr:parts.pop(),set:makeArray(seed)}:Sizzle.find(parts.pop()=
,parts.length=3D=3D=3D1&&context.parentNode?context.parentNode:context,is=
XML(context));set=3DSizzle.filter(ret.expr,ret.set);if(parts.length>0){ch=
eckSet=3DmakeArray(set)}else{prune=3Dfalse}while(parts.length){var =
cur=3Dparts.pop(),pop=3Dcur;if(!Expr.relative[cur]){cur=3D""}else{pop=3Dp=
arts.pop()}if(pop=3D=3Dnull){pop=3Dcontext}Expr.relative[cur](checkSet,po=
p,isXML(context))}}if(!checkSet){checkSet=3Dset}if(!checkSet){throw"Synta=
x error, unrecognized expression: =
"+(cur||selector)}if(toString.call(checkSet)=3D=3D=3D"[object =
Array]"){if(!prune){results.push.apply(results,checkSet)}else{if(context.=
nodeType=3D=3D=3D1){for(var =
i=3D0;checkSet[i]!=3Dnull;i++){if(checkSet[i]&&(checkSet[i]=3D=3D=3Dtrue|=
|checkSet[i].nodeType=3D=3D=3D1&&contains(context,checkSet[i]))){results.=
push(set[i])}}}else{for(var =
i=3D0;checkSet[i]!=3Dnull;i++){if(checkSet[i]&&checkSet[i].nodeType=3D=3D=
=3D1){results.push(set[i])}}}}}else{makeArray(checkSet,results)}if(extra)=
{Sizzle(extra,context,results,seed);if(sortOrder){hasDuplicate=3Dfalse;re=
sults.sort(sortOrder);if(hasDuplicate){for(var =
i=3D1;i<results.length;i++){if(results[i]=3D=3D=3Dresults[i-1]){results.s=
plice(i--,1)}}}}}return =
results};Sizzle.matches=3Dfunction(expr,set){return =
Sizzle(expr,null,null,set)};Sizzle.find=3Dfunction(expr,context,isXML){va=
r set,match;if(!expr){return[]}for(var =
i=3D0,l=3DExpr.order.length;i<l;i++){var =
type=3DExpr.order[i],match;if((match=3DExpr.match[type].exec(expr))){var =
left=3DRegExp.leftContext;if(left.substr(left.length-1)!=3D=3D"\\"){match=
[1]=3D(match[1]||"").replace(/\\/g,"");set=3DExpr.find[type](match,contex=
t,isXML);if(set!=3Dnull){expr=3Dexpr.replace(Expr.match[type],"");break}}=
}}if(!set){set=3Dcontext.getElementsByTagName("*")}return{set:set,expr:ex=
pr}};Sizzle.filter=3Dfunction(expr,set,inplace,not){var =
old=3Dexpr,result=3D[],curLoop=3Dset,match,anyFound,isXMLFilter=3Dset&&se=
t[0]&&isXML(set[0]);while(expr&&set.length){for(var type in =
Expr.filter){if((match=3DExpr.match[type].exec(expr))!=3Dnull){var =
filter=3DExpr.filter[type],found,item;anyFound=3Dfalse;if(curLoop=3D=3Dre=
sult){result=3D[]}if(Expr.preFilter[type]){match=3DExpr.preFilter[type](m=
atch,curLoop,inplace,result,not,isXMLFilter);if(!match){anyFound=3Dfound=3D=
true}else{if(match=3D=3D=3Dtrue){continue}}}if(match){for(var =
i=3D0;(item=3DcurLoop[i])!=3Dnull;i++){if(item){found=3Dfilter(item,match=
,i,curLoop);var =
pass=3Dnot^!!found;if(inplace&&found!=3Dnull){if(pass){anyFound=3Dtrue}el=
se{curLoop[i]=3Dfalse}}else{if(pass){result.push(item);anyFound=3Dtrue}}}=
}}if(found!=3D=3Dundefined){if(!inplace){curLoop=3Dresult}expr=3Dexpr.rep=
lace(Expr.match[type],"");if(!anyFound){return[]}break}}}if(expr=3D=3Dold=
){if(anyFound=3D=3Dnull){throw"Syntax error, unrecognized expression: =
"+expr}else{break}}old=3Dexpr}return curLoop};var =
Expr=3DSizzle.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\=
u00c0-\uFFFF_-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,NAME:/\[=
name=3D['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00=
c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=3D)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\=
u00c0-\uFFFF\*_-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|o=
dd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(=
?=3D[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\=
)]+\)|[^\2\(\)]*)+)\2\))?/},attrMap:{"class":"className","for":"htmlFor"}=
,attrHandle:{href:function(elem){return =
elem.getAttribute("href")}},relative:{"+":function(checkSet,part,isXML){v=
ar isPartStr=3Dtypeof =
part=3D=3D=3D"string",isTag=3DisPartStr&&!/\W/.test(part),isPartStrNotTag=
=3DisPartStr&&!isTag;if(isTag&&!isXML){part=3Dpart.toUpperCase()}for(var =
i=3D0,l=3DcheckSet.length,elem;i<l;i++){if((elem=3DcheckSet[i])){while((e=
lem=3Delem.previousSibling)&&elem.nodeType!=3D=3D1){}checkSet[i]=3DisPart=
StrNotTag||elem&&elem.nodeName=3D=3D=3Dpart?elem||false:elem=3D=3D=3Dpart=
}}if(isPartStrNotTag){Sizzle.filter(part,checkSet,true)}},">":function(ch=
eckSet,part,isXML){var isPartStr=3Dtypeof =
part=3D=3D=3D"string";if(isPartStr&&!/\W/.test(part)){part=3DisXML?part:p=
art.toUpperCase();for(var i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){var =
parent=3Delem.parentNode;checkSet[i]=3Dparent.nodeName=3D=3D=3Dpart?paren=
t:false}}}else{for(var i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){checkSet[i]=3DisPartStr?elem.parentNode:elem.=
parentNode=3D=3D=3Dpart}}if(isPartStr){Sizzle.filter(part,checkSet,true)}=
}},"":function(checkSet,part,isXML){var =
doneName=3Ddone++,checkFn=3DdirCheck;if(!part.match(/\W/)){var =
nodeCheck=3Dpart=3DisXML?part:part.toUpperCase();checkFn=3DdirNodeCheck}c=
heckFn("parentNode",part,doneName,checkSet,nodeCheck,isXML)},"~":function=
(checkSet,part,isXML){var doneName=3Ddone++,checkFn=3DdirCheck;if(typeof =
part=3D=3D=3D"string"&&!part.match(/\W/)){var =
nodeCheck=3Dpart=3DisXML?part:part.toUpperCase();checkFn=3DdirNodeCheck}c=
heckFn("previousSibling",part,doneName,checkSet,nodeCheck,isXML)}},find:{=
ID:function(match,context,isXML){if(typeof =
context.getElementById!=3D=3D"undefined"&&!isXML){var =
m=3Dcontext.getElementById(match[1]);return =
m?[m]:[]}},NAME:function(match,context,isXML){if(typeof =
context.getElementsByName!=3D=3D"undefined"){var =
ret=3D[],results=3Dcontext.getElementsByName(match[1]);for(var =
i=3D0,l=3Dresults.length;i<l;i++){if(results[i].getAttribute("name")=3D=3D=
=3Dmatch[1]){ret.push(results[i])}}return =
ret.length=3D=3D=3D0?null:ret}},TAG:function(match,context){return =
context.getElementsByTagName(match[1])}},preFilter:{CLASS:function(match,=
curLoop,inplace,result,not,isXML){match=3D" =
"+match[1].replace(/\\/g,"")+" ";if(isXML){return match}for(var =
i=3D0,elem;(elem=3DcurLoop[i])!=3Dnull;i++){if(elem){if(not^(elem.classNa=
me&&(" "+elem.className+" =
").indexOf(match)>=3D0)){if(!inplace){result.push(elem)}}else{if(inplace)=
{curLoop[i]=3Dfalse}}}}return false},ID:function(match){return =
match[1].replace(/\\/g,"")},TAG:function(match,curLoop){for(var =
i=3D0;curLoop[i]=3D=3D=3Dfalse;i++){}return =
curLoop[i]&&isXML(curLoop[i])?match[1]:match[1].toUpperCase()},CHILD:func=
tion(match){if(match[1]=3D=3D"nth"){var =
test=3D/(-?)(\d*)n((?:\+|-)?\d*)/.exec(match[2]=3D=3D"even"&&"2n"||match[=
2]=3D=3D"odd"&&"2n+1"||!/\D/.test(match[2])&&"0n+"+match[2]||match[2]);ma=
tch[2]=3D(test[1]+(test[2]||1))-0;match[3]=3Dtest[3]-0}match[0]=3Ddone++;=
return match},ATTR:function(match,curLoop,inplace,result,not,isXML){var =
name=3Dmatch[1].replace(/\\/g,"");if(!isXML&&Expr.attrMap[name]){match[1]=
=3DExpr.attrMap[name]}if(match[2]=3D=3D=3D"~=3D"){match[4]=3D" =
"+match[4]+" "}return =
match},PSEUDO:function(match,curLoop,inplace,result,not){if(match[1]=3D=3D=
=3D"not"){if(match[3].match(chunker).length>1||/^\w/.test(match[3])){matc=
h[3]=3DSizzle(match[3],null,null,curLoop)}else{var =
ret=3DSizzle.filter(match[3],curLoop,inplace,true^not);if(!inplace){resul=
t.push.apply(result,ret)}return =
false}}else{if(Expr.match.POS.test(match[0])||Expr.match.CHILD.test(match=
[0])){return true}}return =
match},POS:function(match){match.unshift(true);return =
match}},filters:{enabled:function(elem){return =
elem.disabled=3D=3D=3Dfalse&&elem.type!=3D=3D"hidden"},disabled:function(=
elem){return elem.disabled=3D=3D=3Dtrue},checked:function(elem){return =
elem.checked=3D=3D=3Dtrue},selected:function(elem){elem.parentNode.select=
edIndex;return elem.selected=3D=3D=3Dtrue},parent:function(elem){return =
!!elem.firstChild},empty:function(elem){return =
!elem.firstChild},has:function(elem,i,match){return =
!!Sizzle(match[3],elem).length},header:function(elem){return/h\d/i.test(e=
lem.nodeName)},text:function(elem){return"text"=3D=3D=3Delem.type},radio:=
function(elem){return"radio"=3D=3D=3Delem.type},checkbox:function(elem){r=
eturn"checkbox"=3D=3D=3Delem.type},file:function(elem){return"file"=3D=3D=
=3Delem.type},password:function(elem){return"password"=3D=3D=3Delem.type}=
,submit:function(elem){return"submit"=3D=3D=3Delem.type},image:function(e=
lem){return"image"=3D=3D=3Delem.type},reset:function(elem){return"reset"=3D=
=3D=3Delem.type},button:function(elem){return"button"=3D=3D=3Delem.type||=
elem.nodeName.toUpperCase()=3D=3D=3D"BUTTON"},input:function(elem){return=
/input|select|textarea|button/i.test(elem.nodeName)}},setFilters:{first:f=
unction(elem,i){return =
i=3D=3D=3D0},last:function(elem,i,match,array){return =
i=3D=3D=3Darray.length-1},even:function(elem,i){return =
i%2=3D=3D=3D0},odd:function(elem,i){return =
i%2=3D=3D=3D1},lt:function(elem,i,match){return =
i<match[3]-0},gt:function(elem,i,match){return =
i>match[3]-0},nth:function(elem,i,match){return =
match[3]-0=3D=3Di},eq:function(elem,i,match){return =
match[3]-0=3D=3Di}},filter:{PSEUDO:function(elem,match,i,array){var =
name=3Dmatch[1],filter=3DExpr.filters[name];if(filter){return =
filter(elem,i,match,array)}else{if(name=3D=3D=3D"contains"){return(elem.t=
extContent||elem.innerText||"").indexOf(match[3])>=3D0}else{if(name=3D=3D=
=3D"not"){var not=3Dmatch[3];for(var =
i=3D0,l=3Dnot.length;i<l;i++){if(not[i]=3D=3D=3Delem){return =
false}}return true}}}},CHILD:function(elem,match){var =
type=3Dmatch[1],node=3Delem;switch(type){case"only":case"first":while(nod=
e=3Dnode.previousSibling){if(node.nodeType=3D=3D=3D1){return =
false}}if(type=3D=3D"first"){return =
true}node=3Delem;case"last":while(node=3Dnode.nextSibling){if(node.nodeTy=
pe=3D=3D=3D1){return false}}return true;case"nth":var =
first=3Dmatch[2],last=3Dmatch[3];if(first=3D=3D1&&last=3D=3D0){return =
true}var =
doneName=3Dmatch[0],parent=3Delem.parentNode;if(parent&&(parent.sizcache!=
=3D=3DdoneName||!elem.nodeIndex)){var =
count=3D0;for(node=3Dparent.firstChild;node;node=3Dnode.nextSibling){if(n=
ode.nodeType=3D=3D=3D1){node.nodeIndex=3D++count}}parent.sizcache=3DdoneN=
ame}var diff=3Delem.nodeIndex-last;if(first=3D=3D0){return =
diff=3D=3D0}else{return(diff%first=3D=3D0&&diff/first>=3D0)}}},ID:functio=
n(elem,match){return =
elem.nodeType=3D=3D=3D1&&elem.getAttribute("id")=3D=3D=3Dmatch},TAG:funct=
ion(elem,match){return(match=3D=3D=3D"*"&&elem.nodeType=3D=3D=3D1)||elem.=
nodeName=3D=3D=3Dmatch},CLASS:function(elem,match){return(" =
"+(elem.className||elem.getAttribute("class"))+" =
").indexOf(match)>-1},ATTR:function(elem,match){var =
name=3Dmatch[1],result=3DExpr.attrHandle[name]?Expr.attrHandle[name](elem=
):elem[name]!=3Dnull?elem[name]:elem.getAttribute(name),value=3Dresult+""=
,type=3Dmatch[2],check=3Dmatch[4];return =
result=3D=3Dnull?type=3D=3D=3D"!=3D":type=3D=3D=3D"=3D"?value=3D=3D=3Dche=
ck:type=3D=3D=3D"*=3D"?value.indexOf(check)>=3D0:type=3D=3D=3D"~=3D"?(" =
"+value+" =
").indexOf(check)>=3D0:!check?value&&result!=3D=3Dfalse:type=3D=3D=3D"!=3D=
"?value!=3Dcheck:type=3D=3D=3D"^=3D"?value.indexOf(check)=3D=3D=3D0:type=3D=
=3D=3D"$=3D"?value.substr(value.length-check.length)=3D=3D=3Dcheck:type=3D=
=3D=3D"|=3D"?value=3D=3D=3Dcheck||value.substr(0,check.length+1)=3D=3D=3D=
check+"-":false},POS:function(elem,match,i,array){var =
name=3Dmatch[2],filter=3DExpr.setFilters[name];if(filter){return =
filter(elem,i,match,array)}}}};var origPOS=3DExpr.match.POS;for(var type =
in =
Expr.match){Expr.match[type]=3DRegExp(Expr.match[type].source+/(?![^\[]*\=
])(?![^\(]*\))/.source)}var =
makeArray=3Dfunction(array,results){array=3DArray.prototype.slice.call(ar=
ray);if(results){results.push.apply(results,array);return results}return =
array};try{Array.prototype.slice.call(document.documentElement.childNodes=
)}catch(e){makeArray=3Dfunction(array,results){var =
ret=3Dresults||[];if(toString.call(array)=3D=3D=3D"[object =
Array]"){Array.prototype.push.apply(ret,array)}else{if(typeof =
array.length=3D=3D=3D"number"){for(var =
i=3D0,l=3Darray.length;i<l;i++){ret.push(array[i])}}else{for(var =
i=3D0;array[i];i++){ret.push(array[i])}}}return ret}}var =
sortOrder;if(document.documentElement.compareDocumentPosition){sortOrder=3D=
function(a,b){var =
ret=3Da.compareDocumentPosition(b)&4?-1:a=3D=3D=3Db?0:1;if(ret=3D=3D=3D0)=
{hasDuplicate=3Dtrue}return ret}}else{if("sourceIndex" in =
document.documentElement){sortOrder=3Dfunction(a,b){var =
ret=3Da.sourceIndex-b.sourceIndex;if(ret=3D=3D=3D0){hasDuplicate=3Dtrue}r=
eturn ret}}else{if(document.createRange){sortOrder=3Dfunction(a,b){var =
aRange=3Da.ownerDocument.createRange(),bRange=3Db.ownerDocument.createRan=
ge();aRange.selectNode(a);aRange.collapse(true);bRange.selectNode(b);bRan=
ge.collapse(true);var =
ret=3DaRange.compareBoundaryPoints(Range.START_TO_END,bRange);if(ret=3D=3D=
=3D0){hasDuplicate=3Dtrue}return ret}}}}(function(){var =
form=3Ddocument.createElement("form"),id=3D"script"+(new =
Date).getTime();form.innerHTML=3D"<input name=3D'"+id+"'/>";var =
root=3Ddocument.documentElement;root.insertBefore(form,root.firstChild);i=
f(!!document.getElementById(id)){Expr.find.ID=3Dfunction(match,context,is=
XML){if(typeof context.getElementById!=3D=3D"undefined"&&!isXML){var =
m=3Dcontext.getElementById(match[1]);return =
m?m.id=3D=3D=3Dmatch[1]||typeof =
m.getAttributeNode!=3D=3D"undefined"&&m.getAttributeNode("id").nodeValue=3D=
=3D=3Dmatch[1]?[m]:undefined:[]}};Expr.filter.ID=3Dfunction(elem,match){v=
ar node=3Dtypeof =
elem.getAttributeNode!=3D=3D"undefined"&&elem.getAttributeNode("id");retu=
rn =
elem.nodeType=3D=3D=3D1&&node&&node.nodeValue=3D=3D=3Dmatch}}root.removeC=
hild(form)})();(function(){var =
div=3Ddocument.createElement("div");div.appendChild(document.createCommen=
t(""));if(div.getElementsByTagName("*").length>0){Expr.find.TAG=3Dfunctio=
n(match,context){var =
results=3Dcontext.getElementsByTagName(match[1]);if(match[1]=3D=3D=3D"*")=
{var tmp=3D[];for(var =
i=3D0;results[i];i++){if(results[i].nodeType=3D=3D=3D1){tmp.push(results[=
i])}}results=3Dtmp}return results}}div.innerHTML=3D"<a =
href=3D'#'></a>";if(div.firstChild&&typeof =
div.firstChild.getAttribute!=3D=3D"undefined"&&div.firstChild.getAttribut=
e("href")!=3D=3D"#"){Expr.attrHandle.href=3Dfunction(elem){return =
elem.getAttribute("href",2)}}})();if(document.querySelectorAll){(function=
(){var =
oldSizzle=3DSizzle,div=3Ddocument.createElement("div");div.innerHTML=3D"<=
p =
class=3D'TEST'></p>";if(div.querySelectorAll&&div.querySelectorAll(".TEST=
").length=3D=3D=3D0){return =
}Sizzle=3Dfunction(query,context,extra,seed){context=3Dcontext||document;=
if(!seed&&context.nodeType=3D=3D=3D9&&!isXML(context)){try{return =
makeArray(context.querySelectorAll(query),extra)}catch(e){}}return =
oldSizzle(query,context,extra,seed)};Sizzle.find=3DoldSizzle.find;Sizzle.=
filter=3DoldSizzle.filter;Sizzle.selectors=3DoldSizzle.selectors;Sizzle.m=
atches=3DoldSizzle.matches})()}if(document.getElementsByClassName&&docume=
nt.documentElement.getElementsByClassName){(function(){var =
div=3Ddocument.createElement("div");div.innerHTML=3D"<div class=3D'test =
e'></div><div =
class=3D'test'></div>";if(div.getElementsByClassName("e").length=3D=3D=3D=
0){return =
}div.lastChild.className=3D"e";if(div.getElementsByClassName("e").length=3D=
=3D=3D1){return =
}Expr.order.splice(1,0,"CLASS");Expr.find.CLASS=3Dfunction(match,context,=
isXML){if(typeof =
context.getElementsByClassName!=3D=3D"undefined"&&!isXML){return =
context.getElementsByClassName(match[1])}}})()}function =
dirNodeCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var =
sibDir=3Ddir=3D=3D"previousSibling"&&!isXML;for(var =
i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){if(sibDir&&elem.nodeType=3D=3D=3D1){elem.sizc=
ache=3DdoneName;elem.sizset=3Di}elem=3Delem[dir];var =
match=3Dfalse;while(elem){if(elem.sizcache=3D=3D=3DdoneName){match=3Dchec=
kSet[elem.sizset];break}if(elem.nodeType=3D=3D=3D1&&!isXML){elem.sizcache=
=3DdoneName;elem.sizset=3Di}if(elem.nodeName=3D=3D=3Dcur){match=3Delem;br=
eak}elem=3Delem[dir]}checkSet[i]=3Dmatch}}}function =
dirCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var =
sibDir=3Ddir=3D=3D"previousSibling"&&!isXML;for(var =
i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){if(sibDir&&elem.nodeType=3D=3D=3D1){elem.sizc=
ache=3DdoneName;elem.sizset=3Di}elem=3Delem[dir];var =
match=3Dfalse;while(elem){if(elem.sizcache=3D=3D=3DdoneName){match=3Dchec=
kSet[elem.sizset];break}if(elem.nodeType=3D=3D=3D1){if(!isXML){elem.sizca=
che=3DdoneName;elem.sizset=3Di}if(typeof =
cur!=3D=3D"string"){if(elem=3D=3D=3Dcur){match=3Dtrue;break}}else{if(Sizz=
le.filter(cur,[elem]).length>0){match=3Delem;break}}}elem=3Delem[dir]}che=
ckSet[i]=3Dmatch}}}var =
contains=3Ddocument.compareDocumentPosition?function(a,b){return =
a.compareDocumentPosition(b)&16}:function(a,b){return =
a!=3D=3Db&&(a.contains?a.contains(b):true)};var =
isXML=3Dfunction(elem){return =
elem.nodeType=3D=3D=3D9&&elem.documentElement.nodeName!=3D=3D"HTML"||!!el=
em.ownerDocument&&isXML(elem.ownerDocument)};var =
posProcess=3Dfunction(selector,context){var =
tmpSet=3D[],later=3D"",match,root=3Dcontext.nodeType?[context]:context;wh=
ile((match=3DExpr.match.PSEUDO.exec(selector))){later+=3Dmatch[0];selecto=
r=3Dselector.replace(Expr.match.PSEUDO,"")}selector=3DExpr.relative[selec=
tor]?selector+"*":selector;for(var =
i=3D0,l=3Droot.length;i<l;i++){Sizzle(selector,root[i],tmpSet)}return =
Sizzle.filter(later,tmpSet)};jQuery.find=3DSizzle;jQuery.filter=3DSizzle.=
filter;jQuery.expr=3DSizzle.selectors;jQuery.expr[":"]=3DjQuery.expr.filt=
ers;Sizzle.selectors.filters.hidden=3Dfunction(elem){return =
elem.offsetWidth=3D=3D=3D0||elem.offsetHeight=3D=3D=3D0};Sizzle.selectors=
.filters.visible=3Dfunction(elem){return =
elem.offsetWidth>0||elem.offsetHeight>0};Sizzle.selectors.filters.animate=
d=3Dfunction(elem){return jQuery.grep(jQuery.timers,function(fn){return =
elem=3D=3D=3Dfn.elem}).length};jQuery.multiFilter=3Dfunction(expr,elems,n=
ot){if(not){expr=3D":not("+expr+")"}return =
Sizzle.matches(expr,elems)};jQuery.dir=3Dfunction(elem,dir){var =
matched=3D[],cur=3Delem[dir];while(cur&&cur!=3Ddocument){if(cur.nodeType=3D=
=3D1){matched.push(cur)}cur=3Dcur[dir]}return =
matched};jQuery.nth=3Dfunction(cur,result,dir,elem){result=3Dresult||1;va=
r =
num=3D0;for(;cur;cur=3Dcur[dir]){if(cur.nodeType=3D=3D1&&++num=3D=3Dresul=
t){break}}return cur};jQuery.sibling=3Dfunction(n,elem){var =
r=3D[];for(;n;n=3Dn.nextSibling){if(n.nodeType=3D=3D1&&n!=3Delem){r.push(=
n)}}return r};return =
;window.Sizzle=3DSizzle})();jQuery.event=3D{add:function(elem,types,handl=
er,data){if(elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){return =
}if(elem.setInterval&&elem!=3Dwindow){elem=3Dwindow}if(!handler.guid){han=
dler.guid=3Dthis.guid++}if(data!=3D=3Dundefined){var =
fn=3Dhandler;handler=3Dthis.proxy(fn);handler.data=3Ddata}var =
events=3DjQuery.data(elem,"events")||jQuery.data(elem,"events",{}),handle=
=3DjQuery.data(elem,"handle")||jQuery.data(elem,"handle",function(){retur=
n typeof =
jQuery!=3D=3D"undefined"&&!jQuery.event.triggered?jQuery.event.handle.app=
ly(arguments.callee.elem,arguments):undefined});handle.elem=3Delem;jQuery=
.each(types.split(/\s+/),function(index,type){var =
namespaces=3Dtype.split(".");type=3Dnamespaces.shift();handler.type=3Dnam=
espaces.slice().sort().join(".");var =
handlers=3Devents[type];if(jQuery.event.specialAll[type]){jQuery.event.sp=
ecialAll[type].setup.call(elem,data,namespaces)}if(!handlers){handlers=3D=
events[type]=3D{};if(!jQuery.event.special[type]||jQuery.event.special[ty=
pe].setup.call(elem,data,namespaces)=3D=3D=3Dfalse){if(elem.addEventListe=
ner){elem.addEventListener(type,handle,false)}else{if(elem.attachEvent){e=
lem.attachEvent("on"+type,handle)}}}}handlers[handler.guid]=3Dhandler;jQu=
ery.event.global[type]=3Dtrue});elem=3Dnull},guid:1,global:{},remove:func=
tion(elem,types,handler){if(elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){r=
eturn }var =
events=3DjQuery.data(elem,"events"),ret,index;if(events){if(types=3D=3D=3D=
undefined||(typeof =
types=3D=3D=3D"string"&&types.charAt(0)=3D=3D".")){for(var type in =
events){this.remove(elem,type+(types||""))}}else{if(types.type){handler=3D=
types.handler;types=3Dtypes.type}jQuery.each(types.split(/\s+/),function(=
index,type){var =
namespaces=3Dtype.split(".");type=3Dnamespaces.shift();var =
namespace=3DRegExp("(^|\\.)"+namespaces.slice().sort().join(".*\\.")+"(\\=
.|$)");if(events[type]){if(handler){delete =
events[type][handler.guid]}else{for(var handle in =
events[type]){if(namespace.test(events[type][handle].type)){delete =
events[type][handle]}}}if(jQuery.event.specialAll[type]){jQuery.event.spe=
cialAll[type].teardown.call(elem,namespaces)}for(ret in =
events[type]){break}if(!ret){if(!jQuery.event.special[type]||jQuery.event=
.special[type].teardown.call(elem,namespaces)=3D=3D=3Dfalse){if(elem.remo=
veEventListener){elem.removeEventListener(type,jQuery.data(elem,"handle")=
,false)}else{if(elem.detachEvent){elem.detachEvent("on"+type,jQuery.data(=
elem,"handle"))}}}ret=3Dnull;delete events[type]}}})}for(ret in =
events){break}if(!ret){var =
handle=3DjQuery.data(elem,"handle");if(handle){handle.elem=3Dnull}jQuery.=
removeData(elem,"events");jQuery.removeData(elem,"handle")}}},trigger:fun=
ction(event,data,elem,bubbling){var =
type=3Devent.type||event;if(!bubbling){event=3Dtypeof =
event=3D=3D=3D"object"?event[expando]?event:jQuery.extend(jQuery.Event(ty=
pe),event):jQuery.Event(type);if(type.indexOf("!")>=3D0){event.type=3Dtyp=
e=3Dtype.slice(0,-1);event.exclusive=3Dtrue}if(!elem){event.stopPropagati=
on();if(this.global[type]){jQuery.each(jQuery.cache,function(){if(this.ev=
ents&&this.events[type]){jQuery.event.trigger(event,data,this.handle.elem=
)}})}}if(!elem||elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){return =
undefined}event.result=3Dundefined;event.target=3Delem;data=3DjQuery.make=
Array(data);data.unshift(event)}event.currentTarget=3Delem;var =
handle=3DjQuery.data(elem,"handle");if(handle){handle.apply(elem,data)}if=
((!elem[type]||(jQuery.nodeName(elem,"a")&&type=3D=3D"click"))&&elem["on"=
+type]&&elem["on"+type].apply(elem,data)=3D=3D=3Dfalse){event.result=3Dfa=
lse}if(!bubbling&&elem[type]&&!event.isDefaultPrevented()&&!(jQuery.nodeN=
ame(elem,"a")&&type=3D=3D"click")){this.triggered=3Dtrue;try{elem[type]()=
}catch(e){}}this.triggered=3Dfalse;if(!event.isPropagationStopped()){var =
parent=3Delem.parentNode||elem.ownerDocument;if(parent){jQuery.event.trig=
ger(event,data,parent,true)}}},handle:function(event){var =
all,handlers;event=3Darguments[0]=3DjQuery.event.fix(event||window.event)=
;event.currentTarget=3Dthis;var =
namespaces=3Devent.type.split(".");event.type=3Dnamespaces.shift();all=3D=
!namespaces.length&&!event.exclusive;var =
namespace=3DRegExp("(^|\\.)"+namespaces.slice().sort().join(".*\\.")+"(\\=
.|$)");handlers=3D(jQuery.data(this,"events")||{})[event.type];for(var j =
in handlers){var =
handler=3Dhandlers[j];if(all||namespace.test(handler.type)){event.handler=
=3Dhandler;event.data=3Dhandler.data;var =
ret=3Dhandler.apply(this,arguments);if(ret!=3D=3Dundefined){event.result=3D=
ret;if(ret=3D=3D=3Dfalse){event.preventDefault();event.stopPropagation()}=
}if(event.isImmediatePropagationStopped()){break}}}},props:"altKey =
attrChange attrName bubbles button cancelable charCode clientX clientY =
ctrlKey currentTarget data detail eventPhase fromElement handler keyCode =
metaKey newValue originalTarget pageX pageY prevValue relatedNode =
relatedTarget screenX screenY shiftKey srcElement target toElement view =
wheelDelta which".split(" =
"),fix:function(event){if(event[expando]){return event}var =
originalEvent=3Devent;event=3DjQuery.Event(originalEvent);for(var =
i=3Dthis.props.length,prop;i;){prop=3Dthis.props[--i];event[prop]=3Dorigi=
nalEvent[prop]}if(!event.target){event.target=3Devent.srcElement||documen=
t}if(event.target.nodeType=3D=3D3){event.target=3Devent.target.parentNode=
}if(!event.relatedTarget&&event.fromElement){event.relatedTarget=3Devent.=
fromElement=3D=3Devent.target?event.toElement:event.fromElement}if(event.=
pageX=3D=3Dnull&&event.clientX!=3Dnull){var =
doc=3Ddocument.documentElement,body=3Ddocument.body;event.pageX=3Devent.c=
lientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc.clientLeft||0=
);event.pageY=3Devent.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||=
0)-(doc.clientTop||0)}if(!event.which&&((event.charCode||event.charCode=3D=
=3D=3D0)?event.charCode:event.keyCode)){event.which=3Devent.charCode||eve=
nt.keyCode}if(!event.metaKey&&event.ctrlKey){event.metaKey=3Devent.ctrlKe=
y}if(!event.which&&event.button){event.which=3D(event.button&1?1:(event.b=
utton&2?3:(event.button&4?2:0)))}return =
event},proxy:function(fn,proxy){proxy=3Dproxy||function(){return =
fn.apply(this,arguments)};proxy.guid=3Dfn.guid=3Dfn.guid||proxy.guid||thi=
s.guid++;return =
proxy},special:{ready:{setup:bindReady,teardown:function(){}}},specialAll=
:{live:{setup:function(selector,namespaces){jQuery.event.add(this,namespa=
ces[0],liveHandler)},teardown:function(namespaces){if(namespaces.length){=
var =
remove=3D0,name=3DRegExp("(^|\\.)"+namespaces[0]+"(\\.|$)");jQuery.each((=
jQuery.data(this,"events").live||{}),function(){if(name.test(this.type)){=
remove++}});if(remove<1){jQuery.event.remove(this,namespaces[0],liveHandl=
er)}}}}}};jQuery.Event=3Dfunction(src){if(!this.preventDefault){return =
new =
jQuery.Event(src)}if(src&&src.type){this.originalEvent=3Dsrc;this.type=3D=
src.type}else{this.type=3Dsrc}this.timeStamp=3Dnow();this[expando]=3Dtrue=
};function returnFalse(){return false}function returnTrue(){return =
true}jQuery.Event.prototype=3D{preventDefault:function(){this.isDefaultPr=
evented=3DreturnTrue;var e=3Dthis.originalEvent;if(!e){return =
}if(e.preventDefault){e.preventDefault()}e.returnValue=3Dfalse},stopPropa=
gation:function(){this.isPropagationStopped=3DreturnTrue;var =
e=3Dthis.originalEvent;if(!e){return =
}if(e.stopPropagation){e.stopPropagation()}e.cancelBubble=3Dtrue},stopImm=
ediatePropagation:function(){this.isImmediatePropagationStopped=3DreturnT=
rue;this.stopPropagation()},isDefaultPrevented:returnFalse,isPropagationS=
topped:returnFalse,isImmediatePropagationStopped:returnFalse};var =
withinElement=3Dfunction(event){var =
parent=3Devent.relatedTarget;while(parent&&parent!=3Dthis){try{parent=3Dp=
arent.parentNode}catch(e){parent=3Dthis}}if(parent!=3Dthis){event.type=3D=
event.data;jQuery.event.handle.apply(this,arguments)}};jQuery.each({mouse=
over:"mouseenter",mouseout:"mouseleave"},function(orig,fix){jQuery.event.=
special[fix]=3D{setup:function(){jQuery.event.add(this,orig,withinElement=
,fix)},teardown:function(){jQuery.event.remove(this,orig,withinElement)}}=
});jQuery.fn.extend({bind:function(type,data,fn){return =
type=3D=3D"unload"?this.one(type,data,fn):this.each(function(){jQuery.eve=
nt.add(this,type,fn||data,fn&&data)})},one:function(type,data,fn){var =
one=3DjQuery.event.proxy(fn||data,function(event){jQuery(this).unbind(eve=
nt,one);return(fn||data).apply(this,arguments)});return =
this.each(function(){jQuery.event.add(this,type,one,fn&&data)})},unbind:f=
unction(type,fn){return =
this.each(function(){jQuery.event.remove(this,type,fn)})},trigger:functio=
n(type,data){return =
this.each(function(){jQuery.event.trigger(type,data,this)})},triggerHandl=
er:function(type,data){if(this[0]){var =
event=3DjQuery.Event(type);event.preventDefault();event.stopPropagation()=
;jQuery.event.trigger(event,data,this[0]);return =
event.result}},toggle:function(fn){var =
args=3Darguments,i=3D1;while(i<args.length){jQuery.event.proxy(fn,args[i+=
+])}return =
this.click(jQuery.event.proxy(fn,function(event){this.lastToggle=3D(this.=
lastToggle||0)%i;event.preventDefault();return =
args[this.lastToggle++].apply(this,arguments)||false}))},hover:function(f=
nOver,fnOut){return =
this.mouseenter(fnOver).mouseleave(fnOut)},ready:function(fn){bindReady()=
;if(jQuery.isReady){fn.call(document,jQuery)}else{jQuery.readyList.push(f=
n)}return this},live:function(type,fn){var =
proxy=3DjQuery.event.proxy(fn);proxy.guid+=3Dthis.selector+type;jQuery(do=
cument).bind(liveConvert(type,this.selector),this.selector,proxy);return =
this},die:function(type,fn){jQuery(document).unbind(liveConvert(type,this=
.selector),fn?{guid:fn.guid+this.selector+type}:null);return =
this}});function liveHandler(event){var =
check=3DRegExp("(^|\\.)"+event.type+"(\\.|$)"),stop=3Dtrue,elems=3D[];jQu=
ery.each(jQuery.data(this,"events").live||[],function(i,fn){if(check.test=
(fn.type)){var =
elem=3DjQuery(event.target).closest(fn.data)[0];if(elem){elems.push({elem=
:elem,fn:fn})}}});elems.sort(function(a,b){return =
jQuery.data(a.elem,"closest")-jQuery.data(b.elem,"closest")});jQuery.each=
(elems,function(){if(this.fn.call(this.elem,event,this.fn.data)=3D=3D=3Df=
alse){return(stop=3Dfalse)}});return stop}function =
liveConvert(type,selector){return["live",type,selector.replace(/\./g,"`")=
.replace(/ =
/g,"|")].join(".")}jQuery.extend({isReady:false,readyList:[],ready:functi=
on(){if(!jQuery.isReady){jQuery.isReady=3Dtrue;if(jQuery.readyList){jQuer=
y.each(jQuery.readyList,function(){this.call(document,jQuery)});jQuery.re=
adyList=3Dnull}jQuery(document).triggerHandler("ready")}}});var =
readyBound=3Dfalse;function bindReady(){if(readyBound){return =
}readyBound=3Dtrue;if(document.addEventListener){document.addEventListene=
r("DOMContentLoaded",function(){document.removeEventListener("DOMContentL=
oaded",arguments.callee,false);jQuery.ready()},false)}else{if(document.at=
tachEvent){document.attachEvent("onreadystatechange",function(){if(docume=
nt.readyState=3D=3D=3D"complete"){document.detachEvent("onreadystatechang=
e",arguments.callee);jQuery.ready()}});if(document.documentElement.doScro=
ll&&window=3D=3Dwindow.top){(function(){if(jQuery.isReady){return =
}try{document.documentElement.doScroll("left")}catch(error){setTimeout(ar=
guments.callee,0);return =
}jQuery.ready()})()}}}jQuery.event.add(window,"load",jQuery.ready)}jQuery=
.each(("blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mou=
seup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,sub=
mit,keydown,keypress,keyup,error").split(","),function(i,name){jQuery.fn[=
name]=3Dfunction(fn){return =
fn?this.bind(name,fn):this.trigger(name)}});jQuery(window).bind("unload",=
function(){for(var id in =
jQuery.cache){if(id!=3D1&&jQuery.cache[id].handle){jQuery.event.remove(jQ=
uery.cache[id].handle.elem)}}});(function(){jQuery.support=3D{};var =
root=3Ddocument.documentElement,script=3Ddocument.createElement("script")=
,div=3Ddocument.createElement("div"),id=3D"script"+(new =
Date).getTime();div.style.display=3D"none";div.innerHTML=3D'   =
<link/><table></table><a href=3D"/a" =
style=3D"color:red;float:left;opacity:.5;">a</a><select><option>text</opt=
ion></select><object><param/></object>';var =
all=3Ddiv.getElementsByTagName("*"),a=3Ddiv.getElementsByTagName("a")[0];=
if(!all||!all.length||!a){return =
}jQuery.support=3D{leadingWhitespace:div.firstChild.nodeType=3D=3D3,tbody=
:!div.getElementsByTagName("tbody").length,objectAll:!!div.getElementsByT=
agName("object")[0].getElementsByTagName("*").length,htmlSerialize:!!div.=
getElementsByTagName("link").length,style:/red/.test(a.getAttribute("styl=
e")),hrefNormalized:a.getAttribute("href")=3D=3D=3D"/a",opacity:a.style.o=
pacity=3D=3D=3D"0.5",cssFloat:!!a.style.cssFloat,scriptEval:false,noClone=
Event:true,boxModel:null};script.type=3D"text/javascript";try{script.appe=
ndChild(document.createTextNode("window."+id+"=3D1;"))}catch(e){}root.ins=
ertBefore(script,root.firstChild);if(window[id]){jQuery.support.scriptEva=
l=3Dtrue;delete =
window[id]}root.removeChild(script);if(div.attachEvent&&div.fireEvent){di=
v.attachEvent("onclick",function(){jQuery.support.noCloneEvent=3Dfalse;di=
v.detachEvent("onclick",arguments.callee)});div.cloneNode(true).fireEvent=
("onclick")}jQuery(function(){var =
div=3Ddocument.createElement("div");div.style.width=3Ddiv.style.paddingLe=
ft=3D"1px";document.body.appendChild(div);jQuery.boxModel=3DjQuery.suppor=
t.boxModel=3Ddiv.offsetWidth=3D=3D=3D2;document.body.removeChild(div).sty=
le.display=3D"none"})})();var =
styleFloat=3DjQuery.support.cssFloat?"cssFloat":"styleFloat";jQuery.props=
=3D{"for":"htmlFor","class":"className","float":styleFloat,cssFloat:style=
Float,styleFloat:styleFloat,readonly:"readOnly",maxlength:"maxLength",cel=
lspacing:"cellSpacing",rowspan:"rowSpan",tabindex:"tabIndex"};jQuery.fn.e=
xtend({_load:jQuery.fn.load,load:function(url,params,callback){if(typeof =
url!=3D=3D"string"){return this._load(url)}var off=3Durl.indexOf(" =
");if(off>=3D0){var =
selector=3Durl.slice(off,url.length);url=3Durl.slice(0,off)}var =
type=3D"GET";if(params){if(jQuery.isFunction(params)){callback=3Dparams;p=
arams=3Dnull}else{if(typeof =
params=3D=3D=3D"object"){params=3DjQuery.param(params);type=3D"POST"}}}va=
r =
self=3Dthis;jQuery.ajax({url:url,type:type,dataType:"html",data:params,co=
mplete:function(res,status){if(status=3D=3D"success"||status=3D=3D"notmod=
ified"){self.html(selector?jQuery("<div/>").append(res.responseText.repla=
ce(/<script(.|\s)*?\/script>/g,"")).find(selector):res.responseText)}if(c=
allback){self.each(callback,[res.responseText,status,res])}}});return =
this},serialize:function(){return =
jQuery.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?jQuery.makeArray(this.elements):this}).filter(function(){re=
turn =
this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.no=
deName)||/text|hidden|password|search/i.test(this.type))}).map(function(i=
,elem){var val=3DjQuery(this).val();return =
val=3D=3Dnull?null:jQuery.isArray(val)?jQuery.map(val,function(val,i){ret=
urn{name:elem.name,value:val}}):{name:elem.name,value:val}}).get()}});jQu=
ery.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend"=
.split(","),function(i,o){jQuery.fn[o]=3Dfunction(f){return =
this.bind(o,f)}});var =
jsc=3Dnow();jQuery.extend({get:function(url,data,callback,type){if(jQuery=
.isFunction(data)){callback=3Ddata;data=3Dnull}return =
jQuery.ajax({type:"GET",url:url,data:data,success:callback,dataType:type}=
)},getScript:function(url,callback){return =
jQuery.get(url,null,callback,"script")},getJSON:function(url,data,callbac=
k){return =
jQuery.get(url,data,callback,"json")},post:function(url,data,callback,typ=
e){if(jQuery.isFunction(data)){callback=3Ddata;data=3D{}}return =
jQuery.ajax({type:"POST",url:url,data:data,success:callback,dataType:type=
})},ajaxSetup:function(settings){jQuery.extend(jQuery.ajaxSettings,settin=
gs)},ajaxSettings:{url:location.href,global:true,type:"GET",contentType:"=
application/x-www-form-urlencoded",processData:true,async:true,xhr:functi=
on(){return window.ActiveXObject?new =
ActiveXObject("Microsoft.XMLHTTP"):new =
XMLHttpRequest()},accepts:{xml:"application/xml, =
text/xml",html:"text/html",script:"text/javascript, =
application/javascript",json:"application/json, =
text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:=
function(s){s=3DjQuery.extend(true,s,jQuery.extend(true,{},jQuery.ajaxSet=
tings,s));var =
jsonp,jsre=3D/=3D\?(&|$)/g,status,data,type=3Ds.type.toUpperCase();if(s.d=
ata&&s.processData&&typeof =
s.data!=3D=3D"string"){s.data=3DjQuery.param(s.data)}if(s.dataType=3D=3D"=
jsonp"){if(type=3D=3D"GET"){if(!s.url.match(jsre)){s.url+=3D(s.url.match(=
/\?/)?"&":"?")+(s.jsonp||"callback")+"=3D?"}}else{if(!s.data||!s.data.mat=
ch(jsre)){s.data=3D(s.data?s.data+"&":"")+(s.jsonp||"callback")+"=3D?"}}s=
.dataType=3D"json"}if(s.dataType=3D=3D"json"&&(s.data&&s.data.match(jsre)=
||s.url.match(jsre))){jsonp=3D"jsonp"+jsc++;if(s.data){s.data=3D(s.data+"=
").replace(jsre,"=3D"+jsonp+"$1")}s.url=3Ds.url.replace(jsre,"=3D"+jsonp+=
"$1");s.dataType=3D"script";window[jsonp]=3Dfunction(tmp){data=3Dtmp;succ=
ess();complete();window[jsonp]=3Dundefined;try{delete =
window[jsonp]}catch(e){}if(head){head.removeChild(script)}}}if(s.dataType=
=3D=3D"script"&&s.cache=3D=3Dnull){s.cache=3Dfalse}if(s.cache=3D=3D=3Dfal=
se&&type=3D=3D"GET"){var ts=3Dnow();var =
ret=3Ds.url.replace(/(\?|&)_=3D.*?(&|$)/,"$1_=3D"+ts+"$2");s.url=3Dret+((=
ret=3D=3Ds.url)?(s.url.match(/\?/)?"&":"?")+"_=3D"+ts:"")}if(s.data&&type=
=3D=3D"GET"){s.url+=3D(s.url.match(/\?/)?"&":"?")+s.data;s.data=3Dnull}if=
(s.global&&!jQuery.active++){jQuery.event.trigger("ajaxStart")}var =
parts=3D/^(\w+:)?\/\/([^\/?#]+)/.exec(s.url);if(s.dataType=3D=3D"script"&=
&type=3D=3D"GET"&&parts&&(parts[1]&&parts[1]!=3Dlocation.protocol||parts[=
2]!=3Dlocation.host)){var =
head=3Ddocument.getElementsByTagName("head")[0];var =
script=3Ddocument.createElement("script");script.src=3Ds.url;if(s.scriptC=
harset){script.charset=3Ds.scriptCharset}if(!jsonp){var =
done=3Dfalse;script.onload=3Dscript.onreadystatechange=3Dfunction(){if(!d=
one&&(!this.readyState||this.readyState=3D=3D"loaded"||this.readyState=3D=
=3D"complete")){done=3Dtrue;success();complete();script.onload=3Dscript.o=
nreadystatechange=3Dnull;head.removeChild(script)}}}head.appendChild(scri=
pt);return undefined}var requestDone=3Dfalse;var =
xhr=3Ds.xhr();if(s.username){xhr.open(type,s.url,s.async,s.username,s.pas=
sword)}else{xhr.open(type,s.url,s.async)}try{if(s.data){xhr.setRequestHea=
der("Content-Type",s.contentType)}if(s.ifModified){xhr.setRequestHeader("=
If-Modified-Since",jQuery.lastModified[s.url]||"Thu, 01 Jan 1970 =
00:00:00 =
GMT")}xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.setRe=
questHeader("Accept",s.dataType&&s.accepts[s.dataType]?s.accepts[s.dataTy=
pe]+", =
*/*":s.accepts._default)}catch(e){}if(s.beforeSend&&s.beforeSend(xhr,s)=3D=
=3D=3Dfalse){if(s.global&&!--jQuery.active){jQuery.event.trigger("ajaxSto=
p")}xhr.abort();return =
false}if(s.global){jQuery.event.trigger("ajaxSend",[xhr,s])}var =
onreadystatechange=3Dfunction(isTimeout){if(xhr.readyState=3D=3D0){if(iva=
l){clearInterval(ival);ival=3Dnull;if(s.global&&!--jQuery.active){jQuery.=
event.trigger("ajaxStop")}}}else{if(!requestDone&&xhr&&(xhr.readyState=3D=
=3D4||isTimeout=3D=3D"timeout")){requestDone=3Dtrue;if(ival){clearInterva=
l(ival);ival=3Dnull}status=3DisTimeout=3D=3D"timeout"?"timeout":!jQuery.h=
ttpSuccess(xhr)?"error":s.ifModified&&jQuery.httpNotModified(xhr,s.url)?"=
notmodified":"success";if(status=3D=3D"success"){try{data=3DjQuery.httpDa=
ta(xhr,s.dataType,s)}catch(e){status=3D"parsererror"}}if(status=3D=3D"suc=
cess"){var =
modRes;try{modRes=3Dxhr.getResponseHeader("Last-Modified")}catch(e){}if(s=
.ifModified&&modRes){jQuery.lastModified[s.url]=3DmodRes}if(!jsonp){succe=
ss()}}else{jQuery.handleError(s,xhr,status)}complete();if(isTimeout){xhr.=
abort()}if(s.async){xhr=3Dnull}}}};if(s.async){var =
ival=3DsetInterval(onreadystatechange,13);if(s.timeout>0){setTimeout(func=
tion(){if(xhr&&!requestDone){onreadystatechange("timeout")}},s.timeout)}}=
try{xhr.send(s.data)}catch(e){jQuery.handleError(s,xhr,null,e)}if(!s.asyn=
c){onreadystatechange()}function =
success(){if(s.success){s.success(data,status)}if(s.global){jQuery.event.=
trigger("ajaxSuccess",[xhr,s])}}function =
complete(){if(s.complete){s.complete(xhr,status)}if(s.global){jQuery.even=
t.trigger("ajaxComplete",[xhr,s])}if(s.global&&!--jQuery.active){jQuery.e=
vent.trigger("ajaxStop")}}return =
xhr},handleError:function(s,xhr,status,e){if(s.error){s.error(xhr,status,=
e)}if(s.global){jQuery.event.trigger("ajaxError",[xhr,s,e])}},active:0,ht=
tpSuccess:function(xhr){try{return =
!xhr.status&&location.protocol=3D=3D"file:"||(xhr.status>=3D200&&xhr.stat=
us<300)||xhr.status=3D=3D304||xhr.status=3D=3D1223}catch(e){}return =
false},httpNotModified:function(xhr,url){try{var =
xhrRes=3Dxhr.getResponseHeader("Last-Modified");return =
xhr.status=3D=3D304||xhrRes=3D=3DjQuery.lastModified[url]}catch(e){}retur=
n false},httpData:function(xhr,type,s){var =
ct=3Dxhr.getResponseHeader("content-type"),xml=3Dtype=3D=3D"xml"||!type&&=
ct&&ct.indexOf("xml")>=3D0,data=3Dxml?xhr.responseXML:xhr.responseText;if=
(xml&&data.documentElement.tagName=3D=3D"parsererror"){throw"parsererror"=
}if(s&&s.dataFilter){data=3Ds.dataFilter(data,type)}if(typeof =
data=3D=3D=3D"string"){if(type=3D=3D"script"){jQuery.globalEval(data)}if(=
type=3D=3D"json"){data=3Dwindow["eval"]("("+data+")")}}return =
data},param:function(a){var s=3D[];function =
add(key,value){s[s.length]=3DencodeURIComponent(key)+"=3D"+encodeURICompo=
nent(value)}if(jQuery.isArray(a)||a.jquery){jQuery.each(a,function(){add(=
this.name,this.value)})}else{for(var j in =
a){if(jQuery.isArray(a[j])){jQuery.each(a[j],function(){add(j,this)})}els=
e{add(j,jQuery.isFunction(a[j])?a[j]():a[j])}}}return =
s.join("&").replace(/%20/g,"+")}});var =
elemdisplay=3D{},timerId,fxAttrs=3D[["height","marginTop","marginBottom",=
"paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddin=
gLeft","paddingRight"],["opacity"]];function genFx(type,num){var =
obj=3D{};jQuery.each(fxAttrs.concat.apply([],fxAttrs.slice(0,num)),functi=
on(){obj[this]=3Dtype});return =
obj}jQuery.fn.extend({show:function(speed,callback){if(speed){return =
this.animate(genFx("show",3),speed,callback)}else{for(var =
i=3D0,l=3Dthis.length;i<l;i++){var =
old=3DjQuery.data(this[i],"olddisplay");this[i].style.display=3Dold||"";i=
f(jQuery.css(this[i],"display")=3D=3D=3D"none"){var =
tagName=3Dthis[i].tagName,display;if(elemdisplay[tagName]){display=3Delem=
display[tagName]}else{var elem=3DjQuery("<"+tagName+" =
/>").appendTo("body");display=3Delem.css("display");if(display=3D=3D=3D"n=
one"){display=3D"block"}elem.remove();elemdisplay[tagName]=3Ddisplay}jQue=
ry.data(this[i],"olddisplay",display)}}for(var =
i=3D0,l=3Dthis.length;i<l;i++){this[i].style.display=3DjQuery.data(this[i=
],"olddisplay")||""}return =
this}},hide:function(speed,callback){if(speed){return =
this.animate(genFx("hide",3),speed,callback)}else{for(var =
i=3D0,l=3Dthis.length;i<l;i++){var =
old=3DjQuery.data(this[i],"olddisplay");if(!old&&old!=3D=3D"none"){jQuery=
.data(this[i],"olddisplay",jQuery.css(this[i],"display"))}}for(var =
i=3D0,l=3Dthis.length;i<l;i++){this[i].style.display=3D"none"}return =
this}},_toggle:jQuery.fn.toggle,toggle:function(fn,fn2){var =
bool=3Dtypeof fn=3D=3D=3D"boolean";return =
jQuery.isFunction(fn)&&jQuery.isFunction(fn2)?this._toggle.apply(this,arg=
uments):fn=3D=3Dnull||bool?this.each(function(){var =
state=3Dbool?fn:jQuery(this).is(":hidden");jQuery(this)[state?"show":"hid=
e"]()}):this.animate(genFx("toggle",3),fn,fn2)},fadeTo:function(speed,to,=
callback){return =
this.animate({opacity:to},speed,callback)},animate:function(prop,speed,ea=
sing,callback){var optall=3DjQuery.speed(speed,easing,callback);return =
this[optall.queue=3D=3D=3Dfalse?"each":"queue"](function(){var =
opt=3DjQuery.extend({},optall),p,hidden=3Dthis.nodeType=3D=3D1&&jQuery(th=
is).is(":hidden"),self=3Dthis;for(p in =
prop){if(prop[p]=3D=3D"hide"&&hidden||prop[p]=3D=3D"show"&&!hidden){retur=
n =
opt.complete.call(this)}if((p=3D=3D"height"||p=3D=3D"width")&&this.style)=
{opt.display=3DjQuery.css(this,"display");opt.overflow=3Dthis.style.overf=
low}}if(opt.overflow!=3Dnull){this.style.overflow=3D"hidden"}opt.curAnim=3D=
jQuery.extend({},prop);jQuery.each(prop,function(name,val){var e=3Dnew =
jQuery.fx(self,opt,name);if(/toggle|show|hide/.test(val)){e[val=3D=3D"tog=
gle"?hidden?"show":"hide":val](prop)}else{var =
parts=3Dval.toString().match(/^([+-]=3D)?([\d+-.]+)(.*)$/),start=3De.cur(=
true)||0;if(parts){var =
end=3DparseFloat(parts[2]),unit=3Dparts[3]||"px";if(unit!=3D"px"){self.st=
yle[name]=3D(end||1)+unit;start=3D((end||1)/e.cur(true))*start;self.style=
[name]=3Dstart+unit}if(parts[1]){end=3D((parts[1]=3D=3D"-=3D"?-1:1)*end)+=
start}e.custom(start,end,unit)}else{e.custom(start,val,"")}}});return =
true})},stop:function(clearQueue,gotoEnd){var =
timers=3DjQuery.timers;if(clearQueue){this.queue([])}this.each(function()=
{for(var =
i=3Dtimers.length-1;i>=3D0;i--){if(timers[i].elem=3D=3Dthis){if(gotoEnd){=
timers[i](true)}timers.splice(i,1)}}});if(!gotoEnd){this.dequeue()}return=
 =
this}});jQuery.each({slideDown:genFx("show",1),slideUp:genFx("hide",1),sl=
ideToggle:genFx("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hid=
e"}},function(name,props){jQuery.fn[name]=3Dfunction(speed,callback){retu=
rn =
this.animate(props,speed,callback)}});jQuery.extend({speed:function(speed=
,easing,fn){var opt=3Dtypeof =
speed=3D=3D=3D"object"?speed:{complete:fn||!fn&&easing||jQuery.isFunction=
(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!jQuery.isFuncti=
on(easing)&&easing};opt.duration=3DjQuery.fx.off?0:typeof =
opt.duration=3D=3D=3D"number"?opt.duration:jQuery.fx.speeds[opt.duration]=
||jQuery.fx.speeds._default;opt.old=3Dopt.complete;opt.complete=3Dfunctio=
n(){if(opt.queue!=3D=3Dfalse){jQuery(this).dequeue()}if(jQuery.isFunction=
(opt.old)){opt.old.call(this)}};return =
opt},easing:{linear:function(p,n,firstNum,diff){return =
firstNum+diff*p},swing:function(p,n,firstNum,diff){return((-Math.cos(p*Ma=
th.PI)/2)+0.5)*diff+firstNum}},timers:[],fx:function(elem,options,prop){t=
his.options=3Doptions;this.elem=3Delem;this.prop=3Dprop;if(!options.orig)=
{options.orig=3D{}}}});jQuery.fx.prototype=3D{update:function(){if(this.o=
ptions.step){this.options.step.call(this.elem,this.now,this)}(jQuery.fx.s=
tep[this.prop]||jQuery.fx.step._default)(this);if((this.prop=3D=3D"height=
"||this.prop=3D=3D"width")&&this.elem.style){this.elem.style.display=3D"b=
lock"}},cur:function(force){if(this.elem[this.prop]!=3Dnull&&(!this.elem.=
style||this.elem.style[this.prop]=3D=3Dnull)){return =
this.elem[this.prop]}var =
r=3DparseFloat(jQuery.css(this.elem,this.prop,force));return =
r&&r>-10000?r:parseFloat(jQuery.curCSS(this.elem,this.prop))||0},custom:f=
unction(from,to,unit){this.startTime=3Dnow();this.start=3Dfrom;this.end=3D=
to;this.unit=3Dunit||this.unit||"px";this.now=3Dthis.start;this.pos=3Dthi=
s.state=3D0;var self=3Dthis;function t(gotoEnd){return =
self.step(gotoEnd)}t.elem=3Dthis.elem;if(t()&&jQuery.timers.push(t)&&!tim=
erId){timerId=3DsetInterval(function(){var =
timers=3DjQuery.timers;for(var =
i=3D0;i<timers.length;i++){if(!timers[i]()){timers.splice(i--,1)}}if(!tim=
ers.length){clearInterval(timerId);timerId=3Dundefined}},13)}},show:funct=
ion(){this.options.orig[this.prop]=3DjQuery.attr(this.elem.style,this.pro=
p);this.options.show=3Dtrue;this.custom(this.prop=3D=3D"width"||this.prop=
=3D=3D"height"?1:0,this.cur());jQuery(this.elem).show()},hide:function(){=
this.options.orig[this.prop]=3DjQuery.attr(this.elem.style,this.prop);thi=
s.options.hide=3Dtrue;this.custom(this.cur(),0)},step:function(gotoEnd){v=
ar =
t=3Dnow();if(gotoEnd||t>=3Dthis.options.duration+this.startTime){this.now=
=3Dthis.end;this.pos=3Dthis.state=3D1;this.update();this.options.curAnim[=
this.prop]=3Dtrue;var done=3Dtrue;for(var i in =
this.options.curAnim){if(this.options.curAnim[i]!=3D=3Dtrue){done=3Dfalse=
}}if(done){if(this.options.display!=3Dnull){this.elem.style.overflow=3Dth=
is.options.overflow;this.elem.style.display=3Dthis.options.display;if(jQu=
ery.css(this.elem,"display")=3D=3D"none"){this.elem.style.display=3D"bloc=
k"}}if(this.options.hide){jQuery(this.elem).hide()}if(this.options.hide||=
this.options.show){for(var p in =
this.options.curAnim){jQuery.attr(this.elem.style,p,this.options.orig[p])=
}}this.options.complete.call(this.elem)}return false}else{var =
n=3Dt-this.startTime;this.state=3Dn/this.options.duration;this.pos=3DjQue=
ry.easing[this.options.easing||(jQuery.easing.swing?"swing":"linear")](th=
is.state,n,0,1,this.options.duration);this.now=3Dthis.start+((this.end-th=
is.start)*this.pos);this.update()}return =
true}};jQuery.extend(jQuery.fx,{speeds:{slow:600,fast:200,_default:400},s=
tep:{opacity:function(fx){jQuery.attr(fx.elem.style,"opacity",fx.now)},_d=
efault:function(fx){if(fx.elem.style&&fx.elem.style[fx.prop]!=3Dnull){fx.=
elem.style[fx.prop]=3Dfx.now+fx.unit}else{fx.elem[fx.prop]=3Dfx.now}}}});=
if(document.documentElement.getBoundingClientRect){jQuery.fn.offset=3Dfun=
ction(){if(!this[0]){return{top:0,left:0}}if(this[0]=3D=3D=3Dthis[0].owne=
rDocument.body){return jQuery.offset.bodyOffset(this[0])}var =
box=3Dthis[0].getBoundingClientRect(),doc=3Dthis[0].ownerDocument,body=3D=
doc.body,docElem=3Ddoc.documentElement,clientTop=3DdocElem.clientTop||bod=
y.clientTop||0,clientLeft=3DdocElem.clientLeft||body.clientLeft||0,top=3D=
box.top+(self.pageYOffset||jQuery.boxModel&&docElem.scrollTop||body.scrol=
lTop)-clientTop,left=3Dbox.left+(self.pageXOffset||jQuery.boxModel&&docEl=
em.scrollLeft||body.scrollLeft)-clientLeft;return{top:top,left:left}}}els=
e{jQuery.fn.offset=3Dfunction(){if(!this[0]){return{top:0,left:0}}if(this=
[0]=3D=3D=3Dthis[0].ownerDocument.body){return =
jQuery.offset.bodyOffset(this[0])}jQuery.offset.initialized||jQuery.offse=
t.initialize();var =
elem=3Dthis[0],offsetParent=3Delem.offsetParent,prevOffsetParent=3Delem,d=
oc=3Delem.ownerDocument,computedStyle,docElem=3Ddoc.documentElement,body=3D=
doc.body,defaultView=3Ddoc.defaultView,prevComputedStyle=3DdefaultView.ge=
tComputedStyle(elem,null),top=3Delem.offsetTop,left=3Delem.offsetLeft;whi=
le((elem=3Delem.parentNode)&&elem!=3D=3Dbody&&elem!=3D=3DdocElem){compute=
dStyle=3DdefaultView.getComputedStyle(elem,null);top-=3Delem.scrollTop,le=
ft-=3Delem.scrollLeft;if(elem=3D=3D=3DoffsetParent){top+=3Delem.offsetTop=
,left+=3Delem.offsetLeft;if(jQuery.offset.doesNotAddBorder&&!(jQuery.offs=
et.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(elem.tagName))){t=
op+=3DparseInt(computedStyle.borderTopWidth,10)||0,left+=3DparseInt(compu=
tedStyle.borderLeftWidth,10)||0}prevOffsetParent=3DoffsetParent,offsetPar=
ent=3Delem.offsetParent}if(jQuery.offset.subtractsBorderForOverflowNotVis=
ible&&computedStyle.overflow!=3D=3D"visible"){top+=3DparseInt(computedSty=
le.borderTopWidth,10)||0,left+=3DparseInt(computedStyle.borderLeftWidth,1=
0)||0}prevComputedStyle=3DcomputedStyle}if(prevComputedStyle.position=3D=3D=
=3D"relative"||prevComputedStyle.position=3D=3D=3D"static"){top+=3Dbody.o=
ffsetTop,left+=3Dbody.offsetLeft}if(prevComputedStyle.position=3D=3D=3D"f=
ixed"){top+=3DMath.max(docElem.scrollTop,body.scrollTop),left+=3DMath.max=
(docElem.scrollLeft,body.scrollLeft)}return{top:top,left:left}}}jQuery.of=
fset=3D{initialize:function(){if(this.initialized){return }var =
body=3Ddocument.body,container=3Ddocument.createElement("div"),innerDiv,c=
heckDiv,table,td,rules,prop,bodyMarginTop=3Dbody.style.marginTop,html=3D'=
<div style=3D"position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;"><div></div></div><table =
style=3D"position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;" cellpadding=3D"0" =
cellspacing=3D"0"><tr><td></td></tr></table>';rules=3D{position:"absolute=
",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hid=
den"};for(prop in =
rules){container.style[prop]=3Drules[prop]}container.innerHTML=3Dhtml;bod=
y.insertBefore(container,body.firstChild);innerDiv=3Dcontainer.firstChild=
,checkDiv=3DinnerDiv.firstChild,td=3DinnerDiv.nextSibling.firstChild.firs=
tChild;this.doesNotAddBorder=3D(checkDiv.offsetTop!=3D=3D5);this.doesAddB=
orderForTableAndCells=3D(td.offsetTop=3D=3D=3D5);innerDiv.style.overflow=3D=
"hidden",innerDiv.style.position=3D"relative";this.subtractsBorderForOver=
flowNotVisible=3D(checkDiv.offsetTop=3D=3D=3D-5);body.style.marginTop=3D"=
1px";this.doesNotIncludeMarginInBodyOffset=3D(body.offsetTop=3D=3D=3D0);b=
ody.style.marginTop=3DbodyMarginTop;body.removeChild(container);this.init=
ialized=3Dtrue},bodyOffset:function(body){jQuery.offset.initialized||jQue=
ry.offset.initialize();var =
top=3Dbody.offsetTop,left=3Dbody.offsetLeft;if(jQuery.offset.doesNotInclu=
deMarginInBodyOffset){top+=3DparseInt(jQuery.curCSS(body,"marginTop",true=
),10)||0,left+=3DparseInt(jQuery.curCSS(body,"marginLeft",true),10)||0}re=
turn{top:top,left:left}}};jQuery.fn.extend({position:function(){var =
left=3D0,top=3D0,results;if(this[0]){var =
offsetParent=3Dthis.offsetParent(),offset=3Dthis.offset(),parentOffset=3D=
/^body|html$/i.test(offsetParent[0].tagName)?{top:0,left:0}:offsetParent.=
offset();offset.top-=3Dnum(this,"marginTop");offset.left-=3Dnum(this,"mar=
ginLeft");parentOffset.top+=3Dnum(offsetParent,"borderTopWidth");parentOf=
fset.left+=3Dnum(offsetParent,"borderLeftWidth");results=3D{top:offset.to=
p-parentOffset.top,left:offset.left-parentOffset.left}}return =
results},offsetParent:function(){var =
offsetParent=3Dthis[0].offsetParent||document.body;while(offsetParent&&(!=
/^body|html$/i.test(offsetParent.tagName)&&jQuery.css(offsetParent,"posit=
ion")=3D=3D"static")){offsetParent=3DoffsetParent.offsetParent}return =
jQuery(offsetParent)}});jQuery.each(["Left","Top"],function(i,name){var =
method=3D"scroll"+name;jQuery.fn[method]=3Dfunction(val){if(!this[0]){ret=
urn null}return =
val!=3D=3Dundefined?this.each(function(){this=3D=3Dwindow||this=3D=3Ddocu=
ment?window.scrollTo(!i?val:jQuery(window).scrollLeft(),i?val:jQuery(wind=
ow).scrollTop()):this[method]=3Dval}):this[0]=3D=3Dwindow||this[0]=3D=3Dd=
ocument?self[i?"pageYOffset":"pageXOffset"]||jQuery.boxModel&&document.do=
cumentElement[method]||document.body[method]:this[0][method]}});jQuery.ea=
ch(["Height","Width"],function(i,name){var =
tl=3Di?"Left":"Top",br=3Di?"Right":"Bottom",lower=3Dname.toLowerCase();jQ=
uery.fn["inner"+name]=3Dfunction(){return =
this[0]?jQuery.css(this[0],lower,false,"padding"):null};jQuery.fn["outer"=
+name]=3Dfunction(margin){return =
this[0]?jQuery.css(this[0],lower,false,margin?"margin":"border"):null};va=
r type=3Dname.toLowerCase();jQuery.fn[type]=3Dfunction(size){return =
this[0]=3D=3Dwindow?document.compatMode=3D=3D"CSS1Compat"&&document.docum=
entElement["client"+name]||document.body["client"+name]:this[0]=3D=3Ddocu=
ment?Math.max(document.documentElement["client"+name],document.body["scro=
ll"+name],document.documentElement["scroll"+name],document.body["offset"+=
name],document.documentElement["offset"+name]):size=3D=3D=3Dundefined?(th=
is.length?jQuery.css(this[0],type):null):this.css(type,typeof =
size=3D=3D=3D"string"?size:size+"px")}})})();
------=_NextPart_000_0021_01CFB21A.280D2E40--
