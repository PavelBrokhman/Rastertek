From: "Saved by Internet Explorer 11"
Subject: Tutorial 36: Blur
Date: Thu, 7 Aug 2014 08:25:01 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CFB219.14D71440"
X-MimeOLE: Produced By Microsoft MimeOLE V6.3.9600.16384

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/web/20140722085257/http://rastertek.com/dx11tut36.html

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><META content=3D"IE=3D5.0000" =
http-equiv=3D"X-UA-Compatible">

<SCRIPT src=3D"http://web.archive.org/static/js/analytics.js" =
type=3D"text/javascript"></SCRIPT>
=20
<META http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3Dutf-8"><LINK =
href=3D"http://web.archive.org/static/css/banner-styles.css"=20
rel=3D"stylesheet" type=3D"text/css"> <TITLE>Tutorial 36: Blur</TITLE>
<META name=3D"GENERATOR" content=3D"MSHTML 11.00.9600.17207"></HEAD>=20
<BODY text=3D"#ffffff" bgcolor=3D"#000000"><!-- BEGIN WAYBACK TOOLBAR =
INSERT -->=20
<SCRIPT> if (window.archive_analytics) { =
window.archive_analytics.values['server_name']=3D"wwwb-app0.us.archive.or=
g";}; </SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/js/disclaim-element.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/js/graph-calc.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT src=3D"http://web.archive.org/static/jflot/jquery.min.js" =
type=3D"text/javascript"></SCRIPT>
=20
<SCRIPT type=3D"text/javascript">=0A=
//<![CDATA[=0A=
var firstDate =3D 820454400000;=0A=
var lastDate =3D 1420070399999;=0A=
var wbPrefix =3D "/web/";=0A=
var wbCurrentUrl =3D "http:\/\/rastertek.com\/dx11tut36.html";=0A=
=0A=
var curYear =3D -1;=0A=
var curMonth =3D -1;=0A=
var yearCount =3D 18;=0A=
var firstYear =3D 1996;=0A=
var imgWidth =3D 475;=0A=
var yearImgWidth =3D 25;=0A=
var monthImgWidth =3D 2;=0A=
var trackerVal =3D "none";=0A=
var displayDay =3D "22";=0A=
var displayMonth =3D "Jul";=0A=
var displayYear =3D "2014";=0A=
var prettyMonths =3D =
["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]=
;=0A=
=0A=
function showTrackers(val) {=0A=
	if(val =3D=3D trackerVal) {=0A=
		return;=0A=
	}=0A=
	if(val =3D=3D "inline") {=0A=
		document.getElementById("displayYearEl").style.color =3D "#ec008c";=0A=
		document.getElementById("displayMonthEl").style.color =3D "#ec008c";=0A=
		document.getElementById("displayDayEl").style.color =3D "#ec008c";		=0A=
	} else {=0A=
		document.getElementById("displayYearEl").innerHTML =3D displayYear;=0A=
		document.getElementById("displayYearEl").style.color =3D "#ff0";=0A=
		document.getElementById("displayMonthEl").innerHTML =3D displayMonth;=0A=
		document.getElementById("displayMonthEl").style.color =3D "#ff0";=0A=
		document.getElementById("displayDayEl").innerHTML =3D displayDay;=0A=
		document.getElementById("displayDayEl").style.color =3D "#ff0";=0A=
	}=0A=
   document.getElementById("wbMouseTrackYearImg").style.display =3D val;=0A=
   document.getElementById("wbMouseTrackMonthImg").style.display =3D val;=0A=
   trackerVal =3D val;=0A=
}=0A=
function getElementX2(obj) {=0A=
	var thing =3D jQuery(obj);=0A=
	if((thing =3D=3D undefined) =0A=
			|| (typeof thing =3D=3D "undefined") =0A=
			|| (typeof thing.offset =3D=3D "undefined")) {=0A=
		return getElementX(obj);=0A=
	}=0A=
	return Math.round(thing.offset().left);=0A=
}=0A=
function trackMouseMove(event,element) {=0A=
=0A=
   var eventX =3D getEventX(event);=0A=
   var elementX =3D getElementX2(element);=0A=
   var xOff =3D eventX - elementX;=0A=
	if(xOff < 0) {=0A=
		xOff =3D 0;=0A=
	} else if(xOff > imgWidth) {=0A=
		xOff =3D imgWidth;=0A=
	}=0A=
   var monthOff =3D xOff % yearImgWidth;=0A=
=0A=
   var year =3D Math.floor(xOff / yearImgWidth);=0A=
	var yearStart =3D year * yearImgWidth;=0A=
   var monthOfYear =3D Math.floor(monthOff / monthImgWidth);=0A=
   if(monthOfYear > 11) {=0A=
       monthOfYear =3D 11;=0A=
   }=0A=
   // 1 extra border pixel at the left edge of the year:=0A=
   var month =3D (year * 12) + monthOfYear;=0A=
   var day =3D 1;=0A=
	if(monthOff % 2 =3D=3D 1) {=0A=
		day =3D 15;=0A=
	}=0A=
	var dateString =3D =0A=
		zeroPad(year + firstYear) + =0A=
		zeroPad(monthOfYear+1,2) +=0A=
		zeroPad(day,2) + "000000";=0A=
=0A=
	var monthString =3D prettyMonths[monthOfYear];=0A=
	document.getElementById("displayYearEl").innerHTML =3D year + 1996;=0A=
	document.getElementById("displayMonthEl").innerHTML =3D monthString;=0A=
	// looks too jarring when it changes..=0A=
	//document.getElementById("displayDayEl").innerHTML =3D zeroPad(day,2);=0A=
=0A=
	var url =3D wbPrefix + dateString + '/' +  wbCurrentUrl;=0A=
	document.getElementById('wm-graph-anchor').href =3D url;=0A=
=0A=
   //document.getElementById("wmtbURL").value=3D"evX("+eventX+") =
elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") =
monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") =
ms("+monthString+")";=0A=
   if(curYear !=3D year) {=0A=
       var yrOff =3D year * yearImgWidth;=0A=
       document.getElementById("wbMouseTrackYearImg").style.left =3D =
yrOff + "px";=0A=
       curYear =3D year;=0A=
   }=0A=
   if(curMonth !=3D month) {=0A=
       var mtOff =3D year + (month * monthImgWidth) + 1;=0A=
       document.getElementById("wbMouseTrackMonthImg").style.left =3D =
mtOff + "px";=0A=
       curMonth =3D month;=0A=
   }=0A=
}=0A=
//]]>=0A=
</SCRIPT>
=20
<STYLE =
type=3D"text/css">body{margin-top:0!important;padding-top:0!important;min=
-width:800px!important;}#wm-ipp =
a:hover{text-decoration:underline!important;}</STYLE>
=20
<DIV class=3D"__wb_banner_div" id=3D"wm-ipp" lang=3D"en" =
style=3D"padding: 0px 5px; display: none; position: relative; =
min-height: 70px; min-width: 800px;">
<DIV class=3D"__wb_banner_div" id=3D"wm-ipp-inside" =
style=3D'border-width: medium 5px 5px; border-style: none solid solid; =
border-color: currentColor rgb(0, 0, 0) rgb(0, 0, 0); margin: 0px =
!important; padding: 0px !important; border-image: none; width: 97%; =
text-align: center; font-family: "Lucida Grande","Arial",sans-serif =
!important; font-size: 11px !important; position: fixed; min-width: =
780px; box-shadow: 1px 1px 3px #333; background-image: =
url("/static/images/toolbar/wm_tb_bk_trns.png"); -moz-box-shadow: 1px =
1px 3px #333; -webkit-box-shadow: 1px 1px 3px #333;'>
<TABLE style=3D"margin: 0px; padding: 0px; width: 100%; border-collapse: =
collapse;">
  <TBODY>
  <TR>
    <TD style=3D"padding: 10px; vertical-align: top; min-width: =
110px;"><A=20
      title=3D"Wayback Machine home page" style=3D"border: currentColor; =
border-image: none; background-color: transparent;"=20
      href=3D"http://web.archive.org/web/"><IMG width=3D"110" =
height=3D"39" alt=3D"Wayback Machine"=20
      =
src=3D"http://web.archive.org/static/images/toolbar/wayback-toolbar-logo.=
png"=20
      border=3D"0"></A>    </TD>
    <TD style=3D"padding: 0px !important; width: 100%; text-align: =
center; vertical-align: top;">
      <TABLE style=3D"margin: 0px auto; padding: 0px; width: 570px; =
border-collapse: collapse;">
        <TBODY>
        <TR>
          <TD style=3D"padding: 3px 0px;" colspan=3D"2">
            <FORM name=3D"wmtb" id=3D"wmtb" style=3D"margin: 0px =
!important; padding: 0px !important;"=20
            action=3D"/web/form-submit.jsp" method=3D"get"=20
target=3D"_top"><INPUT name=3D"url" id=3D"wmtbURL" style=3D'width: =
400px; font-family: "Lucida Grande","Arial",sans-serif; font-size: =
11px;' onfocus=3D"javascript:this.focus();this.select();" type=3D"text" =
value=3D"http://rastertek.com/dx11tut36.html"><INPUT name=3D"type" =
type=3D"hidden" value=3D"replay"><INPUT name=3D"date" type=3D"hidden" =
value=3D"20140722085257"><INPUT style=3D'width: inherit !important; =
font-family: "Lucida Grande","Arial",sans-serif; font-size: 11px; =
margin-left: 5px;' type=3D"submit" value=3D"Go"><SPAN=20
            id=3D"wm_tb_options" style=3D"display: =
block;"></SPAN></FORM></TD>
          <TD style=3D"padding: 5px 0px 0px !important; vertical-align: =
bottom;"=20
          rowspan=3D"2">
            <TABLE style=3D'width: 110px; color: rgb(153, 153, 170); =
font-family: "Helvetica","Lucida Grande","Arial",sans-serif; =
border-collapse: collapse;'>
              <TBODY><!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->    =
       =20
              <TR style=3D"width: 110px; height: 16px; font-size: 10px =
!important;">
                <TD nowrap=3D"nowrap" style=3D"text-align: right; =
text-transform: uppercase; overflow: visible; padding-right: 9px; =
font-size: 11px !important; font-weight: bold; white-space: nowrap;"><A=20
                  title=3D"24 Mar 2014" style=3D"border: currentColor; =
border-image: none; color: rgb(51, 51, 255); font-weight: bold; =
text-decoration: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20140324201222/http://www.rastertek.co=
m/dx11tut36.html"><STRONG>MAR</STRONG></A>
                  		                                </TD>
                <TD title=3D"You are here: 8:52:57 Jul 22, 2014" =
id=3D"displayMonthEl"=20
                style=3D"background: rgb(0, 0, 0); width: 34px; height: =
15px; text-align: center; color: rgb(255, 255, 0); text-transform: =
uppercase; padding-top: 1px; font-size: 11px !important; font-weight: =
bold;">JUL</TD>
                <TD nowrap=3D"nowrap" style=3D"text-transform: =
uppercase; overflow: visible; padding-left: 9px; font-size: 11px =
!important; font-weight: bold; white-space: nowrap;">=20
                                                       Aug               =
       =20
                                  </TD></TR><!-- NEXT/PREV CAPTURE NAV =
AND DAY OF MONTH INDICATOR -->=20
                        =20
              <TR>
                <TD nowrap=3D"nowrap" style=3D"text-align: right =
!important; overflow: visible; padding-right: 9px; vertical-align: =
middle !important; white-space: nowrap;"><A=20
                  title=3D"20:12:22 Mar 24, 2014" style=3D"border: =
currentColor; border-image: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20140324201222/http://www.rastertek.co=
m/dx11tut36.html"><IMG=20
                  width=3D"14" height=3D"16" alt=3D"Previous capture" =
src=3D"http://web.archive.org/static/images/toolbar/wm_tb_prv_on.png"=20
                  border=3D"0"></A>		                                =
</TD>
                <TD title=3D"You are here: 8:52:57 Jul 22, 2014" =
id=3D"displayDayEl"=20
                style=3D"background: rgb(0, 0, 0); padding: 2px 0px 0px; =
width: 34px; height: 24px; text-align: center; color: rgb(255, 255, 0); =
font-size: 24px; font-weight: bold;">22</TD>
                <TD nowrap=3D"nowrap" style=3D"text-align: left =
!important; overflow: visible; padding-left: 9px; vertical-align: middle =
!important; white-space: nowrap;"><IMG=20
                  width=3D"14" height=3D"16" alt=3D"Next capture" =
src=3D"http://web.archive.org/static/images/toolbar/wm_tb_nxt_off.png"=20
                  border=3D"0">                       			     =
</TD></TR><!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->=20
                        =20
              <TR=20
style=3D"width: 110px; height: 13px; font-size: 9px !important;">
                <TD nowrap=3D"nowrap" style=3D"text-align: right; =
overflow: visible; padding-right: 9px; font-size: 11px !important; =
font-weight: bold; white-space: nowrap;"><A=20
                  title=3D"5 Nov 2012" style=3D"border: currentColor; =
border-image: none; color: rgb(51, 51, 255); font-weight: bold; =
text-decoration: none; background-color: transparent;"=20
                  =
href=3D"http://web.archive.org/web/20121105034512/http://www.rastertek.co=
m/dx11tut36.html"><STRONG>2012</STRONG></A>
                  		                                </TD>
                <TD title=3D"You are here: 8:52:57 Jul 22, 2014" =
id=3D"displayYearEl"=20
                style=3D"background: rgb(0, 0, 0); width: 34px; height: =
13px; text-align: center; color: rgb(255, 255, 0); padding-top: 1px; =
font-size: 11px !important; font-weight: bold;">2014</TD>
                <TD nowrap=3D"nowrap" style=3D"overflow: visible; =
padding-left: 9px; font-size: 11px !important; font-weight: bold; =
white-space: nowrap;">=20
                                                       2015              =
       =20
                   				 </TD></TR></TBODY></TABLE></TD></TR>
        <TR>
          <TD style=3D"padding: 0px !important; vertical-align: =
middle;"><A=20
            title=3D"See a list of every capture for this URL" =
style=3D"border: currentColor; border-image: none; color: rgb(51, 51, =
255); font-size: 11px; font-weight: bold; background-color: =
transparent;"=20
            =
href=3D"http://web.archive.org/web/20140722085257*/http://rastertek.com/d=
x11tut36.html"><STRONG>5=20
            captures</STRONG></A>           =20
            <DIV title=3D"Timespan for captures of this URL" =
class=3D"__wb_banner_div"=20
            style=3D"margin: 0px !important; padding: 2px 0px 0px =
!important; color: rgb(102, 102, 102); font-size: 9px; white-space: =
nowrap;">10=20
            Oct 11 - 22 Jul 14</DIV></TD>
          <TD style=3D"padding: 0px !important;"><A =
id=3D"wm-graph-anchor" style=3D"width: 475px; height: 27px; white-space: =
nowrap; position: relative;"=20
            =
href=3D"http://web.archive.org/web/20140722085257/http://rastertek.com/">=

            <DIV title=3D"Explore captures for this URL" =
class=3D"__wb_banner_div"=20
            id=3D"wm-ipp-sparkline" style=3D"width: 475px; height: 27px; =
border-right-color: rgb(204, 204, 204); border-right-width: 1px; =
border-right-style: solid; white-space: nowrap; position: relative; =
cursor: pointer; background-color: rgb(255, 255, 255);"><IMG=20
            width=3D"475" height=3D"27" id=3D"sparklineImgId" =
style=3D"left: 0px; top: 0px; position: absolute; z-index: 9012;"=20
            onmouseover=3D"showTrackers('inline');" =
onmouseout=3D"showTrackers('none');"=20
            onmousemove=3D"trackMouseMove(event,this)" =
alt=3D"sparklines" =
src=3D"http://web.archive.org/web/jsp/graph.jsp?graphdata=3D475_27_1996:-=
1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:00000000=
0000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:=
-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:0000000=
00000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010=
:-1:000000000000_2011:-1:000000000101_2012:-1:000000000010_2013:-1:000000=
000000_2014:6:001000100000"=20
            border=3D"0">			 <IMG width=3D"25" height=3D"27" =
id=3D"wbMouseTrackYearImg"=20
            style=3D"display: none; position: absolute; z-index: 9010;" =
src=3D"http://web.archive.org/static/images/toolbar/transp-yellow-pixel.p=
ng"=20
            border=3D"0">			 <IMG width=3D"2" height=3D"27" =
id=3D"wbMouseTrackMonthImg"=20
            style=3D"display: none; position: absolute; z-index: 9011;" =
src=3D"http://web.archive.org/static/images/toolbar/transp-red-pixel.png"=
=20
            border=3D"0">        </DIV></A>        =
</TD></TR></TBODY></TABLE></TD>
    <TD style=3D"padding: 5px; width: 65px; text-align: right; =
font-size: 11px !important;"><A=20
      title=3D"Close the toolbar" style=3D'background: =
url("/static/images/toolbar/wm_tb_close.png") no-repeat 100% 0px; =
border: currentColor; border-image: none; color: rgb(51, 51, 255); =
padding-right: 18px; font-family: "Lucida Grande","Arial",sans-serif; =
margin-bottom: 23px; display: block;'=20
      =
onclick=3D"document.getElementById('wm-ipp').style.display=3D'none';" =
href=3D"javascript:;">Close</A><A=20
      title=3D"Get some help using the Wayback Machine" =
style=3D'background: url("/static/images/toolbar/wm_tb_help.png") =
no-repeat 100% 0px; border: currentColor; border-image: none; color: =
rgb(51, 51, 255); padding-right: 18px; font-family: "Lucida =
Grande","Arial",sans-serif; display: block;'=20
      =
href=3D"http://faq.web.archive.org/">Help</A></TD></TR></TBODY></TABLE></=
DIV></DIV>
<SCRIPT type=3D"text/javascript">=0A=
 var wmDisclaimBanner =3D document.getElementById("wm-ipp");=0A=
 if(wmDisclaimBanner !=3D null) {=0A=
   disclaimElement(wmDisclaimBanner);=0A=
 }=0A=
</SCRIPT>
 <!-- END WAYBACK TOOLBAR INSERT -->=20
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"4"><B>Tutorial 36: Blur=20
</B></FONT></P>
<P align=3D"left"><IMG width=3D"800" height=3D"1" =
src=3D"http://web.archive.org/web/20140722085257im_/http://rastertek.com/=
pic1001.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
blur effect is=20
used for blurring the full screen scene or blurring individual objects =
in that=20
scene. But more importantly the blur effect is also the base effect for =
numerous=20
other effects. Some of those effects are bloom, depth of field blurs, =
full=20
screen glow, glow mapping, halo/edge glows, softening shadow edges, =
blurred=20
light trails,  under water effects, and many more. However this tutorial =
will=20
just cover how to perform a basic full screen blur. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">In =
DirectX 11 the=20
real time blur effect is performed by first rendering the scene to a =
texture,=20
performing the blur on that texture, and then  rendering that texture =
back to=20
the screen. Whenever we perform 2D image operations on a scene that has =
been=20
rendered to texture it is called post processing. To perform any post =
processing=20
it is generally quite expensive and requires heavy optimization in the =
shaders.=20
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
this tutorial is=20
not optimized, I broke it out into separate areas so that you could =
clearly=20
understand how the blur effect works. Once you understand how it works =
your task=20
will be to optimize it for your own use. There will be many ways to do =
so (such=20
as using less render to textures, making the shader multi-pass, =
precalculating=20
normalization of weights) but I  will leave that for you to think about =
and=20
implement. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>The Blur=20
Algorithm</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">1. =
Render the scene=20
to texture.</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">2. =
Down sample the=20
texture to to half its size or less.</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">3. =
Perform a=20
horizontal blur on the down sampled texture.</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">4. =
Perform a=20
vertical blur.</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">5. =
Up sample the=20
texture back to the original screen size.</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">6. =
Render that=20
texture to the screen.</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
will now discuss=20
each of these points. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">In =
the first step we=20
render our entire scene to a texture. This is fairly straight forward =
and has=20
already been covered in Tutorial 22: Render to Texture, so you may want =
to=20
review that if you have not already done so. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
second step is=20
to down sample the render to texture of the scene to a smaller size. To =
do this=20
we first create a 2D square model composed of two triangles (in this =
tutorial I=20
call the class that contains that 2D model OrthoWindowClass). We make =
the size=20
of that 2D square model the smaller size we require (for example =
256x256, or=20
half the screen width and half the screen height). Next we render the =
full=20
screen texture to the smaller 2D square model and the filtering in the =
shader=20
sampler will handle down sampling it for us. You have already seen how =
this=20
works in Tutorial 11: 2D Rendering. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
you may wonder=20
why we are down sampling and what that actually has to do with the =
blurring=20
algorithm. The first reason is that it is computationally far less =
expensive to=20
perform a blur on a smaller texture than a large one (by magnitudes). =
And=20
secondly is that shrinking the texture down and then expanding it back =
up=20
performs a blur on its own that makes the end result look twice as good. =
In fact=20
back in the day that was one of the only few options you had to perform =
a real=20
time blur. You would just shrink the texture down and then blow it back =
up. =20
This was heavily pixelated and didn't look great but there weren't many =
other=20
options before programmable graphics hardware showed up. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Once =
we have the=20
down sampled texture we can now perform the blur. The method we are =
going to use=20
for blurring is to take a weighted average all the neighbor pixels  =
around each=20
pixel to determine the value the current pixel should be. Already you =
can tell=20
this is going to be fairly expensive to perform but we have a way of =
reducing=20
the computational complexity by doing it in two linear passes. We first =
do one=20
horizontal pass and one then vertical instead of doing a single circular =

neighborhood pass. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">To =
understand the=20
difference in the speed between the two different pass methods take for =
example=20
just a 100x100 pixel image. Two linear passes on a 100x100 image =
requires=20
reading 100 + 100 =3D 200 pixels. Doing a single circular pass requires =
reading=20
100 * 100 =3D 10,000 pixels.   Now expand that same example to a full =
screen high=20
definition image and you see why two linear passes are the better way to =
go.=20
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
first linear=20
pass is going to be a horizontal blur.  For example we will take a =
single pixel=20
such as: </FONT></P>
<P align=3D"left"><IMG width=3D"114" height=3D"18" =
src=3D"http://web.archive.org/web/20140722085257im_/http://rastertek.com/=
pic0178.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Then =
we will perform=20
a weighted blur of its 3 closest horizontal neighbors to produce =
something=20
similar to the following for each pixel: </FONT></P>
<P align=3D"left"><IMG width=3D"114" height=3D"18" =
src=3D"http://web.archive.org/web/20140722085257im_/http://rastertek.com/=
pic0179.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
do this for the=20
entire down sampled texture. The resulting horizontally blurred image is =
then=20
rendered to a second render to texture I call the HorizontalBlurTexture. =
This=20
will be used as an input texture for the next vertical blur pass. =
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
for the blur=20
weights that were used for each pixel during the horizontal blur you can =

increase or decrease each one of them for each neighbor pixel.   For =
example you=20
could set the middle pixel to be 1.0, then first left and right neighbor =
to be=20
0.9, then the further two neighbors to be 0.8, and so forth. Or you =
could be=20
more aggressive with the blur and set the weights to be 1.0, 0.75, 0.5, =
and so=20
on. The weights are up to you and it can have drastically different =
results. In=20
fact you could use a sine wave or saw tooth pattern for the weights =
instead, it=20
is completely up to you and will produce different interesting blurs.=20
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
other variable=20
here is how many neighbors you blur.  In the example here we only =
blurred the=20
first 3 neighbors. However we could have extended it to blur the first =
20=20
neighbors if we wanted to.   Once again the change to this number will =
have a=20
considerable effect on the final blur result. In the shader code for =
this=20
tutorial we use four neighbors. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
that we have a=20
horizontally blurred image on a separate render to texture object we can =
then=20
proceed with the vertical blur. It works exactly the same way as the =
horizontal=20
blur except that it goes vertically and uses the horizontal blur render =
to=20
texture as input instead of the original down sampled scene texture. The =

vertical blur is also rendered to another new render to texture object I =
call=20
the VerticalBlurTexture. Separating each render to texture also allows =
you to=20
display the results of each blur pass on the screen for debugging =
purpose. Now=20
using the same example as before and applying the vertical blur would =
then=20
produce the following blur for each pixel: </FONT></P>
<P align=3D"left"><IMG width=3D"114" height=3D"114" =
src=3D"http://web.archive.org/web/20140722085257im_/http://rastertek.com/=
pic0180.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Once =
this process is=20
complete we have the final blurred low resolution image, but we are =
going to now=20
need to sample it back to the original screen size. This is performed =
the exact=20
same way that the down sample was originally performed. We create a 2D =
square=20
model composed of two triangles and make the size of the 2D square model =
the=20
same size as the full resolution screen. We then render the small =
blurred=20
texture onto the full screen square model and the filtering in the =
shader=20
sampler will handle the up sampling. The process is now complete and the =
up=20
sampled texture can be rendered to the screen in 2D. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>Other=20
Considerations</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
as you may have=20
guessed there will be some aliasing issues that arise due to the up =
sampling=20
process. These aliasing issues may not be apparent if your original down =
sample=20
was half the screen size. However if your original down sample was a =
quarter of=20
the screen size (or less for an aggressive blur) then you will see  some =

artifacts when it is sampled back up. These artifacts become even more =
apparent=20
with movement and specifically movement in the distance, you will see=20
flickering/shimmering occurring. One of the ways to deal with this =
problem is to=20
write your own up sampling shader which just like the blur technique  =
samples a=20
large number of pixels around it to determine what value the pixel =
should=20
actually have instead of just a quick linear interpolation. As well =
there are=20
other sampling filters available which can reduce the amount of aliasing =
that=20
occurs. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
if you are=20
blurring per object instead of the entire screen then you will need to =
billboard=20
the 2D texture based on the location of each object. You can refer to =
the=20
billboarding tutorial I wrote to see how to do this. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">And =
one last thing=20
to mention before getting into the frame work and code is that if you =
want an=20
even more aggressive blur you can run  the horizontal and vertical blur =
twice on=20
the down sampled image instead of just once. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Framework</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">There are three new=20
classes for this tutorial. The first two classes handle the horizontal =
and=20
vertical blurring in the shader, they are called HorizontalBlurClass and =

VerticalBlurClass. I could have made this a single BlurClass but =
separating them=20
helps make the tutorial clearer. The third new class is =
OrthoWindowClass. This=20
class is just a 2D square model made out of two triangles. It allows you =
to size=20
it however you want and can then be used to render textures onto it. It =
can be=20
used for down sampling, up sampling, and just plain rendering 2D to the =
screen.=20
</FONT></P>
<P align=3D"left"><IMG width=3D"550" height=3D"228" =
src=3D"http://web.archive.org/web/20140722085257im_/http://rastertek.com/=
pic0177.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
will start the=20
code section with the HLSL horizontal blur shader. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Horizontalblur.vs</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: horizontalblur.vs=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
cbuffer MatrixBuffer=0A=
{=0A=
    matrix worldMatrix;=0A=
    matrix viewMatrix;=0A=
    matrix projectionMatrix;=0A=
};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">This =
shader requires=20
the width of the screen (or render to texture width) so it can determine =
the UV=20
location of the individual pixels in the texture (called texels). We =
store the=20
screen width in the following constant buffer.  The padding is used to =
keep it a=20
multiple of 16. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">cbuffer =
ScreenSizeBuffer=0A=
{=0A=
    float screenWidth;=0A=
    float3 padding;=0A=
};=0A=
=0A=
=0A=
//////////////=0A=
// TYPEDEFS //=0A=
//////////////=0A=
struct VertexInputType=0A=
{=0A=
    float4 position : POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
pixel input=20
structure contains the UV location of the center pixel and the four =
neighbor=20
pixels on either side of the pixel being processed. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">struct =
PixelInputType=0A=
{=0A=
    float4 position : SV_POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
    float2 texCoord1 : TEXCOORD1;=0A=
    float2 texCoord2 : TEXCOORD2;=0A=
    float2 texCoord3 : TEXCOORD3;=0A=
    float2 texCoord4 : TEXCOORD4;=0A=
    float2 texCoord5 : TEXCOORD5;=0A=
    float2 texCoord6 : TEXCOORD6;=0A=
    float2 texCoord7 : TEXCOORD7;=0A=
    float2 texCoord8 : TEXCOORD8;=0A=
    float2 texCoord9 : TEXCOORD9;=0A=
};=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Vertex Shader=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
PixelInputType HorizontalBlurVertexShader(VertexInputType input)=0A=
{=0A=
    PixelInputType output;=0A=
    float texelSize;=0A=
=0A=
=0A=
    // Change the position vector to be 4 units for proper matrix =
calculations.=0A=
    input.position.w =3D 1.0f;=0A=
=0A=
    // Calculate the position of the vertex against the world, view, and =
projection matrices.=0A=
    output.position =3D mul(input.position, worldMatrix);=0A=
    output.position =3D mul(output.position, viewMatrix);=0A=
    output.position =3D mul(output.position, projectionMatrix);=0A=
    =0A=
    // Store the texture coordinates for the pixel shader.=0A=
    output.tex =3D input.tex;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Here =
is where we=20
determine the texel size which is just one divided by the screen width =
(or=20
render to texture width).  With this value we can now determine the UV=20
coordinates of each horizontal neighbor pixel. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Determine =
the floating point size of a texel for a screen with this specific width.=0A=
    texelSize =3D 1.0f / screenWidth;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Here =
is where we=20
generate the UV coordinates for the center pixel and four neighbors on =
either=20
side.  We take the current texture coordinates and add the horizontal =
offset to=20
all nine coordinates.  The horizontal offset is the texel size =
multiplied by the=20
distance of the neighbor.  For example the neighbor that is 3 pixels to =
the left=20
is calculated by texelSize * -3.0f.  Note the vertical coordinate in the =
offset=20
is just zero so we don't move off the horizontal line we are sampling =
on.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Create UV =
coordinates for the pixel and its four horizontal neighbors on either =
side.=0A=
    output.texCoord1 =3D input.tex + float2(texelSize * -4.0f, 0.0f);=0A=
    output.texCoord2 =3D input.tex + float2(texelSize * -3.0f, 0.0f);=0A=
    output.texCoord3 =3D input.tex + float2(texelSize * -2.0f, 0.0f);=0A=
    output.texCoord4 =3D input.tex + float2(texelSize * -1.0f, 0.0f);=0A=
    output.texCoord5 =3D input.tex + float2(texelSize *  0.0f, 0.0f);=0A=
    output.texCoord6 =3D input.tex + float2(texelSize *  1.0f, 0.0f);=0A=
    output.texCoord7 =3D input.tex + float2(texelSize *  2.0f, 0.0f);=0A=
    output.texCoord8 =3D input.tex + float2(texelSize *  3.0f, 0.0f);=0A=
    output.texCoord9 =3D input.tex + float2(texelSize *  4.0f, 0.0f);=0A=
=0A=
    return output;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Horizontalblur.ps</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: horizontalblur.ps=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
shader texture=20
will be the input texture that we are blurring. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">Texture2D =
shaderTexture;=0A=
SamplerState SampleType;=0A=
=0A=
=0A=
//////////////=0A=
// TYPEDEFS //=0A=
//////////////=0A=
struct PixelInputType=0A=
{=0A=
    float4 position : SV_POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
    float2 texCoord1 : TEXCOORD1;=0A=
    float2 texCoord2 : TEXCOORD2;=0A=
    float2 texCoord3 : TEXCOORD3;=0A=
    float2 texCoord4 : TEXCOORD4;=0A=
    float2 texCoord5 : TEXCOORD5;=0A=
    float2 texCoord6 : TEXCOORD6;=0A=
    float2 texCoord7 : TEXCOORD7;=0A=
    float2 texCoord8 : TEXCOORD8;=0A=
    float2 texCoord9 : TEXCOORD9;=0A=
};=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Pixel Shader=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
float4 HorizontalBlurPixelShader(PixelInputType input) : SV_TARGET=0A=
{=0A=
    float weight0, weight1, weight2, weight3, weight4;=0A=
    float normalization;=0A=
    float4 color;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">As =
discussed in the=20
algorithm we determine the color of this pixel by averaging the eight =
total=20
neighbors and the center pixel.  However the value we use for each =
neighbor is=20
also modified by a weight.  The weights we use for this tutorial give =
the=20
closest neighbors a greater effect on the average than the more distant=20
neighbors. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Create the =
weights that each neighbor pixel will contribute to the blur.=0A=
    weight0 =3D 1.0f;=0A=
    weight1 =3D 0.9f;=0A=
    weight2 =3D 0.55f;=0A=
    weight3 =3D 0.18f;=0A=
    weight4 =3D 0.1f;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">With =
the weight=20
values set we will then normalize them to create a smoother transition =
in the=20
blur. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Create a =
normalized value to average the weights out a bit.=0A=
    normalization =3D (weight0 + 2.0f * (weight1 + weight2 + weight3 + =
weight4));=0A=
=0A=
    // Normalize the weights.=0A=
    weight0 =3D weight0 / normalization;=0A=
    weight1 =3D weight1 / normalization;=0A=
    weight2 =3D weight2 / normalization;=0A=
    weight3 =3D weight3 / normalization;=0A=
    weight4 =3D weight4 / normalization;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">To =
create the=20
blurred pixel we first set the color to black and then we add the center =
pixel=20
and the eight neighbors to the final color based on the weight of each.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Initialize =
the color to black.=0A=
    color =3D float4(0.0f, 0.0f, 0.0f, 0.0f);=0A=
=0A=
    // Add the nine horizontal pixels to the color by the specific =
weight of each.=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord1) * =
weight4;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord2) * =
weight3;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord3) * =
weight2;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord4) * =
weight1;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord5) * =
weight0;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord6) * =
weight1;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord7) * =
weight2;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord8) * =
weight3;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord9) * =
weight4;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Finally we set the=20
alpha value. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Set the =
alpha channel to one.=0A=
    color.a =3D 1.0f;=0A=
=0A=
    return color;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Horizontalblurshaderclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
HorizontalBlurShaderClass is just the TextureShaderClass modified to =
handle the=20
blur effect. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: horizontalblurshaderclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _HORIZONTALBLURSHADERCLASS_H_=0A=
#define _HORIZONTALBLURSHADERCLASS_H_=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
#include &lt;d3dx11async.h&gt;=0A=
#include &lt;fstream&gt;=0A=
using namespace std;=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: HorizontalBlurShaderClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class HorizontalBlurShaderClass=0A=
{=0A=
private:=0A=
	struct MatrixBufferType=0A=
	{=0A=
		D3DXMATRIX world;=0A=
		D3DXMATRIX view;=0A=
		D3DXMATRIX projection;=0A=
	};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
have a new=20
structure for the screen size constant buffer. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct =
ScreenSizeBufferType=0A=
	{=0A=
		float screenWidth;=0A=
		D3DXVECTOR3 padding;=0A=
	};=0A=
=0A=
public:=0A=
	HorizontalBlurShaderClass();=0A=
	HorizontalBlurShaderClass(const HorizontalBlurShaderClass&amp;);=0A=
	~HorizontalBlurShaderClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, HWND);=0A=
	void Shutdown();=0A=
	bool Render(ID3D11DeviceContext*, int, D3DXMATRIX, D3DXMATRIX, =
D3DXMATRIX, ID3D11ShaderResourceView*, float);=0A=
=0A=
private:=0A=
	bool InitializeShader(ID3D11Device*, HWND, WCHAR*, WCHAR*);=0A=
	void ShutdownShader();=0A=
	void OutputShaderErrorMessage(ID3D10Blob*, HWND, WCHAR*);=0A=
=0A=
	bool SetShaderParameters(ID3D11DeviceContext*, D3DXMATRIX, D3DXMATRIX, =
D3DXMATRIX, ID3D11ShaderResourceView*, float);=0A=
	void RenderShader(ID3D11DeviceContext*, int);=0A=
=0A=
private:=0A=
	ID3D11VertexShader* m_vertexShader;=0A=
	ID3D11PixelShader* m_pixelShader;=0A=
	ID3D11InputLayout* m_layout;=0A=
	ID3D11SamplerState* m_sampleState;=0A=
	ID3D11Buffer* m_matrixBuffer;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
major difference=20
between the HorizontalBlurShaderClass and the TextureShaderClass  header =
is that=20
we have a constant buffer that will be used for the screen width =
information=20
which is required for the horizontal blur shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	ID3D11Buffer* =
m_screenSizeBuffer;=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Horizontalblurshaderclass.cpp</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">I =
will make comments=20
on the areas of difference between the TextureShaderClass and the=20
HorizontalShaderClass as this  class is just a slightly changed version =
of the=20
original TextureShaderClass. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: horizontalblurshaderclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "horizontalblurshaderclass.h"=0A=
=0A=
=0A=
HorizontalBlurShaderClass::HorizontalBlurShaderClass()=0A=
{=0A=
	m_vertexShader =3D 0;=0A=
	m_pixelShader =3D 0;=0A=
	m_layout =3D 0;=0A=
	m_sampleState =3D 0;=0A=
	m_matrixBuffer =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the=20
screen size constant buffer to null in the class constructor. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	=
m_screenSizeBuffer =3D 0;=0A=
}=0A=
=0A=
=0A=
HorizontalBlurShaderClass::HorizontalBlurShaderClass(const =
HorizontalBlurShaderClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
HorizontalBlurShaderClass::~HorizontalBlurShaderClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool HorizontalBlurShaderClass::Initialize(ID3D11Device* device, HWND =
hwnd)=0A=
{=0A=
	bool result;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Load =
the=20
horizontalblur.vs and horizontalblur.ps HLSL shader programs. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Initialize =
the vertex and pixel shaders.=0A=
	result =3D InitializeShader(device, hwnd, =
L"../Engine/horizontalblur.vs", L"../Engine/horizontalblur.ps");=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void HorizontalBlurShaderClass::Shutdown()=0A=
{=0A=
	// Shutdown the vertex and pixel shaders as well as the related objects.=0A=
	ShutdownShader();=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Render function=20
takes the screen width (or possible render to texture width) as input =
and sets=20
it in the shader using the SetShaderParameters function. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
HorizontalBlurShaderClass::Render(ID3D11DeviceContext* deviceContext, =
int indexCount, D3DXMATRIX worldMatrix, D3DXMATRIX viewMatrix, =0A=
				       D3DXMATRIX projectionMatrix, ID3D11ShaderResourceView* =
texture, float screenWidth)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Set the shader parameters that it will use for rendering.=0A=
	result =3D SetShaderParameters(deviceContext, worldMatrix, viewMatrix, =
projectionMatrix, texture, screenWidth);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Now render the prepared buffers with the shader.=0A=
	RenderShader(deviceContext, indexCount);=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
bool HorizontalBlurShaderClass::InitializeShader(ID3D11Device* device, =
HWND hwnd, WCHAR* vsFilename, WCHAR* psFilename)=0A=
{=0A=
	HRESULT result;=0A=
	ID3D10Blob* errorMessage;=0A=
	ID3D10Blob* vertexShaderBuffer;=0A=
	ID3D10Blob* pixelShaderBuffer;=0A=
	D3D11_INPUT_ELEMENT_DESC polygonLayout[2];=0A=
	unsigned int numElements;=0A=
	D3D11_SAMPLER_DESC samplerDesc;=0A=
	D3D11_BUFFER_DESC matrixBufferDesc;=0A=
	D3D11_BUFFER_DESC screenSizeBufferDesc;=0A=
=0A=
=0A=
	// Initialize the pointers this function will use to null.=0A=
	errorMessage =3D 0;=0A=
	vertexShaderBuffer =3D 0;=0A=
	pixelShaderBuffer =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Load =
the horizontal=20
blur vertex shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Compile the =
vertex shader code.=0A=
	result =3D D3DX11CompileFromFile(vsFilename, NULL, NULL, =
"HorizontalBlurVertexShader", "vs_5_0", D3D10_SHADER_ENABLE_STRICTNESS, =
0, NULL, =0A=
				       &amp;vertexShaderBuffer, &amp;errorMessage, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		// If the shader failed to compile it should have writen something to =
the error message.=0A=
		if(errorMessage)=0A=
		{=0A=
			OutputShaderErrorMessage(errorMessage, hwnd, vsFilename);=0A=
		}=0A=
		// If there was nothing in the error message then it simply could not =
find the shader file itself.=0A=
		else=0A=
		{=0A=
			MessageBox(hwnd, vsFilename, L"Missing Shader File", MB_OK);=0A=
		}=0A=
=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Load =
the horizontal=20
blur pixel shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Compile the =
pixel shader code.=0A=
	result =3D D3DX11CompileFromFile(psFilename, NULL, NULL, =
"HorizontalBlurPixelShader", "ps_5_0", D3D10_SHADER_ENABLE_STRICTNESS, =
0, NULL, =0A=
				       &amp;pixelShaderBuffer, &amp;errorMessage, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		// If the shader failed to compile it should have writen something to =
the error message.=0A=
		if(errorMessage)=0A=
		{=0A=
			OutputShaderErrorMessage(errorMessage, hwnd, psFilename);=0A=
		}=0A=
		// If there was  nothing in the error message then it simply could not =
find the file itself.=0A=
		else=0A=
		{=0A=
			MessageBox(hwnd, psFilename, L"Missing Shader File", MB_OK);=0A=
		}=0A=
=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex shader from the buffer.=0A=
	result =3D =
device-&gt;CreateVertexShader(vertexShaderBuffer-&gt;GetBufferPointer(), =
vertexShaderBuffer-&gt;GetBufferSize(), NULL, &amp;m_vertexShader);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the pixel shader from the buffer.=0A=
	result =3D =
device-&gt;CreatePixelShader(pixelShaderBuffer-&gt;GetBufferPointer(), =
pixelShaderBuffer-&gt;GetBufferSize(), NULL, &amp;m_pixelShader);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex input layout description.=0A=
	// This setup needs to match the VertexType stucture in the ModelClass =
and in the shader.=0A=
	polygonLayout[0].SemanticName =3D "POSITION";=0A=
	polygonLayout[0].SemanticIndex =3D 0;=0A=
	polygonLayout[0].Format =3D DXGI_FORMAT_R32G32B32_FLOAT;=0A=
	polygonLayout[0].InputSlot =3D 0;=0A=
	polygonLayout[0].AlignedByteOffset =3D 0;=0A=
	polygonLayout[0].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[0].InstanceDataStepRate =3D 0;=0A=
=0A=
	polygonLayout[1].SemanticName =3D "TEXCOORD";=0A=
	polygonLayout[1].SemanticIndex =3D 0;=0A=
	polygonLayout[1].Format =3D DXGI_FORMAT_R32G32_FLOAT;=0A=
	polygonLayout[1].InputSlot =3D 0;=0A=
	polygonLayout[1].AlignedByteOffset =3D D3D11_APPEND_ALIGNED_ELEMENT;=0A=
	polygonLayout[1].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[1].InstanceDataStepRate =3D 0;=0A=
=0A=
	// Get a count of the elements in the layout.=0A=
	numElements =3D sizeof(polygonLayout) / sizeof(polygonLayout[0]);=0A=
=0A=
	// Create the vertex input layout.=0A=
	result =3D device-&gt;CreateInputLayout(polygonLayout, numElements, =
vertexShaderBuffer-&gt;GetBufferPointer(), =
vertexShaderBuffer-&gt;GetBufferSize(), =0A=
					   &amp;m_layout);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Release the vertex shader buffer and pixel shader buffer since they =
are no longer needed.=0A=
	vertexShaderBuffer-&gt;Release();=0A=
	vertexShaderBuffer =3D 0;=0A=
=0A=
	pixelShaderBuffer-&gt;Release();=0A=
	pixelShaderBuffer =3D 0;=0A=
=0A=
	// Create a texture sampler state description.=0A=
	samplerDesc.Filter =3D D3D11_FILTER_MIN_MAG_MIP_LINEAR;=0A=
	samplerDesc.AddressU =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.AddressV =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.AddressW =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.MipLODBias =3D 0.0f;=0A=
	samplerDesc.MaxAnisotropy =3D 1;=0A=
	samplerDesc.ComparisonFunc =3D D3D11_COMPARISON_ALWAYS;=0A=
	samplerDesc.BorderColor[0] =3D 0;=0A=
	samplerDesc.BorderColor[1] =3D 0;=0A=
	samplerDesc.BorderColor[2] =3D 0;=0A=
	samplerDesc.BorderColor[3] =3D 0;=0A=
	samplerDesc.MinLOD =3D 0;=0A=
	samplerDesc.MaxLOD =3D D3D11_FLOAT32_MAX;=0A=
=0A=
	// Create the texture sampler state.=0A=
	result =3D device-&gt;CreateSamplerState(&amp;samplerDesc, =
&amp;m_sampleState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Setup the description of the dynamic matrix constant buffer that is =
in the vertex shader.=0A=
	matrixBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	matrixBufferDesc.ByteWidth =3D sizeof(MatrixBufferType);=0A=
	matrixBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	matrixBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	matrixBufferDesc.MiscFlags =3D 0;=0A=
	matrixBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Create the constant buffer pointer so we can access the vertex =
shader constant buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;matrixBufferDesc, NULL, =
&amp;m_matrixBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
setup the screen=20
size constant buffer so we can access and modify the screen size buffer =
inside=20
the HLSL horizontal blur vertex shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Setup the =
description of the dynamic screen size constant buffer that is in the =
vertex shader.=0A=
	screenSizeBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	screenSizeBufferDesc.ByteWidth =3D sizeof(ScreenSizeBufferType);=0A=
	screenSizeBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	screenSizeBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	screenSizeBufferDesc.MiscFlags =3D 0;=0A=
	screenSizeBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Create the constant buffer pointer so we can access the vertex =
shader constant buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;screenSizeBufferDesc, NULL, =
&amp;m_screenSizeBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void HorizontalBlurShaderClass::ShutdownShader()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
screen size=20
constant buffer is released in the ShutdownShader function. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Release the =
screen size constant buffer.=0A=
	if(m_screenSizeBuffer)=0A=
	{=0A=
		m_screenSizeBuffer-&gt;Release();=0A=
		m_screenSizeBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the matrix constant buffer.=0A=
	if(m_matrixBuffer)=0A=
	{=0A=
		m_matrixBuffer-&gt;Release();=0A=
		m_matrixBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the sampler state.=0A=
	if(m_sampleState)=0A=
	{=0A=
		m_sampleState-&gt;Release();=0A=
		m_sampleState =3D 0;=0A=
	}=0A=
=0A=
	// Release the layout.=0A=
	if(m_layout)=0A=
	{=0A=
		m_layout-&gt;Release();=0A=
		m_layout =3D 0;=0A=
	}=0A=
=0A=
	// Release the pixel shader.=0A=
	if(m_pixelShader)=0A=
	{=0A=
		m_pixelShader-&gt;Release();=0A=
		m_pixelShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the vertex shader.=0A=
	if(m_vertexShader)=0A=
	{=0A=
		m_vertexShader-&gt;Release();=0A=
		m_vertexShader =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void HorizontalBlurShaderClass::OutputShaderErrorMessage(ID3D10Blob* =
errorMessage, HWND hwnd, WCHAR* shaderFilename)=0A=
{=0A=
	char* compileErrors;=0A=
	unsigned long bufferSize, i;=0A=
	ofstream fout;=0A=
=0A=
=0A=
	// Get a pointer to the error message text buffer.=0A=
	compileErrors =3D (char*)(errorMessage-&gt;GetBufferPointer());=0A=
=0A=
	// Get the length of the message.=0A=
	bufferSize =3D errorMessage-&gt;GetBufferSize();=0A=
=0A=
	// Open a file to write the error message to.=0A=
	fout.open("shader-error.txt");=0A=
=0A=
	// Write out the error message.=0A=
	for(i=3D0; i&lt;bufferSize; i++)=0A=
	{=0A=
		fout &lt;&lt; compileErrors[i];=0A=
	}=0A=
=0A=
	// Close the file.=0A=
	fout.close();=0A=
=0A=
	// Release the error message.=0A=
	errorMessage-&gt;Release();=0A=
	errorMessage =3D 0;=0A=
=0A=
	// Pop a message up on the screen to notify the user to check the text =
file for compile errors.=0A=
	MessageBox(hwnd, L"Error compiling shader.  Check shader-error.txt for =
message.", shaderFilename, MB_OK);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
SetShaderParameters function now takes as input the width of the screen =
or=20
render to texture.  It then sets the width in the shader using the =
screen size=20
constant buffer that was setup during initialization. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
HorizontalBlurShaderClass::SetShaderParameters(ID3D11DeviceContext* =
deviceContext, D3DXMATRIX worldMatrix, D3DXMATRIX viewMatrix, =0A=
						    D3DXMATRIX projectionMatrix, ID3D11ShaderResourceView* =
texture, float screenWidth)=0A=
{=0A=
	HRESULT result;=0A=
	D3D11_MAPPED_SUBRESOURCE mappedResource;=0A=
	MatrixBufferType* dataPtr;=0A=
	unsigned int bufferNumber;=0A=
	ScreenSizeBufferType* dataPtr2;=0A=
=0A=
=0A=
	// Transpose the matrices to prepare them for the shader.=0A=
	D3DXMatrixTranspose(&amp;worldMatrix, &amp;worldMatrix);=0A=
	D3DXMatrixTranspose(&amp;viewMatrix, &amp;viewMatrix);=0A=
	D3DXMatrixTranspose(&amp;projectionMatrix, &amp;projectionMatrix);=0A=
=0A=
	// Lock the matrix constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_matrixBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr =3D (MatrixBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the matrices into the constant buffer.=0A=
	dataPtr-&gt;world =3D worldMatrix;=0A=
	dataPtr-&gt;view =3D viewMatrix;=0A=
	dataPtr-&gt;projection =3D projectionMatrix;=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_matrixBuffer, 0);=0A=
=0A=
	// Set the position of the constant buffer in the vertex shader.=0A=
	bufferNumber =3D 0;=0A=
=0A=
	// Now set the constant buffer in the vertex shader with the updated =
values.=0A=
	deviceContext-&gt;VSSetConstantBuffers(bufferNumber, 1, =
&amp;m_matrixBuffer);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Here =
is where the=20
screen width is set in the screen size constant buffer. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Lock the =
screen size constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_screenSizeBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr2 =3D (ScreenSizeBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the data into the constant buffer.=0A=
	dataPtr2-&gt;screenWidth =3D screenWidth;=0A=
	dataPtr2-&gt;padding =3D D3DXVECTOR3(0.0f, 0.0f, 0.0f);=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_screenSizeBuffer, 0);=0A=
=0A=
	// Set the position of the constant buffer in the vertex shader.=0A=
	bufferNumber =3D 1;=0A=
=0A=
	// Now set the constant buffer in the vertex shader with the updated =
values.=0A=
	deviceContext-&gt;VSSetConstantBuffers(bufferNumber, 1, =
&amp;m_screenSizeBuffer);=0A=
=0A=
	// Set shader texture resource in the pixel shader.=0A=
	deviceContext-&gt;PSSetShaderResources(0, 1, &amp;texture);=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void HorizontalBlurShaderClass::RenderShader(ID3D11DeviceContext* =
deviceContext, int indexCount)=0A=
{=0A=
	// Set the vertex input layout.=0A=
	deviceContext-&gt;IASetInputLayout(m_layout);=0A=
=0A=
	// Set the vertex and pixel shaders that will be used to render this =
triangle.=0A=
	deviceContext-&gt;VSSetShader(m_vertexShader, NULL, 0);=0A=
	deviceContext-&gt;PSSetShader(m_pixelShader, NULL, 0);=0A=
=0A=
	// Set the sampler state in the pixel shader.=0A=
	deviceContext-&gt;PSSetSamplers(0, 1, &amp;m_sampleState);=0A=
=0A=
	// Render the triangle.=0A=
	deviceContext-&gt;DrawIndexed(indexCount, 0, 0);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Verticalblur.vs</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
vertical blur=20
HLSL program is the exact same as the horizontal blur shader except that =
it=20
deals with height instead of width. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: verticalblur.vs=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
cbuffer MatrixBuffer=0A=
{=0A=
    matrix worldMatrix;=0A=
    matrix viewMatrix;=0A=
    matrix projectionMatrix;=0A=
};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
vertical blur=20
shader requires the screen (or render to texture) height instead of =
width that=20
the horizontal blur shader used. Note the buffer is called the same as =
in the=20
horizontal shader but the height is used in the first variable instead =
of the=20
width. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">cbuffer =
ScreenSizeBuffer=0A=
{=0A=
    float screenHeight;=0A=
    float3 padding;=0A=
};=0A=
=0A=
=0A=
//////////////=0A=
// TYPEDEFS //=0A=
//////////////=0A=
struct VertexInputType=0A=
{=0A=
    float4 position : POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
};=0A=
=0A=
struct PixelInputType=0A=
{=0A=
    float4 position : SV_POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
    float2 texCoord1 : TEXCOORD1;=0A=
    float2 texCoord2 : TEXCOORD2;=0A=
    float2 texCoord3 : TEXCOORD3;=0A=
    float2 texCoord4 : TEXCOORD4;=0A=
    float2 texCoord5 : TEXCOORD5;=0A=
    float2 texCoord6 : TEXCOORD6;=0A=
    float2 texCoord7 : TEXCOORD7;=0A=
    float2 texCoord8 : TEXCOORD8;=0A=
    float2 texCoord9 : TEXCOORD9;=0A=
};=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Vertex Shader=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
PixelInputType VerticalBlurVertexShader(VertexInputType input)=0A=
{=0A=
    PixelInputType output;=0A=
    float texelSize;=0A=
=0A=
=0A=
    // Change the position vector to be 4 units for proper matrix =
calculations.=0A=
    input.position.w =3D 1.0f;=0A=
=0A=
    // Calculate the position of the vertex against the world, view, and =
projection matrices.=0A=
    output.position =3D mul(input.position, worldMatrix);=0A=
    output.position =3D mul(output.position, viewMatrix);=0A=
    output.position =3D mul(output.position, projectionMatrix);=0A=
    =0A=
    // Store the texture coordinates for the pixel shader.=0A=
    output.tex =3D input.tex;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
texel size is=20
based on the height value. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Determine =
the floating point size of a texel for a screen with this specific =
height.=0A=
    texelSize =3D 1.0f / screenHeight;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
offsets are=20
modified by only the height value, the width stays at its current value. =

</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Create UV =
coordinates for the pixel and its four vertical neighbors on either side.=0A=
    output.texCoord1 =3D input.tex + float2(0.0f, texelSize * -4.0f);=0A=
    output.texCoord2 =3D input.tex + float2(0.0f, texelSize * -3.0f);=0A=
    output.texCoord3 =3D input.tex + float2(0.0f, texelSize * -2.0f);=0A=
    output.texCoord4 =3D input.tex + float2(0.0f, texelSize * -1.0f);=0A=
    output.texCoord5 =3D input.tex + float2(0.0f, texelSize *  0.0f);=0A=
    output.texCoord6 =3D input.tex + float2(0.0f, texelSize *  1.0f);=0A=
    output.texCoord7 =3D input.tex + float2(0.0f, texelSize *  2.0f);=0A=
    output.texCoord8 =3D input.tex + float2(0.0f, texelSize *  3.0f);=0A=
    output.texCoord9 =3D input.tex + float2(0.0f, texelSize *  4.0f);=0A=
=0A=
    return output;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Verticalblur.ps</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: verticalblur.ps=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
Texture2D shaderTexture;=0A=
SamplerState SampleType;=0A=
=0A=
=0A=
//////////////=0A=
// TYPEDEFS //=0A=
//////////////=0A=
struct PixelInputType=0A=
{=0A=
    float4 position : SV_POSITION;=0A=
    float2 tex : TEXCOORD0;=0A=
    float2 texCoord1 : TEXCOORD1;=0A=
    float2 texCoord2 : TEXCOORD2;=0A=
    float2 texCoord3 : TEXCOORD3;=0A=
    float2 texCoord4 : TEXCOORD4;=0A=
    float2 texCoord5 : TEXCOORD5;=0A=
    float2 texCoord6 : TEXCOORD6;=0A=
    float2 texCoord7 : TEXCOORD7;=0A=
    float2 texCoord8 : TEXCOORD8;=0A=
    float2 texCoord9 : TEXCOORD9;=0A=
};=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Pixel Shader=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
float4 VerticalBlurPixelShader(PixelInputType input) : SV_TARGET=0A=
{=0A=
    float weight0, weight1, weight2, weight3, weight4;=0A=
    float normalization;=0A=
    float4 color;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
use the same=20
weighting system/values that the horizontal blur shader also used. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">    // Create the =
weights that each neighbor pixel will contribute to the blur.=0A=
    weight0 =3D 1.0f;=0A=
    weight1 =3D 0.9f;=0A=
    weight2 =3D 0.55f;=0A=
    weight3 =3D 0.18f;=0A=
    weight4 =3D 0.1f;=0A=
=0A=
    // Create a normalized value to average the weights out a bit.=0A=
    normalization =3D (weight0 + 2.0f * (weight1 + weight2 + weight3 + =
weight4));=0A=
=0A=
    // Normalize the weights.=0A=
    weight0 =3D weight0 / normalization;=0A=
    weight1 =3D weight1 / normalization;=0A=
    weight2 =3D weight2 / normalization;=0A=
    weight3 =3D weight3 / normalization;=0A=
    weight4 =3D weight4 / normalization;=0A=
=0A=
    // Initialize the color to black.=0A=
    color =3D float4(0.0f, 0.0f, 0.0f, 0.0f);=0A=
=0A=
    // Add the nine vertical pixels to the color by the specific weight =
of each.=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord1) * =
weight4;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord2) * =
weight3;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord3) * =
weight2;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord4) * =
weight1;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord5) * =
weight0;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord6) * =
weight1;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord7) * =
weight2;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord8) * =
weight3;=0A=
    color +=3D shaderTexture.Sample(SampleType, input.texCoord9) * =
weight4;=0A=
=0A=
    // Set the alpha channel to one.=0A=
    color.a =3D 1.0f;=0A=
=0A=
    return color;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Verticalblurshaderclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
VerticalBlurShaderClass is identical to the HorizontalBlurShaderClass =
except=20
that height is used instead of width. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: verticalblurshaderclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _VERTICALBLURSHADERCLASS_H_=0A=
#define _VERTICALBLURSHADERCLASS_H_=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
#include &lt;d3dx11async.h&gt;=0A=
#include &lt;fstream&gt;=0A=
using namespace std;=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: VerticalBlurShaderClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class VerticalBlurShaderClass=0A=
{=0A=
private:=0A=
	struct MatrixBufferType=0A=
	{=0A=
		D3DXMATRIX world;=0A=
		D3DXMATRIX view;=0A=
		D3DXMATRIX projection;=0A=
	};=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
ScreenSizeBufferType uses height instead of width which will be used in =
the HLSL=20
vertical blur shader to calculate texel size. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct =
ScreenSizeBufferType=0A=
	{=0A=
		float screenHeight;=0A=
		D3DXVECTOR3 padding;=0A=
	};=0A=
=0A=
public:=0A=
	VerticalBlurShaderClass();=0A=
	VerticalBlurShaderClass(const VerticalBlurShaderClass&amp;);=0A=
	~VerticalBlurShaderClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, HWND);=0A=
	void Shutdown();=0A=
	bool Render(ID3D11DeviceContext*, int, D3DXMATRIX, D3DXMATRIX, =
D3DXMATRIX, ID3D11ShaderResourceView*, float);=0A=
=0A=
private:=0A=
	bool InitializeShader(ID3D11Device*, HWND, WCHAR*, WCHAR*);=0A=
	void ShutdownShader();=0A=
	void OutputShaderErrorMessage(ID3D10Blob*, HWND, WCHAR*);=0A=
=0A=
	bool SetShaderParameters(ID3D11DeviceContext*, D3DXMATRIX, D3DXMATRIX, =
D3DXMATRIX, ID3D11ShaderResourceView*, float);=0A=
	void RenderShader(ID3D11DeviceContext*, int);=0A=
=0A=
private:=0A=
	ID3D11VertexShader* m_vertexShader;=0A=
	ID3D11PixelShader* m_pixelShader;=0A=
	ID3D11InputLayout* m_layout;=0A=
	ID3D11SamplerState* m_sampleState;=0A=
	ID3D11Buffer* m_matrixBuffer;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Just =
like the=20
HorizontalBlurShaderClass we use a buffer for the screen size constant =
buffer.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	ID3D11Buffer* =
m_screenSizeBuffer;=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Verticalblurshaderclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: verticalblurshaderclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "verticalblurshaderclass.h"=0A=
=0A=
=0A=
VerticalBlurShaderClass::VerticalBlurShaderClass()=0A=
{=0A=
	m_vertexShader =3D 0;=0A=
	m_pixelShader =3D 0;=0A=
	m_layout =3D 0;=0A=
	m_sampleState =3D 0;=0A=
	m_matrixBuffer =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the=20
screen size constant buffer to null in the class constructor. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	=
m_screenSizeBuffer =3D 0;=0A=
}=0A=
=0A=
=0A=
VerticalBlurShaderClass::VerticalBlurShaderClass(const =
VerticalBlurShaderClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
VerticalBlurShaderClass::~VerticalBlurShaderClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool VerticalBlurShaderClass::Initialize(ID3D11Device* device, HWND hwnd)=0A=
{=0A=
	bool result;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Load =
the vertical=20
blur HLSL program files.  </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Initialize =
the vertex and pixel shaders.=0A=
	result =3D InitializeShader(device, hwnd, L"../Engine/verticalblur.vs", =
L"../Engine/verticalblur.ps");=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void VerticalBlurShaderClass::Shutdown()=0A=
{=0A=
	// Shutdown the vertex and pixel shaders as well as the related objects.=0A=
	ShutdownShader();=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Render function=20
takes as input the screen height (or render to texture render height) =
for use in=20
the vertical blur shader to determine the vertical texel size. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
VerticalBlurShaderClass::Render(ID3D11DeviceContext* deviceContext, int =
indexCount, D3DXMATRIX worldMatrix, D3DXMATRIX viewMatrix, =0A=
				     D3DXMATRIX projectionMatrix, ID3D11ShaderResourceView* texture, =
float screenHeight)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Set the shader parameters that it will use for rendering.=0A=
	result =3D SetShaderParameters(deviceContext, worldMatrix, viewMatrix, =
projectionMatrix, texture, screenHeight);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Now render the prepared buffers with the shader.=0A=
	RenderShader(deviceContext, indexCount);=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
bool VerticalBlurShaderClass::InitializeShader(ID3D11Device* device, =
HWND hwnd, WCHAR* vsFilename, WCHAR* psFilename)=0A=
{=0A=
	HRESULT result;=0A=
	ID3D10Blob* errorMessage;=0A=
	ID3D10Blob* vertexShaderBuffer;=0A=
	ID3D10Blob* pixelShaderBuffer;=0A=
	D3D11_INPUT_ELEMENT_DESC polygonLayout[2];=0A=
	unsigned int numElements;=0A=
	D3D11_SAMPLER_DESC samplerDesc;=0A=
	D3D11_BUFFER_DESC matrixBufferDesc;=0A=
	D3D11_BUFFER_DESC screenSizeBufferDesc;=0A=
=0A=
=0A=
	// Initialize the pointers this function will use to null.=0A=
	errorMessage =3D 0;=0A=
	vertexShaderBuffer =3D 0;=0A=
	pixelShaderBuffer =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Load =
the vertical=20
blur vertex shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Compile the =
vertex shader code.=0A=
	result =3D D3DX11CompileFromFile(vsFilename, NULL, NULL, =
"VerticalBlurVertexShader", "vs_5_0", D3D10_SHADER_ENABLE_STRICTNESS, 0, =
NULL, =0A=
				       &amp;vertexShaderBuffer, &amp;errorMessage, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		// If the shader failed to compile it should have writen something to =
the error message.=0A=
		if(errorMessage)=0A=
		{=0A=
			OutputShaderErrorMessage(errorMessage, hwnd, vsFilename);=0A=
		}=0A=
		// If there was nothing in the error message then it simply could not =
find the shader file itself.=0A=
		else=0A=
		{=0A=
			MessageBox(hwnd, vsFilename, L"Missing Shader File", MB_OK);=0A=
		}=0A=
=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Load =
the vertical=20
blur pixel shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Compile the =
pixel shader code.=0A=
	result =3D D3DX11CompileFromFile(psFilename, NULL, NULL, =
"VerticalBlurPixelShader", "ps_5_0", D3D10_SHADER_ENABLE_STRICTNESS, 0, =
NULL, =0A=
				       &amp;pixelShaderBuffer, &amp;errorMessage, NULL);=0A=
	if(FAILED(result))=0A=
	{=0A=
		// If the shader failed to compile it should have writen something to =
the error message.=0A=
		if(errorMessage)=0A=
		{=0A=
			OutputShaderErrorMessage(errorMessage, hwnd, psFilename);=0A=
		}=0A=
		// If there was  nothing in the error message then it simply could not =
find the file itself.=0A=
		else=0A=
		{=0A=
			MessageBox(hwnd, psFilename, L"Missing Shader File", MB_OK);=0A=
		}=0A=
=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex shader from the buffer.=0A=
	result =3D =
device-&gt;CreateVertexShader(vertexShaderBuffer-&gt;GetBufferPointer(), =
vertexShaderBuffer-&gt;GetBufferSize(), NULL, &amp;m_vertexShader);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the pixel shader from the buffer.=0A=
	result =3D =
device-&gt;CreatePixelShader(pixelShaderBuffer-&gt;GetBufferPointer(), =
pixelShaderBuffer-&gt;GetBufferSize(), NULL, &amp;m_pixelShader);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the vertex input layout description.=0A=
	// This setup needs to match the VertexType stucture in the ModelClass =
and in the shader.=0A=
	polygonLayout[0].SemanticName =3D "POSITION";=0A=
	polygonLayout[0].SemanticIndex =3D 0;=0A=
	polygonLayout[0].Format =3D DXGI_FORMAT_R32G32B32_FLOAT;=0A=
	polygonLayout[0].InputSlot =3D 0;=0A=
	polygonLayout[0].AlignedByteOffset =3D 0;=0A=
	polygonLayout[0].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[0].InstanceDataStepRate =3D 0;=0A=
=0A=
	polygonLayout[1].SemanticName =3D "TEXCOORD";=0A=
	polygonLayout[1].SemanticIndex =3D 0;=0A=
	polygonLayout[1].Format =3D DXGI_FORMAT_R32G32_FLOAT;=0A=
	polygonLayout[1].InputSlot =3D 0;=0A=
	polygonLayout[1].AlignedByteOffset =3D D3D11_APPEND_ALIGNED_ELEMENT;=0A=
	polygonLayout[1].InputSlotClass =3D D3D11_INPUT_PER_VERTEX_DATA;=0A=
	polygonLayout[1].InstanceDataStepRate =3D 0;=0A=
=0A=
	// Get a count of the elements in the layout.=0A=
	numElements =3D sizeof(polygonLayout) / sizeof(polygonLayout[0]);=0A=
=0A=
	// Create the vertex input layout.=0A=
	result =3D device-&gt;CreateInputLayout(polygonLayout, numElements, =
vertexShaderBuffer-&gt;GetBufferPointer(), =
vertexShaderBuffer-&gt;GetBufferSize(), =0A=
					   &amp;m_layout);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Release the vertex shader buffer and pixel shader buffer since they =
are no longer needed.=0A=
	vertexShaderBuffer-&gt;Release();=0A=
	vertexShaderBuffer =3D 0;=0A=
=0A=
	pixelShaderBuffer-&gt;Release();=0A=
	pixelShaderBuffer =3D 0;=0A=
=0A=
	// Create a texture sampler state description.=0A=
	samplerDesc.Filter =3D D3D11_FILTER_MIN_MAG_MIP_LINEAR;=0A=
	samplerDesc.AddressU =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.AddressV =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.AddressW =3D D3D11_TEXTURE_ADDRESS_WRAP;=0A=
	samplerDesc.MipLODBias =3D 0.0f;=0A=
	samplerDesc.MaxAnisotropy =3D 1;=0A=
	samplerDesc.ComparisonFunc =3D D3D11_COMPARISON_ALWAYS;=0A=
	samplerDesc.BorderColor[0] =3D 0;=0A=
	samplerDesc.BorderColor[1] =3D 0;=0A=
	samplerDesc.BorderColor[2] =3D 0;=0A=
	samplerDesc.BorderColor[3] =3D 0;=0A=
	samplerDesc.MinLOD =3D 0;=0A=
	samplerDesc.MaxLOD =3D D3D11_FLOAT32_MAX;=0A=
=0A=
	// Create the texture sampler state.=0A=
	result =3D device-&gt;CreateSamplerState(&amp;samplerDesc, =
&amp;m_sampleState);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Setup the description of the dynamic matrix constant buffer that is =
in the vertex shader.=0A=
	matrixBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	matrixBufferDesc.ByteWidth =3D sizeof(MatrixBufferType);=0A=
	matrixBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	matrixBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	matrixBufferDesc.MiscFlags =3D 0;=0A=
	matrixBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Create the constant buffer pointer so we can access the vertex =
shader constant buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;matrixBufferDesc, NULL, =
&amp;m_matrixBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Here =
is where we=20
setup the buffer to access the global screen height variable inside the =
vertical=20
blur shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Setup the =
description of the dynamic screen size constant buffer that is in the =
vertex shader.=0A=
	screenSizeBufferDesc.Usage =3D D3D11_USAGE_DYNAMIC;=0A=
	screenSizeBufferDesc.ByteWidth =3D sizeof(ScreenSizeBufferType);=0A=
	screenSizeBufferDesc.BindFlags =3D D3D11_BIND_CONSTANT_BUFFER;=0A=
	screenSizeBufferDesc.CPUAccessFlags =3D D3D11_CPU_ACCESS_WRITE;=0A=
	screenSizeBufferDesc.MiscFlags =3D 0;=0A=
	screenSizeBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Create the constant buffer pointer so we can access the vertex =
shader constant buffer from within this class.=0A=
	result =3D device-&gt;CreateBuffer(&amp;screenSizeBufferDesc, NULL, =
&amp;m_screenSizeBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void VerticalBlurShaderClass::ShutdownShader()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
release the=20
screen size constant buffer in the ShutdownShader function. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Release the =
screen size constant buffer.=0A=
	if(m_screenSizeBuffer)=0A=
	{=0A=
		m_screenSizeBuffer-&gt;Release();=0A=
		m_screenSizeBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the matrix constant buffer.=0A=
	if(m_matrixBuffer)=0A=
	{=0A=
		m_matrixBuffer-&gt;Release();=0A=
		m_matrixBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the sampler state.=0A=
	if(m_sampleState)=0A=
	{=0A=
		m_sampleState-&gt;Release();=0A=
		m_sampleState =3D 0;=0A=
	}=0A=
=0A=
	// Release the layout.=0A=
	if(m_layout)=0A=
	{=0A=
		m_layout-&gt;Release();=0A=
		m_layout =3D 0;=0A=
	}=0A=
=0A=
	// Release the pixel shader.=0A=
	if(m_pixelShader)=0A=
	{=0A=
		m_pixelShader-&gt;Release();=0A=
		m_pixelShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the vertex shader.=0A=
	if(m_vertexShader)=0A=
	{=0A=
		m_vertexShader-&gt;Release();=0A=
		m_vertexShader =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
void VerticalBlurShaderClass::OutputShaderErrorMessage(ID3D10Blob* =
errorMessage, HWND hwnd, WCHAR* shaderFilename)=0A=
{=0A=
	char* compileErrors;=0A=
	unsigned long bufferSize, i;=0A=
	ofstream fout;=0A=
=0A=
=0A=
	// Get a pointer to the error message text buffer.=0A=
	compileErrors =3D (char*)(errorMessage-&gt;GetBufferPointer());=0A=
=0A=
	// Get the length of the message.=0A=
	bufferSize =3D errorMessage-&gt;GetBufferSize();=0A=
=0A=
	// Open a file to write the error message to.=0A=
	fout.open("shader-error.txt");=0A=
=0A=
	// Write out the error message.=0A=
	for(i=3D0; i&lt;bufferSize; i++)=0A=
	{=0A=
		fout &lt;&lt; compileErrors[i];=0A=
	}=0A=
=0A=
	// Close the file.=0A=
	fout.close();=0A=
=0A=
	// Release the error message.=0A=
	errorMessage-&gt;Release();=0A=
	errorMessage =3D 0;=0A=
=0A=
	// Pop a message up on the screen to notify the user to check the text =
file for compile errors.=0A=
	MessageBox(hwnd, L"Error compiling shader.  Check shader-error.txt for =
message.", shaderFilename, MB_OK);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
use the=20
SetShaderParameters function to set the screen height (as well as the =
other=20
variables) inside the HLSL shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
VerticalBlurShaderClass::SetShaderParameters(ID3D11DeviceContext* =
deviceContext, D3DXMATRIX worldMatrix, D3DXMATRIX viewMatrix, =0A=
						  D3DXMATRIX projectionMatrix, ID3D11ShaderResourceView* texture, =
float screenHeight)=0A=
{=0A=
	HRESULT result;=0A=
	D3D11_MAPPED_SUBRESOURCE mappedResource;=0A=
	MatrixBufferType* dataPtr;=0A=
	unsigned int bufferNumber;=0A=
	ScreenSizeBufferType* dataPtr2;=0A=
=0A=
=0A=
	// Transpose the matrices to prepare them for the shader.=0A=
	D3DXMatrixTranspose(&amp;worldMatrix, &amp;worldMatrix);=0A=
	D3DXMatrixTranspose(&amp;viewMatrix, &amp;viewMatrix);=0A=
	D3DXMatrixTranspose(&amp;projectionMatrix, &amp;projectionMatrix);=0A=
=0A=
	// Lock the matrix constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_matrixBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr =3D (MatrixBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the matrices into the constant buffer.=0A=
	dataPtr-&gt;world =3D worldMatrix;=0A=
	dataPtr-&gt;view =3D viewMatrix;=0A=
	dataPtr-&gt;projection =3D projectionMatrix;=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_matrixBuffer, 0);=0A=
=0A=
	// Set the position of the constant buffer in the vertex shader.=0A=
	bufferNumber =3D 0;=0A=
=0A=
	// Now set the constant buffer in the vertex shader with the updated =
values.=0A=
	deviceContext-&gt;VSSetConstantBuffers(bufferNumber, 1, =
&amp;m_matrixBuffer);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Here =
is where we set=20
the screen height in the constant buffer. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Lock the =
screen size constant buffer so it can be written to.=0A=
	result =3D deviceContext-&gt;Map(m_screenSizeBuffer, 0, =
D3D11_MAP_WRITE_DISCARD, 0, &amp;mappedResource);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Get a pointer to the data in the constant buffer.=0A=
	dataPtr2 =3D (ScreenSizeBufferType*)mappedResource.pData;=0A=
=0A=
	// Copy the data into the constant buffer.=0A=
	dataPtr2-&gt;screenHeight =3D screenHeight;=0A=
	dataPtr2-&gt;padding =3D D3DXVECTOR3(0.0f, 0.0f, 0.0f);=0A=
=0A=
	// Unlock the constant buffer.=0A=
	deviceContext-&gt;Unmap(m_screenSizeBuffer, 0);=0A=
=0A=
	// Set the position of the constant buffer in the vertex shader.=0A=
	bufferNumber =3D 1;=0A=
=0A=
	// Now set the constant buffer in the vertex shader with the updated =
values.=0A=
	deviceContext-&gt;VSSetConstantBuffers(bufferNumber, 1, =
&amp;m_screenSizeBuffer);=0A=
=0A=
	// Set shader texture resource in the pixel shader.=0A=
	deviceContext-&gt;PSSetShaderResources(0, 1, &amp;texture);=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void VerticalBlurShaderClass::RenderShader(ID3D11DeviceContext* =
deviceContext, int indexCount)=0A=
{=0A=
	// Set the vertex input layout.=0A=
	deviceContext-&gt;IASetInputLayout(m_layout);=0A=
=0A=
	// Set the vertex and pixel shaders that will be used to render this =
triangle.=0A=
	deviceContext-&gt;VSSetShader(m_vertexShader, NULL, 0);=0A=
	deviceContext-&gt;PSSetShader(m_pixelShader, NULL, 0);=0A=
=0A=
	// Set the sampler state in the pixel shader.=0A=
	deviceContext-&gt;PSSetSamplers(0, 1, &amp;m_sampleState);=0A=
=0A=
	// Render the triangle.=0A=
	deviceContext-&gt;DrawIndexed(indexCount, 0, 0);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Orthowindowclass.h</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
OrthoWindowClass=20
is the 3D model of a flat square window made up of two triangles that  =
we use=20
for 2D rendering for things such as render to texture or 2D graphics.  =
It uses=20
the prefix ortho since we are projecting the 3D coordinates of the =
square into a=20
two dimensional space (the 2D screen).  This can be used to be a full =
screen=20
window or a smaller window depending on the size it is initialized at.  =
Most of=20
the code and structure is identical to the ModelClass that we usually =
use.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: orthowindowclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _ORTHOWINDOWCLASS_H_=0A=
#define _ORTHOWINDOWCLASS_H_=0A=
=0A=
=0A=
//////////////=0A=
// INCLUDES //=0A=
//////////////=0A=
#include &lt;d3d11.h&gt;=0A=
#include &lt;d3dx10math.h&gt;=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: OrthoWindowClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class OrthoWindowClass=0A=
{=0A=
private:=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
vertex type only=20
requires position and texture coordinates, no normal vectors are needed. =

</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	struct VertexType=0A=
	{=0A=
		D3DXVECTOR3 position;=0A=
		D3DXVECTOR2 texture;=0A=
	};=0A=
=0A=
public:=0A=
	OrthoWindowClass();=0A=
	OrthoWindowClass(const OrthoWindowClass&amp;);=0A=
	~OrthoWindowClass();=0A=
=0A=
	bool Initialize(ID3D11Device*, int, int);=0A=
	void Shutdown();=0A=
	void Render(ID3D11DeviceContext*);=0A=
=0A=
	int GetIndexCount();=0A=
=0A=
private:=0A=
	bool InitializeBuffers(ID3D11Device*, int, int);=0A=
	void ShutdownBuffers();=0A=
	void RenderBuffers(ID3D11DeviceContext*);=0A=
=0A=
private:=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
OrthoWindowClass=20
uses a vertex and index buffer just like regular three dimensional =
models do.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	ID3D11Buffer =
*m_vertexBuffer, *m_indexBuffer;=0A=
	int m_vertexCount, m_indexCount;=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Orthowindowclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: orthowindowclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "orthowindowclass.h"=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the=20
vertex and index buffer pointers to null in the class constructor. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">OrthoWindowClass::OrthoWindowClass()=0A=
{=0A=
	m_vertexBuffer =3D 0;=0A=
	m_indexBuffer =3D 0;=0A=
}=0A=
=0A=
=0A=
OrthoWindowClass::OrthoWindowClass(const OrthoWindowClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
OrthoWindowClass::~OrthoWindowClass()=0A=
{=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Initialize=20
function takes as input the width and height for creating the size of =
the 2D=20
window and then calls InitializeBuffers with those parameters. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
OrthoWindowClass::Initialize(ID3D11Device* device, int windowWidth, int =
windowHeight)=0A=
{=0A=
	bool result;=0A=
=0A=
=0A=
	// Initialize the vertex and index buffer that hold the geometry for =
the ortho window model.=0A=
	result =3D InitializeBuffers(device, windowWidth, windowHeight);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Shutdown=20
function just calls the ShutdownBuffers function to release the vertex =
and index=20
buffers when we are done using this object. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
OrthoWindowClass::Shutdown()=0A=
{=0A=
	// Release the vertex and index buffers.=0A=
	ShutdownBuffers();=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Render function=20
calls the RenderBuffers function to draw the 2D window to the screen.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
OrthoWindowClass::Render(ID3D11DeviceContext* deviceContext)=0A=
{=0A=
	// Put the vertex and index buffers on the graphics pipeline to prepare =
them for drawing.=0A=
	RenderBuffers(deviceContext);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">GetIndexCount=20
returns the index count to shaders that will be rendering this 2D window =
model.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">int =
OrthoWindowClass::GetIndexCount()=0A=
{=0A=
	return m_indexCount;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The=20
InitializeBuffers function is where we setup the vertex and index =
buffers for=20
the 2D window using the width and height inputs. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
OrthoWindowClass::InitializeBuffers(ID3D11Device* device, int =
windowWidth, int windowHeight)=0A=
{=0A=
	float left, right, top, bottom;=0A=
	VertexType* vertices;=0A=
	unsigned long* indices;=0A=
	D3D11_BUFFER_DESC vertexBufferDesc, indexBufferDesc;=0A=
	D3D11_SUBRESOURCE_DATA vertexData, indexData;=0A=
	HRESULT result;=0A=
	int i;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">As =
with all 2D=20
rendering we need to figure out the left, right, top, and bottom =
coordinates of=20
the 2D window using the screen dimensions  and accounting for the fact =
that the=20
middle of the screen is the 0,0 coordinate. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Calculate the =
screen coordinates of the left side of the window.=0A=
	left =3D (float)((windowWidth / 2) * -1);=0A=
=0A=
	// Calculate the screen coordinates of the right side of the window.=0A=
	right =3D left + (float)windowWidth;=0A=
=0A=
	// Calculate the screen coordinates of the top of the window.=0A=
	top =3D (float)(windowHeight / 2);=0A=
=0A=
	// Calculate the screen coordinates of the bottom of the window.=0A=
	bottom =3D top - (float)windowHeight;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Next =
we manually set=20
the vertex and index count. Since the 2D window is composed of two =
triangles it=20
will have six vertices and six indices. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Set the =
number of vertices in the vertex array.=0A=
	m_vertexCount =3D 6;=0A=
=0A=
	// Set the number of indices in the index array.=0A=
	m_indexCount =3D m_vertexCount;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create the temporary=20
vertex and index arrays for storing the 2D window model data. =
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Create the =
vertex array.=0A=
	vertices =3D new VertexType[m_vertexCount];=0A=
	if(!vertices)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the index array.=0A=
	indices =3D new unsigned long[m_indexCount];=0A=
	if(!indices)=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Store the vertices=20
and indices of the 2D window in the vertex and index array. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Load the =
vertex array with data.=0A=
	// First triangle.=0A=
	vertices[0].position =3D D3DXVECTOR3(left, top, 0.0f);  // Top left.=0A=
	vertices[0].texture =3D D3DXVECTOR2(0.0f, 0.0f);=0A=
=0A=
	vertices[1].position =3D D3DXVECTOR3(right, bottom, 0.0f);  // Bottom =
right.=0A=
	vertices[1].texture =3D D3DXVECTOR2(1.0f, 1.0f);=0A=
=0A=
	vertices[2].position =3D D3DXVECTOR3(left, bottom, 0.0f);  // Bottom =
left.=0A=
	vertices[2].texture =3D D3DXVECTOR2(0.0f, 1.0f);=0A=
=0A=
	// Second triangle.=0A=
	vertices[3].position =3D D3DXVECTOR3(left, top, 0.0f);  // Top left.=0A=
	vertices[3].texture =3D D3DXVECTOR2(0.0f, 0.0f);=0A=
=0A=
	vertices[4].position =3D D3DXVECTOR3(right, top, 0.0f);  // Top right.=0A=
	vertices[4].texture =3D D3DXVECTOR2(1.0f, 0.0f);=0A=
=0A=
	vertices[5].position =3D D3DXVECTOR3(right, bottom, 0.0f);  // Bottom =
right.=0A=
	vertices[5].texture =3D D3DXVECTOR2(1.0f, 1.0f);=0A=
=0A=
	// Load the index array with data.=0A=
	for(i=3D0; i&lt;m_indexCount; i++)=0A=
	{=0A=
		indices[i] =3D i;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Now =
create the=20
vertex and index buffers using the prepared vertex and index arrays. =
Note they=20
are not created dynamic since the size will not be changing. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Set up the =
description of the vertex buffer.=0A=
	vertexBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
	vertexBufferDesc.ByteWidth =3D sizeof(VertexType) * m_vertexCount;=0A=
	vertexBufferDesc.BindFlags =3D D3D11_BIND_VERTEX_BUFFER;=0A=
	vertexBufferDesc.CPUAccessFlags =3D 0;=0A=
	vertexBufferDesc.MiscFlags =3D 0;=0A=
	vertexBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Give the subresource structure a pointer to the vertex data.=0A=
	vertexData.pSysMem =3D vertices;=0A=
	vertexData.SysMemPitch =3D 0;=0A=
	vertexData.SysMemSlicePitch =3D 0;=0A=
=0A=
	// Now finally create the vertex buffer.=0A=
	result =3D device-&gt;CreateBuffer(&amp;vertexBufferDesc, =
&amp;vertexData, &amp;m_vertexBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Set up the description of the index buffer.=0A=
	indexBufferDesc.Usage =3D D3D11_USAGE_DEFAULT;=0A=
	indexBufferDesc.ByteWidth =3D sizeof(unsigned long) * m_indexCount;=0A=
	indexBufferDesc.BindFlags =3D D3D11_BIND_INDEX_BUFFER;=0A=
	indexBufferDesc.CPUAccessFlags =3D 0;=0A=
	indexBufferDesc.MiscFlags =3D 0;=0A=
	indexBufferDesc.StructureByteStride =3D 0;=0A=
=0A=
	// Give the subresource structure a pointer to the index data.=0A=
	indexData.pSysMem =3D indices;=0A=
	indexData.SysMemPitch =3D 0;=0A=
	indexData.SysMemSlicePitch =3D 0;=0A=
=0A=
	// Create the index buffer.=0A=
	result =3D device-&gt;CreateBuffer(&amp;indexBufferDesc, =
&amp;indexData, &amp;m_indexBuffer);=0A=
	if(FAILED(result))=0A=
	{=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Release the vertex=20
and index arrays now that the vertex and index buffers have been =
created.=20
</FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">	// Release the =
arrays now that the vertex and index buffers have been created and =
loaded.=0A=
	delete [] vertices;=0A=
	vertices =3D 0;=0A=
=0A=
	delete [] indices;=0A=
	indices =3D 0;=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
ShutdownBuffers=20
function is used for releasing the vertex and index buffers once we done =
are=20
using them. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
OrthoWindowClass::ShutdownBuffers()=0A=
{=0A=
	// Release the index buffer.=0A=
	if(m_indexBuffer)=0A=
	{=0A=
		m_indexBuffer-&gt;Release();=0A=
		m_indexBuffer =3D 0;=0A=
	}=0A=
=0A=
	// Release the vertex buffer.=0A=
	if(m_vertexBuffer)=0A=
	{=0A=
		m_vertexBuffer-&gt;Release();=0A=
		m_vertexBuffer =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">RenderBuffers sets=20
the vertex and index of this OrthoWindowClass as the data that should be =

rendered by the shader. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">void =
OrthoWindowClass::RenderBuffers(ID3D11DeviceContext* deviceContext)=0A=
{=0A=
	unsigned int stride;=0A=
	unsigned int offset;=0A=
=0A=
=0A=
	// Set vertex buffer stride and offset.=0A=
	stride =3D sizeof(VertexType); =0A=
	offset =3D 0;=0A=
    =0A=
	// Set the vertex buffer to active in the input assembler so it can be =
rendered.=0A=
	deviceContext-&gt;IASetVertexBuffers(0, 1, &amp;m_vertexBuffer, =
&amp;stride, &amp;offset);=0A=
=0A=
	// Set the index buffer to active in the input assembler so it can be =
rendered.=0A=
	deviceContext-&gt;IASetIndexBuffer(m_indexBuffer, DXGI_FORMAT_R32_UINT, =
0);=0A=
=0A=
	// Set the type of primitive that should be rendered from this vertex =
buffer, in this case triangles.=0A=
	=
deviceContext-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGL=
ELIST);=0A=
=0A=
	return;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Graphicsclass.h</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: graphicsclass.h=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#ifndef _GRAPHICSCLASS_H_=0A=
#define _GRAPHICSCLASS_H_=0A=
=0A=
=0A=
///////////////////////=0A=
// MY CLASS INCLUDES //=0A=
///////////////////////=0A=
#include "d3dclass.h"=0A=
#include "cameraclass.h"=0A=
#include "modelclass.h"=0A=
#include "textureshaderclass.h"=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
now include the=20
two new blur shaders as well as both the render to texture and ortho =
window=20
class headers in the GraphicsClass header. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">#include =
"horizontalblurshaderclass.h"=0A=
#include "verticalblurshaderclass.h"=0A=
#include "rendertextureclass.h"=0A=
#include "orthowindowclass.h"</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
=0A=
=0A=
/////////////=0A=
// GLOBALS //=0A=
/////////////=0A=
const bool FULL_SCREEN =3D true;=0A=
const bool VSYNC_ENABLED =3D true;=0A=
const float SCREEN_DEPTH =3D 1000.0f;=0A=
const float SCREEN_NEAR =3D 0.1f;=0A=
=0A=
=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
// Class name: GraphicsClass=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
class GraphicsClass=0A=
{=0A=
public:=0A=
	GraphicsClass();=0A=
	GraphicsClass(const GraphicsClass&amp;);=0A=
	~GraphicsClass();=0A=
=0A=
	bool Initialize(int, int, HWND);=0A=
	void Shutdown();=0A=
	bool Frame();=0A=
=0A=
private:=0A=
	bool Render(float);=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">You =
will notice I=20
have quite a few new functions in the GraphicsClass.  The reason for =
this is=20
that I wanted to separate the rendering into logical steps just like the =

algorithm for ease of understanding the tutorial.  You of course can =
optimize=20
this in your own project. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	bool =
RenderSceneToTexture(float);=0A=
	bool DownSampleTexture();=0A=
	bool RenderHorizontalBlurToTexture();=0A=
	bool RenderVerticalBlurToTexture();=0A=
	bool UpSampleTexture();=0A=
	bool Render2DTextureScene();</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
=0A=
private:=0A=
	D3DClass* m_D3D;=0A=
	CameraClass* m_Camera;=0A=
	ModelClass* m_Model;=0A=
	TextureShaderClass* m_TextureShader;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
two new shaders=20
are defined here as private class objects.  </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
HorizontalBlurShaderClass* m_HorizontalBlurShader;=0A=
	VerticalBlurShaderClass* m_VerticalBlurShader;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
have a number of=20
render to texture objects defined here.  Once again I did this so each =
step of=20
the algorithm gets drawn to its own texture. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
RenderTextureClass *m_RenderTexture, *m_DownSampleTexure, =
*m_HorizontalBlurTexture, *m_VerticalBlurTexture, *m_UpSampleTexure;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">There are two 2D=20
windows we need to use for this tutorial.  The full screen window is for =
drawing=20
to the entire screen.  The small window is for down sampling to a =
smaller=20
window/texture. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	OrthoWindowClass =
*m_SmallWindow, *m_FullScreenWindow;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
};=0A=
=0A=
#endif=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Graphicsclass.cpp</U></FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">//////////////////////////////////////////////////////////////=
//////////////////=0A=
// Filename: graphicsclass.cpp=0A=
/////////////////////////////////////////////////////////////////////////=
///////=0A=
#include "graphicsclass.h"=0A=
=0A=
=0A=
GraphicsClass::GraphicsClass()=0A=
{=0A=
	m_D3D =3D 0;=0A=
	m_Camera =3D 0;=0A=
	m_Model =3D 0;=0A=
	m_TextureShader =3D 0;=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Initialize the new=20
shaders, render to textures, and ortho windows to null in the class =
constructor.=20
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	=
m_HorizontalBlurShader =3D 0;=0A=
	m_VerticalBlurShader =3D 0;=0A=
	m_RenderTexture =3D 0;=0A=
	m_DownSampleTexure =3D 0;=0A=
	m_HorizontalBlurTexture =3D 0;=0A=
	m_VerticalBlurTexture =3D 0;=0A=
	m_UpSampleTexure =3D 0;=0A=
	m_SmallWindow =3D 0;=0A=
	m_FullScreenWindow =3D 0;</FONT><FONT color=3D"#aaffaa" face=3D"arial" =
size=3D"2">=0A=
}=0A=
=0A=
=0A=
GraphicsClass::GraphicsClass(const GraphicsClass&amp; other)=0A=
{=0A=
}=0A=
=0A=
=0A=
GraphicsClass::~GraphicsClass()=0A=
{=0A=
}=0A=
=0A=
=0A=
bool GraphicsClass::Initialize(int screenWidth, int screenHeight, HWND =
hwnd)=0A=
{=0A=
	bool result;</FONT><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">=0A=
	int downSampleWidth, downSampleHeight;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">Here =
I define the=20
down sample size before getting started with the initialization.  The =
render to=20
textures and ortho window used for down sampling and blurring will =
receive these=20
values as input.  I set the values to half the size of the screen, you =
can of=20
course set them to different values to see the different results that =
you get=20
from doing so.  These values also greatly affect the speed that this =
blur effect=20
will run at. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Set the size =
to sample down to.=0A=
	downSampleWidth =3D screenWidth / 2;=0A=
	downSampleHeight =3D screenHeight / 2;</FONT><FONT color=3D"#aaffaa" =
face=3D"arial" size=3D"2">=0A=
=0A=
	// Create the Direct3D object.=0A=
	m_D3D =3D new D3DClass;=0A=
	if(!m_D3D)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the Direct3D object.=0A=
	result =3D m_D3D-&gt;Initialize(screenWidth, screenHeight, =
VSYNC_ENABLED, hwnd, FULL_SCREEN, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize Direct3D.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the camera object.=0A=
	m_Camera =3D new CameraClass;=0A=
	if(!m_Camera)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Set the initial position of the camera.=0A=
	m_Camera-&gt;SetPosition(0.0f, 0.0f, -10.0f);=0A=
	=0A=
	// Create the model object.=0A=
	m_Model =3D new ModelClass;=0A=
	if(!m_Model)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the model object.=0A=
	result =3D m_Model-&gt;Initialize(m_D3D-&gt;GetDevice(), =
"../Engine/data/cube.txt", L"../Engine/data/seafloor.dds");=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the model object.", L"Error", =
MB_OK);=0A=
		return false;=0A=
	}=0A=
=0A=
	// Create the texture shader object.=0A=
	m_TextureShader =3D new TextureShaderClass;=0A=
	if(!m_TextureShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the texture shader object.=0A=
	result =3D m_TextureShader-&gt;Initialize(m_D3D-&gt;GetDevice(), hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the texture shader object.", =
L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the horizontal blur shader. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
horizontal blur shader object.=0A=
	m_HorizontalBlurShader =3D new HorizontalBlurShaderClass;=0A=
	if(!m_HorizontalBlurShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the horizontal blur shader object.=0A=
	result =3D m_HorizontalBlurShader-&gt;Initialize(m_D3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the horizontal blur shader =
object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the vertical blur shader. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
vertical blur shader object.=0A=
	m_VerticalBlurShader =3D new VerticalBlurShaderClass;=0A=
	if(!m_VerticalBlurShader)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the vertical blur shader object.=0A=
	result =3D m_VerticalBlurShader-&gt;Initialize(m_D3D-&gt;GetDevice(), =
hwnd);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the vertical blur shader =
object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the full screen render to texture object. Use the full screen =
size as=20
input. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
render to texture object.=0A=
	m_RenderTexture =3D new RenderTextureClass;=0A=
	if(!m_RenderTexture)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the render to texture object.=0A=
	result =3D m_RenderTexture-&gt;Initialize(m_D3D-&gt;GetDevice(), =
screenWidth, screenHeight, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the render to texture =
object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the down sampled render to texture object. Use the down =
sample size=20
as input. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
down sample render to texture object.=0A=
	m_DownSampleTexure =3D new RenderTextureClass;=0A=
	if(!m_DownSampleTexure)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the down sample render to texture object.=0A=
	result =3D m_DownSampleTexure-&gt;Initialize(m_D3D-&gt;GetDevice(), =
downSampleWidth, downSampleHeight, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the down sample render to =
texture object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the render to texture for the horizontal blur to be rendered =
to. Use=20
the down sample size as input. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
horizontal blur render to texture object.=0A=
	m_HorizontalBlurTexture =3D new RenderTextureClass;=0A=
	if(!m_HorizontalBlurTexture)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the horizontal blur render to texture object.=0A=
	result =3D =
m_HorizontalBlurTexture-&gt;Initialize(m_D3D-&gt;GetDevice(), =
downSampleWidth, downSampleHeight, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the horizontal blur render to =
texture object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the render to texture for the vertical blur to be rendered =
to. Use=20
the down sample size as input. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
vertical blur render to texture object.=0A=
	m_VerticalBlurTexture =3D new RenderTextureClass;=0A=
	if(!m_VerticalBlurTexture)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the vertical blur render to texture object.=0A=
	result =3D m_VerticalBlurTexture-&gt;Initialize(m_D3D-&gt;GetDevice(), =
downSampleWidth, downSampleHeight, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the vertical blur render to =
texture object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the up sampled render to texture object. Use the full screen =
size as=20
input. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the up =
sample render to texture object.=0A=
	m_UpSampleTexure =3D new RenderTextureClass;=0A=
	if(!m_UpSampleTexure)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the up sample render to texture object.=0A=
	result =3D m_UpSampleTexure-&gt;Initialize(m_D3D-&gt;GetDevice(), =
screenWidth, screenHeight, SCREEN_DEPTH, SCREEN_NEAR);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the up sample render to =
texture object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the small 2D window model for down sampling and rendering the =
full=20
scene render to texture onto. Use the down sample size as input. =
</FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
small ortho window object.=0A=
	m_SmallWindow =3D new OrthoWindowClass;=0A=
	if(!m_SmallWindow)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the small ortho window object.=0A=
	result =3D m_SmallWindow-&gt;Initialize(m_D3D-&gt;GetDevice(), =
downSampleWidth, downSampleHeight);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the small ortho window =
object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Create and=20
initialize the full screen 2D window model for rendering textures full =
screen.=20
Use the full screen size as input. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Create the =
full screen ortho window object.=0A=
	m_FullScreenWindow =3D new OrthoWindowClass;=0A=
	if(!m_FullScreenWindow)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Initialize the full screen ortho window object.=0A=
	result =3D m_FullScreenWindow-&gt;Initialize(m_D3D-&gt;GetDevice(), =
screenWidth, screenHeight);=0A=
	if(!result)=0A=
	{=0A=
		MessageBox(hwnd, L"Could not initialize the full screen ortho window =
object.", L"Error", MB_OK);=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	return true;=0A=
}=0A=
=0A=
=0A=
void GraphicsClass::Shutdown()=0A=
{=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">We =
use the Shutdown=20
function to release all the new shader, render to texture, and ortho =
window=20
objects that were created  in the Initialize function when the =
application is=20
finished running. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">	// Release the =
full screen ortho window object.=0A=
	if(m_FullScreenWindow)=0A=
	{=0A=
		m_FullScreenWindow-&gt;Shutdown();=0A=
		delete m_FullScreenWindow;=0A=
		m_FullScreenWindow =3D 0;=0A=
	}=0A=
=0A=
	// Release the small ortho window object.=0A=
	if(m_SmallWindow)=0A=
	{=0A=
		m_SmallWindow-&gt;Shutdown();=0A=
		delete m_SmallWindow;=0A=
		m_SmallWindow =3D 0;=0A=
	}=0A=
	=0A=
	// Release the up sample render to texture object.=0A=
	if(m_UpSampleTexure)=0A=
	{=0A=
		m_UpSampleTexure-&gt;Shutdown();=0A=
		delete m_UpSampleTexure;=0A=
		m_UpSampleTexure =3D 0;=0A=
	}=0A=
=0A=
	// Release the vertical blur render to texture object.=0A=
	if(m_VerticalBlurTexture)=0A=
	{=0A=
		m_VerticalBlurTexture-&gt;Shutdown();=0A=
		delete m_VerticalBlurTexture;=0A=
		m_VerticalBlurTexture =3D 0;=0A=
	}=0A=
=0A=
	// Release the horizontal blur render to texture object.=0A=
	if(m_HorizontalBlurTexture)=0A=
	{=0A=
		m_HorizontalBlurTexture-&gt;Shutdown();=0A=
		delete m_HorizontalBlurTexture;=0A=
		m_HorizontalBlurTexture =3D 0;=0A=
	}=0A=
=0A=
	// Release the down sample render to texture object.=0A=
	if(m_DownSampleTexure)=0A=
	{=0A=
		m_DownSampleTexure-&gt;Shutdown();=0A=
		delete m_DownSampleTexure;=0A=
		m_DownSampleTexure =3D 0;=0A=
	}=0A=
	=0A=
	// Release the render to texture object.=0A=
	if(m_RenderTexture)=0A=
	{=0A=
		m_RenderTexture-&gt;Shutdown();=0A=
		delete m_RenderTexture;=0A=
		m_RenderTexture =3D 0;=0A=
	}=0A=
	=0A=
	// Release the vertical blur shader object.=0A=
	if(m_VerticalBlurShader)=0A=
	{=0A=
		m_VerticalBlurShader-&gt;Shutdown();=0A=
		delete m_VerticalBlurShader;=0A=
		m_VerticalBlurShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the horizontal blur shader object.=0A=
	if(m_HorizontalBlurShader)=0A=
	{=0A=
		m_HorizontalBlurShader-&gt;Shutdown();=0A=
		delete m_HorizontalBlurShader;=0A=
		m_HorizontalBlurShader =3D 0;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	// Release the texture shader object.=0A=
	if(m_TextureShader)=0A=
	{=0A=
		m_TextureShader-&gt;Shutdown();=0A=
		delete m_TextureShader;=0A=
		m_TextureShader =3D 0;=0A=
	}=0A=
=0A=
	// Release the model object.=0A=
	if(m_Model)=0A=
	{=0A=
		m_Model-&gt;Shutdown();=0A=
		delete m_Model;=0A=
		m_Model =3D 0;=0A=
	}=0A=
=0A=
	// Release the camera object.=0A=
	if(m_Camera)=0A=
	{=0A=
		delete m_Camera;=0A=
		m_Camera =3D 0;=0A=
	}=0A=
=0A=
	// Release the D3D object.=0A=
	if(m_D3D)=0A=
	{=0A=
		m_D3D-&gt;Shutdown();=0A=
		delete m_D3D;=0A=
		m_D3D =3D 0;=0A=
	}=0A=
=0A=
	return;=0A=
}=0A=
=0A=
=0A=
bool GraphicsClass::Frame()=0A=
{=0A=
	bool result;=0A=
	static float rotation =3D 0.0f;=0A=
=0A=
=0A=
	// Update the rotation variable each frame.=0A=
	rotation +=3D (float)D3DX_PI * 0.005f;=0A=
	if(rotation &gt; 360.0f)=0A=
	{=0A=
		rotation -=3D 360.0f;=0A=
	}=0A=
=0A=
	// Render the graphics scene.=0A=
	result =3D Render(rotation);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
Render function=20
is where all the work in the tutorial is done.  We render the scene in =
the steps=20
that were mentioned in the algorithm.  I have broken each step into its =
own=20
function, and each function has its own render to texture object.  =
Having a=20
render to texture object for each step in this tutorial allows you to =
view the=20
intermediate results which helps in debugging. </FONT></P>
<PRE><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">bool =
GraphicsClass::Render(float rotation)=0A=
{</FONT><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">=0A=
	bool result;=0A=
=0A=
=0A=
	// First render the scene to a render texture.=0A=
	result =3D RenderSceneToTexture(rotation);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Next down sample the render texture to a smaller sized texture.=0A=
	result =3D DownSampleTexture();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Perform a horizontal blur on the down sampled render texture.=0A=
	result =3D RenderHorizontalBlurToTexture();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Now perform a vertical blur on the horizontal blur render texture.=0A=
	result =3D RenderVerticalBlurToTexture();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Up sample the final blurred render texture to screen size again.=0A=
	result =3D UpSampleTexture();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Render the blurred up sampled render texture to the screen.=0A=
	result =3D Render2DTextureScene();=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}</FONT><FONT color=3D"#aaffaa" face=3D"arial" size=3D"2">=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
first function=20
performs the first step of the algorithm by rendering the scene of the =
spinning=20
cube to a full screen sized render to texture. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
GraphicsClass::RenderSceneToTexture(float rotation)=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, projectionMatrix;=0A=
	bool result;=0A=
=0A=
=0A=
	// Set the render target to be the render to texture.=0A=
	m_RenderTexture-&gt;SetRenderTarget(m_D3D-&gt;GetDeviceContext());=0A=
=0A=
	// Clear the render to texture.=0A=
	m_RenderTexture-&gt;ClearRenderTarget(m_D3D-&gt;GetDeviceContext(), =
0.0f, 0.0f, 0.0f, 1.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world, view, and projection matrices from the camera and d3d =
objects.=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_D3D-&gt;GetWorldMatrix(worldMatrix);=0A=
	m_D3D-&gt;GetProjectionMatrix(projectionMatrix);=0A=
=0A=
	// Rotate the world matrix by the rotation value so that the cube will =
spin.=0A=
	D3DXMatrixRotationY(&amp;worldMatrix, rotation);=0A=
=0A=
	// Put the model vertex and index buffers on the graphics pipeline to =
prepare them for drawing.=0A=
	m_Model-&gt;Render(m_D3D-&gt;GetDeviceContext());=0A=
=0A=
	// Render the model using the texture shader.=0A=
	result =3D m_TextureShader-&gt;Render(m_D3D-&gt;GetDeviceContext(), =
m_Model-&gt;GetIndexCount(), worldMatrix, viewMatrix, projectionMatrix, =0A=
					 m_Model-&gt;GetTexture());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Reset the render target back to the original back buffer and not the =
render to texture anymore.=0A=
	m_D3D-&gt;SetBackBufferRenderTarget();=0A=
=0A=
	// Reset the viewport back to the original.=0A=
	m_D3D-&gt;ResetViewport();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
second function=20
performs the next step of the algorithm by rendering the full screen =
render to=20
texture down to a smaller window (down sampling) which was  defined as =
half the=20
size of the screen in the Initialize function.  Notice also that when we =
get the=20
projection matrix it is now an ortho matrix from the render to texture =
with=20
smaller dimensions. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
GraphicsClass::DownSampleTexture()=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, orthoMatrix;=0A=
	bool result;=0A=
=0A=
=0A=
	// Set the render target to be the render to texture.=0A=
	m_DownSampleTexure-&gt;SetRenderTarget(m_D3D-&gt;GetDeviceContext());=0A=
=0A=
	// Clear the render to texture.=0A=
	m_DownSampleTexure-&gt;ClearRenderTarget(m_D3D-&gt;GetDeviceContext(), =
0.0f, 1.0f, 0.0f, 1.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world and view matrices from the camera and d3d objects.=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_D3D-&gt;GetWorldMatrix(worldMatrix);=0A=
	=0A=
	// Get the ortho matrix from the render to texture since texture has =
different dimensions being that it is smaller.=0A=
	m_DownSampleTexure-&gt;GetOrthoMatrix(orthoMatrix);=0A=
=0A=
	// Turn off the Z buffer to begin all 2D rendering.=0A=
	m_D3D-&gt;TurnZBufferOff();=0A=
=0A=
	// Put the small ortho window vertex and index buffers on the graphics =
pipeline to prepare them for drawing.=0A=
	m_SmallWindow-&gt;Render(m_D3D-&gt;GetDeviceContext());=0A=
=0A=
	// Render the small ortho window using the texture shader and the =
render to texture of the scene as the texture resource.=0A=
	result =3D m_TextureShader-&gt;Render(m_D3D-&gt;GetDeviceContext(), =
m_SmallWindow-&gt;GetIndexCount(), worldMatrix, viewMatrix, orthoMatrix, =0A=
					 m_RenderTexture-&gt;GetShaderResourceView());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn the Z buffer back on now that all 2D rendering has completed.=0A=
	m_D3D-&gt;TurnZBufferOn();=0A=
	=0A=
	// Reset the render target back to the original back buffer and not the =
render to texture anymore.=0A=
	m_D3D-&gt;SetBackBufferRenderTarget();=0A=
=0A=
	// Reset the viewport back to the original.=0A=
	m_D3D-&gt;ResetViewport();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
third function=20
performs the horizontal blur on the down sampled texture and stores the =
result=20
in separate  render to texture object which will be used as input to the =

vertical blur shader. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
GraphicsClass::RenderHorizontalBlurToTexture()=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, orthoMatrix;=0A=
	float screenSizeX;=0A=
	bool result;=0A=
=0A=
=0A=
	// Store the screen width in a float that will be used in the =
horizontal blur shader.=0A=
	screenSizeX =3D (float)m_HorizontalBlurTexture-&gt;GetTextureWidth();=0A=
	=0A=
	// Set the render target to be the render to texture.=0A=
	=
m_HorizontalBlurTexture-&gt;SetRenderTarget(m_D3D-&gt;GetDeviceContext())=
;=0A=
=0A=
	// Clear the render to texture.=0A=
	=
m_HorizontalBlurTexture-&gt;ClearRenderTarget(m_D3D-&gt;GetDeviceContext(=
), 0.0f, 0.0f, 0.0f, 1.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world and view matrices from the camera and d3d objects.=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_D3D-&gt;GetWorldMatrix(worldMatrix);=0A=
=0A=
	// Get the ortho matrix from the render to texture since texture has =
different dimensions.=0A=
	m_HorizontalBlurTexture-&gt;GetOrthoMatrix(orthoMatrix);=0A=
=0A=
	// Turn off the Z buffer to begin all 2D rendering.=0A=
	m_D3D-&gt;TurnZBufferOff();=0A=
=0A=
	// Put the small ortho window vertex and index buffers on the graphics =
pipeline to prepare them for drawing.=0A=
	m_SmallWindow-&gt;Render(m_D3D-&gt;GetDeviceContext());=0A=
	=0A=
	// Render the small ortho window using the horizontal blur shader and =
the down sampled render to texture resource.=0A=
	result =3D =
m_HorizontalBlurShader-&gt;Render(m_D3D-&gt;GetDeviceContext(), =
m_SmallWindow-&gt;GetIndexCount(), worldMatrix, viewMatrix, orthoMatrix, =0A=
						m_DownSampleTexure-&gt;GetShaderResourceView(), screenSizeX);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn the Z buffer back on now that all 2D rendering has completed.=0A=
	m_D3D-&gt;TurnZBufferOn();=0A=
=0A=
	// Reset the render target back to the original back buffer and not the =
render to texture anymore.=0A=
	m_D3D-&gt;SetBackBufferRenderTarget();=0A=
=0A=
	// Reset the viewport back to the original.=0A=
	m_D3D-&gt;ResetViewport();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
fourth function=20
performs the vertical blur on the horizontally blurred render to =
texture.  The=20
result is stored in yet another render to texture object. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
GraphicsClass::RenderVerticalBlurToTexture()=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, orthoMatrix;=0A=
	float screenSizeY;=0A=
	bool result;=0A=
=0A=
=0A=
	// Store the screen height in a float that will be used in the vertical =
blur shader.=0A=
	screenSizeY =3D (float)m_VerticalBlurTexture-&gt;GetTextureHeight();=0A=
	=0A=
	// Set the render target to be the render to texture.=0A=
	m_VerticalBlurTexture-&gt;SetRenderTarget(m_D3D-&gt;GetDeviceContext());=0A=
=0A=
	// Clear the render to texture.=0A=
	=
m_VerticalBlurTexture-&gt;ClearRenderTarget(m_D3D-&gt;GetDeviceContext(),=
 0.0f, 0.0f, 0.0f, 1.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world and view matrices from the camera and d3d objects.=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_D3D-&gt;GetWorldMatrix(worldMatrix);=0A=
=0A=
	// Get the ortho matrix from the render to texture since texture has =
different dimensions.=0A=
	m_VerticalBlurTexture-&gt;GetOrthoMatrix(orthoMatrix);=0A=
=0A=
	// Turn off the Z buffer to begin all 2D rendering.=0A=
	m_D3D-&gt;TurnZBufferOff();=0A=
=0A=
	// Put the small ortho window vertex and index buffers on the graphics =
pipeline to prepare them for drawing.=0A=
	m_SmallWindow-&gt;Render(m_D3D-&gt;GetDeviceContext());=0A=
	=0A=
	// Render the small ortho window using the vertical blur shader and the =
horizontal blurred render to texture resource.=0A=
	result =3D =
m_VerticalBlurShader-&gt;Render(m_D3D-&gt;GetDeviceContext(), =
m_SmallWindow-&gt;GetIndexCount(), worldMatrix, viewMatrix, orthoMatrix, =0A=
					      m_HorizontalBlurTexture-&gt;GetShaderResourceView(), =
screenSizeY);=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn the Z buffer back on now that all 2D rendering has completed.=0A=
	m_D3D-&gt;TurnZBufferOn();=0A=
=0A=
	// Reset the render target back to the original back buffer and not the =
render to texture anymore.=0A=
	m_D3D-&gt;SetBackBufferRenderTarget();=0A=
=0A=
	// Reset the viewport back to the original.=0A=
	m_D3D-&gt;ResetViewport();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
fifth function=20
performs the up sampling of the small horizontally and vertically =
blurred=20
texture.  The up sample is done by just rendering the small blurred =
texture to a=20
full screen 2D window model.  The result of this is rendered to another =
render=20
to texture object called m_UpSampleTexture. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
GraphicsClass::UpSampleTexture()=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, orthoMatrix;=0A=
	bool result;=0A=
=0A=
=0A=
	// Set the render target to be the render to texture.=0A=
	m_UpSampleTexure-&gt;SetRenderTarget(m_D3D-&gt;GetDeviceContext());=0A=
=0A=
	// Clear the render to texture.=0A=
	m_UpSampleTexure-&gt;ClearRenderTarget(m_D3D-&gt;GetDeviceContext(), =
0.0f, 0.0f, 0.0f, 1.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world and view matrices from the camera and d3d objects.=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_D3D-&gt;GetWorldMatrix(worldMatrix);=0A=
=0A=
	// Get the ortho matrix from the render to texture since texture has =
different dimensions.=0A=
	m_UpSampleTexure-&gt;GetOrthoMatrix(orthoMatrix);=0A=
=0A=
	// Turn off the Z buffer to begin all 2D rendering.=0A=
	m_D3D-&gt;TurnZBufferOff();=0A=
=0A=
	// Put the full screen ortho window vertex and index buffers on the =
graphics pipeline to prepare them for drawing.=0A=
	m_FullScreenWindow-&gt;Render(m_D3D-&gt;GetDeviceContext());=0A=
=0A=
	// Render the full screen ortho window using the texture shader and the =
small sized final blurred render to texture resource.=0A=
	result =3D m_TextureShader-&gt;Render(m_D3D-&gt;GetDeviceContext(), =
m_FullScreenWindow-&gt;GetIndexCount(), worldMatrix, viewMatrix, =
orthoMatrix, =0A=
					 m_VerticalBlurTexture-&gt;GetShaderResourceView());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn the Z buffer back on now that all 2D rendering has completed.=0A=
	m_D3D-&gt;TurnZBufferOn();=0A=
	=0A=
	// Reset the render target back to the original back buffer and not the =
render to texture anymore.=0A=
	m_D3D-&gt;SetBackBufferRenderTarget();=0A=
=0A=
	// Reset the viewport back to the original.=0A=
	m_D3D-&gt;ResetViewport();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">The =
sixth and final=20
function draws the up sampled blurred texture to the full screen =
completing the=20
full screen blur effect. </FONT></P>
<PRE><FONT color=3D"#aaaaff" face=3D"arial" size=3D"2">bool =
GraphicsClass::Render2DTextureScene()=0A=
{=0A=
	D3DXMATRIX worldMatrix, viewMatrix, orthoMatrix;=0A=
	bool result;=0A=
=0A=
=0A=
	// Clear the buffers to begin the scene.=0A=
	m_D3D-&gt;BeginScene(1.0f, 0.0f, 0.0f, 0.0f);=0A=
=0A=
	// Generate the view matrix based on the camera's position.=0A=
	m_Camera-&gt;Render();=0A=
=0A=
	// Get the world, view, and ortho matrices from the camera and d3d =
objects.=0A=
	m_Camera-&gt;GetViewMatrix(viewMatrix);=0A=
	m_D3D-&gt;GetWorldMatrix(worldMatrix);=0A=
	m_D3D-&gt;GetOrthoMatrix(orthoMatrix);=0A=
=0A=
	// Turn off the Z buffer to begin all 2D rendering.=0A=
	m_D3D-&gt;TurnZBufferOff();=0A=
=0A=
	// Put the full screen ortho window vertex and index buffers on the =
graphics pipeline to prepare them for drawing.=0A=
	m_FullScreenWindow-&gt;Render(m_D3D-&gt;GetDeviceContext());=0A=
=0A=
	// Render the full screen ortho window using the texture shader and the =
full screen sized blurred render to texture resource.=0A=
	result =3D m_TextureShader-&gt;Render(m_D3D-&gt;GetDeviceContext(), =
m_FullScreenWindow-&gt;GetIndexCount(), worldMatrix, viewMatrix, =
orthoMatrix, =0A=
					 m_UpSampleTexure-&gt;GetShaderResourceView());=0A=
	if(!result)=0A=
	{=0A=
		return false;=0A=
	}=0A=
=0A=
	// Turn the Z buffer back on now that all 2D rendering has completed.=0A=
	m_D3D-&gt;TurnZBufferOn();=0A=
	=0A=
	// Present the rendered scene to the screen.=0A=
	m_D3D-&gt;EndScene();=0A=
=0A=
	return true;=0A=
}=0A=
</FONT></PRE><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial"=20
size=3D"3"><U>Summary</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">You =
can now perform=20
full screen blur effects which opens the door to a number of other more =
complex=20
effects that use blurring as their basis. </FONT></P>
<P align=3D"left"><IMG width=3D"275" height=3D"275" =
src=3D"http://web.archive.org/web/20140722085257im_/http://rastertek.com/=
pic0176.gif"=20
border=3D"0"></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>To Do=20
Exercises</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">1. =
Recompile and run=20
the program.  You should see a full screen blurred cube spinning.  Press =
escape=20
to quit. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">2. =
Play with the=20
down sample size to see the effect it produces on the full screen blur =
and speed=20
of the application. Try not down sampling at all. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">3. =
Change the=20
weights and number of neighbors in the vertical and horizontal blur HLSL =
files=20
to see how they affect the blur. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">4. =
Optimize the=20
tutorial and remove some of the unnecessary steps. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">5. =
Extend this=20
effect into a full screen glow (just add the blur texture on top of the =
normal=20
rendered scene). </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">6. =
Use a different=20
method of up sampling instead of using the linear sampler. </FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">7. =
Try a dual pass=20
of the horizontal and vertical blur for a more aggressive blur. =
</FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" size=3D"2">8. =
Blur individual=20
objects instead of the entire scene. </FONT></P><BR>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"3"><U>Source=20
Code</U></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Source Code and Data=20
Files: <A =
href=3D"http://web.archive.org/web/20140722085257/http://rastertek.com/dx=
11src36.zip">dx11src36.zip</A></FONT></P>
<P align=3D"left"><FONT color=3D"#ffffff" face=3D"Arial" =
size=3D"2">Executable: <A =
href=3D"http://web.archive.org/web/20140722085257/http://rastertek.com/dx=
11exe36.zip">dx11exe36.zip</A></FONT></P>
<P align=3D"left"><IMG width=3D"800" height=3D"1" =
src=3D"http://web.archive.org/web/20140722085257im_/http://rastertek.com/=
pic1002.gif"=20
border=3D"0"></P>
<P align=3D"left"><FONT color=3D"#cccccc" face=3D"Arial, Helvetica, =
sans-serif" size=3D"2"><A=20
href=3D"http://web.archive.org/web/20140722085257/http://rastertek.com/tu=
tindex.html">Back=20
to Tutorial Index</A></FONT></P></BODY></HTML><!--=0A=
     FILE ARCHIVED ON 8:52:57 Jul 22, 2014 AND RETRIEVED FROM THE=0A=
     INTERNET ARCHIVE ON 12:24:47 Aug 7, 2014.=0A=
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.=0A=
=0A=
     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.=0A=
     SECTION 108(a)(3)).=0A=
-->

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wayback-toolbar-logo.png

iVBORw0KGgoAAAANSUhEUgAAAG4AAAAnCAIAAABhbuoIAAAACXBIWXMAAAsTAAALEwEAmpwYAAAK
T2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AU
kSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXX
Pues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgAB
eNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAt
AGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3
AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dX
Lh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+
5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk
5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd
0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA
4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzA
BhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/ph
CJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5
h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+
Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQ
AkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+Io
UspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdp
r+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZ
D5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61Mb
U2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY
/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllir
SKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79u
p+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6Vh
lWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1
mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lO
k06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7Ry
FDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3I
veRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+B
Z7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/
0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5q
PNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIs
OpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5
hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQ
rAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9
rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1d
T1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aX
Dm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7
vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3S
PVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKa
RptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO
32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21
e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfV
P1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i
/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8
IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
YAAAOpgAABdvkl/FRgAAErdJREFUeNrsWnt0VNW5//Y+j3knkwkzZEKe5EkeBBLygEQLWHm4xBtb
sRDrVXoX0diLuri111ovRW3RRUu9lQIFlJe9LSzQq15agUJ4JJBAEEiEAMEkZmLek5DJvM7MOWfv
+8eWMUBKELDtXZf915w95+zHb3+P3/ftD1FK4W67Ew3fheBONf6aZ1mWa44d4ziusKiI5/l2h+Pi
xYuFRUUmk+mzS5diYmO1Wu3g4ODJujqtVkdUVaPVFBQWAkBDfX1//4AoClqdLi8vDyHU1dV1vrFR
VUmE2ZyXPwUhBAD19fUet7u4pCQQCDja2lJSUwGgu7v7fGOjIAiKouZNyTOZTF6v92RdHcaYEiqI
QmFREcYjnPrx48ctFktKSgp7lCSpurra5XKlpqZmZ2eHXmtrazt+/HhMTMy0adMAQFXVgwcPjh8/
3m63NzQ0TJkyheM4ADh58mRPT8/MmTN1Op3P5zty5EhBQYHFYmlpabHZbEajUZKkI0eOeDweSukD
Dzyg0+lGkcqtm7fs2L6D/aYAP/33nyxftgwAtmze3NfXBwBdnZ29vb2b3n77448/bv7sM4/HAwCH
Dx9+9WfLTSbTpw0NgUCAncprr7wyNOTauGHD1k2b2YDtDsf3Hpl/qPKgz+t9e+NG1qkqymuvvNrX
1zcw0N/T3Q0ATqezr7fvd2vWHjp4sLur2+f1jigIv/3tb8vLy0OPCKHVq1c3NDT84he/OHHiBOvs
7e0tLy8fHBzcuXOn0+lkne+9996OHTv6+vqWLFni8/lYZ3V19YoVK9iRI4TWrFmzZcsWAFi/fn0w
GGTvbNy4saampr29PTTUX4VSEITklOT09HSe5wEgOjq67PuPtX3+eeWBAxERFiYaEzIyyh57LCoq
KjMzs+z73zcYDAihxMREnV7X1dWdmpqq0WgAwG63R0dHR0ZGRo6JBITY+KmpaU/+YNH63/2uq6vb
aDSyzii7PTo62uPxBIPBKLsdAOLj4x95dP64mJi0CekPf/c7hitvDm8+ny8uLo7juLa2Ntaj0WhS
UlLi4+MxxpIksc7a2tqwsLDy8vLXXnuNyRHHcXl5ef39/efPn9dqtSF5T0xMLCgo0Gq1AKDT6ZYu
XVpZWdnY2Dhu3DiLxQIAWq02KyvLYrHEx8eznlGkUlVVVVXZ70AgEBYe9vzSf1u3Zs1Afz9ThNBr
siwDAFuKqqqqorjdQzzPs4MlhCCEV77+RscXHU/+YBH7yuPxFJeUFE2duvqt3/AcP3xGr9sTCARE
URw+BRMHdOUkhrdz5855PB6j0VhZWTlcFFatWoUxvvfee0NbYGJhNBoNBgPrVBSlt7e3ubmZEBIa
fPjGASA/P59S+s4775SUlIQ6FUVpa2sbHBy83uBc+0wpdblcrsFB5tkppYODgyX3lKSkpv5p926B
F0Jv+v3+kNgzO8UL/LyHHqIU3G73l1gHgy/+9CWXy3X40KEry1U8bs/ip8rPnzvX2toamlSSpCkF
+TNmzGh3OP7aFNess6amZvbs2QsWLPjggw8IIazf7XZXVFT09PRcuHCB9eTk5Fy4cKGurq6lpcV7
xVD4fL6srKzS0tJAIBCCz+PxdHR0hIYyGo1JSUn79+/PysoKzev1eidNmlRYWOj3+69ZErd8+fLh
z4QQR5vDaDDkTJ6EMaaUqqqakJCQkZnJ81zB1MKQ1EgBKSk5KTY2NrQ3r9fb7+x3ONpyJk0SBIGt
ePqMGQmJCX19fZmZmQDAPFVcfHxsXNzYsWOzsrOZ0A25h/qdzpbmZrvdbrXZQseTnJoSExNzPZSE
ELfbPXPmzPT0dJfLlZ2dzWb0er3FxcV2ux0hlJCQAACRkZE2m+3AgQNOp3PixIls/cFg0GazsZGL
ioqY2H7++eeSJBUVFYX2GBkZmZGRMWnSpNC8wWCwpaWltbU1Nzf3GreD7vLKu7zyH55X/uM0GlQ9
n9SrgTFCtMGQGjmiexyuUkxJ/47tm1ZwAkAA8C2If8Dl3vfdfx08eyihOO+eP/4BRG3or/b29l//
+tdVVVWUUp1OJ8tyMBhMT09funRpfn7+zQwuy/KpU6cIIbm5uYy63XmppKrsqj/jHvKaxsRow23O
5k9EfXhETIaz5bSqyobxMRGx429y6K6df+7Z8xEWo4AKdFxUzLcLI6dmfa1TxrIJS9HI1waYfEVH
ZPmFF17YsWNHQUGBoihHjx4dN25cWlra9u3bz5w5c/jwYdsVr3WD5nK5ysrKAoFATU1NyHMCwNDQ
kE6nYx7sdqEM+KWDLzwl1V8ee3+2+Z75F3620hhHE59bdnHVxmB3fdJPKgqff8XddqmvrjYwYNAn
mKxTJustYwab6pVzZ7y6sDHxiYHWi4qsGHJn9H76af0fqnjjeFAvAY1p2vb76X/8T+uUnK9jyRFg
DRJ5f4/T09ICqsWSHOENDz916hQAbNu2ra6u7vHHH587d+66devy8vIaGhpaW1ttNltVVdX+/ftF
UXzggQcmT57M2GVTUxNCaMKECRzHUUplWZYkaThqR48eLSsre/755ysqKrq7u61Wa2dnpyzLGRkZ
zHcfPny4ubk5Li5u+vTper1+NKkEUFUCahxRqEr8oKRQ2qHqPFSIpkEH5rHU7TlY9oynqUlRxgua
tsiSb31782bHgU/P/fQ/NDYu5dlln63dKH/xacGKV0WzWdTrhMjuqHmFvR+rUkdD94Gd1ik5IEHn
/upgWx0y2sKnZZhTJl/ROnD1tAOC8OhY+IqSU6zTe07UVj39dJCPzl/7om3OfEaqeZ5XFIXRZo7j
2N60Wu2+ffseeughFryuWrVq165dkydPfvTRR48ePUopnT179ubNm0VRxBjr9fre3t4TJ05Yrdai
oqLY2NjFixeXlJSsXr36jTfeSE9Pv3jxIqX0rbfeWrhw4csvv/zmm2+KoijL8oIFC9auXWu8OgYb
wVQjjBGmCGOEMMIEYYQAI0QRB1ijd+z5y9DZIZ1tunlymPdUdP+hqq7dH/LhRlWXx0Mn0VDVmKai
y4hKAHpKqchpzBPn9NTsg66gG8tA/MeX/LD5fw6rJIgQp7FpJv3o9ZQnvuNp6jz5sw39nS2ASGRs
cuFrZbw9LnS8CGTCh6k4TdEYgX4Zn4TcDiO/jFoTQnbu3BkIBDZt2iRJ0jPPPPP+++83Nzfv37//
2WefFUXxV7/61datWxcvXszzfG9v74MPPtje3m4wGD744IPi4uLs7GwWwg4MDHAcN2/evC1btuza
tWvGjBnbtm2zWq3bt29ftmzZu+++u2jRohkzZtwGGSJYcToQBIREQ+xTJcjCI8opwTOAOIRUwIAA
IUQQpoBwSMxJUAJCARAvagbaLrVUVnJoijFpptE+Se6Mbl7/S/Wyt37d2+1/+gi3OXGL/4sP/1z7
+ltBvw+H4lSEEEYIUzTqAglhsVZGRsbEiRMZz+/p6QGAefPmzZ8/HwA6OzsJIRhjt9s9a9as4uJi
r9dbU1PT0NBQWlq6fft2Jm7l5eXLli3T6XSEEBYUWSyW3NxcZltdLtft8kqk8gAAIiWqDIQCBqQV
4KZYAAWO72lso95cgi6mLrovaqKOYgrefs8X5webL3Ocfuxsna00A/NR/nNnlP5O4G6F37BEgSRJ
LKOBMWY8yefzscCRPSqKEh4evnLlyieeeGL4h4IgMGFnI2CMEUIIIYyxoiihWHb0GPwmsLwibHSY
fb1ZrghYxEigVO3XmE1IOwaoijiMCMZ+DgilJhuNHwMcxbQDqQEA9I0yQY7jZFlmMfiIGRNK6c2T
xb95tIMYPhxVCVD1q062EKICSy4gHhD6ptdCr7S7geP/+RicAiFwNwdy21BSoggydcmDHZR8MwqI
MAB3O9p9A4VlhGl4fvfvls5QA+74x56IuK9A0Gs9wW6iKl9fpIESRFVCKRkJR6T6LiueDtU9BCMg
guhNqANz3LIsX+9kBUEwGo3syuHvDCVVFGO81RhvBVB9dV1EIV9LWggFQfFw5CLVylgxAeGvRpli
VRM/IVGzwKgxzKGiJeSXMIcQUCK7OSKMyivLy8vz8/OzsrJOnz49/C+/3z9r1qzq6mq73R4MBm/N
2zBidAegRAJPvbTh9Z/3n/7Y6/Vh9wTKj6aJiHACI57YJKCEgnvC/vBfIPDG5HE9e9cAcMOdOxmQ
Eh59MuHRJwEgMOQmsgyAQEAuVzCoQvikiNjcaQHlRuqpKMqcOXPmzJkDAMOviRjKWq02JycHAK6/
L7wZu8FxnCiKwy+4bh1KTqPv2HeyYd0uAUdhgxkBpqNRHzVo7jvYRHp8xpJpyaVPcxardXr0l2aX
9AAYb2gMCC+YOxuEzrP7gGRb4ws1kWF+v/dGWsbzkiTt3Lmzo6OjsbHxrxHGW2iiKDocjkWLFlVV
VbEzu73UL+VcTcexqtMlR8WUZbZuaKR+ekMXQhXJ1rm7ntdqZEeX92y1aH/YsX9fz0fbqGxxXojj
RAXgi+FHP1yXAAA4rPQjovh5jb519/bxj2Tqiu+9wYwajWbDhg3PPfccAJhMpuFQMizWr18/c+bM
vLy8W1DtQCDQ3Nw8fvz4tLQ0q9V6m1l0hBEA9SObQZgYB/qzcGNrSREnOo1xY3ydEGg/3VJfNzGj
5MTT/yL3x1F6idfHoatDQ6QRlO7+QG8L6MKRxYoQRwKu8Glgybyv/feVlIseCHjHjZbTra2tBYAt
W7aYzebS0tLQDaIoiufPn1+xYoXf7y8oKPi60hoMBhMSEvbs2RMVFXWneCUCQEApDSrXuVMECA0P
9ihBvLYn7gdT0RgOgCciP/hZnywZOF1EzOyphgwXlYdCa0AUQQRX/85v9t7/YO0/PyRf7kCCSIgc
GcGnT0/GqAkAj1juMmJLS0uLiIi4xtgx63l9qvHmBZOdx969e0evzriJ5BABIKBiTqO5+msEKMBh
FVR0tVvWEtCBQAAoIH4g2Ixwpqo2xDx8ny0pRVV8V+fwA14uzCfnByGAaICdDZFAkZSrHNRoG2a5
XlbxMIL4YHxrBpRlNJYvXz537txjx47dDJT0Kms1/AeoqiEcOJvS5ur8YyV1E4QBMKgBFYJYUSI6
99RSJwUOXZsMv3LRgxBmtz0EgpTQaxMWGLDAYQ4hTL+ym+gWJWh42QXLCrOb69sJuplaUEpDduNG
tpKqPAAgpGCkXgFS+XI/RLIVpwt6l7eLSLs6MJcue/3qYNA2xa7ROvzOaPmwE2v1X20eIVAl2tsL
fg4BGIh8xbZSQBwg7qu0AqGAOeql1KkCwZTPoLwRgNzCbhlwoigyKCmlrHRg69atLL3GioquARQh
xJwyS79fz4RUVUUI8TzP0Lze1PDXeUCdPe5brZ+elpp8g57jWKsPuOO7tlQjN1CqhJvNttyCSb9c
OljntGQkqkr/UPd9psysMbmTS9a+2PPZZYGjjZuOgZsCAFVUoviloYRLm44oLo4KUtT4RKdXAQBA
HLh7QekBwFQlGrNeTKfkeKDr8CDAJ0TpFqJLxIgoVfKpQYnKPBBCggEV+wmRR82bhYWFAcDKlStZ
idrQ0FBpaenixYt3795NCCkrK3vkkUeur59RFMVqtc6bNy8zM5M5LkVRCCF+v9/n80VEREyYMKG6
unrhwoXHjh0zmUxxcXGjQIkFfsIPZ/WdrRr4XEQtJzkNUgbAWUWQRhv1rZzoWQsAIHXhQlh41VfN
f3rPdeiM1g44pwiAAiWUKJx5yBwrcuFBqgBNSkr67o+sc59QKvcQ+YwgTj7/5iFFkXiNlZAvBEEs
+OFjx/ubgmc/AZmaC3MyX1zIG3W6KE9EAhItY4neYrKHa7FkEs2EAsOIEMIQkSSJUsqKeAghjz/+
+N69eysrK4uKiuLi4sxmc3h4+IYNG9rb2wkh8fHxANDX16coChNDpqo+ny8pKemjjz4CgKampuzs
bJvNptfr8/Pzk5OTzWbz2rVrX3755YsXL2ZkZFRUVDCqP4qCW4pm3f/+lPbjfyFuJ2KmQaXYbEi5
/0EuInLksLcfGtZs10YS29QzeDCcCGFKWFzi9/4p4eGnEGgBUdBS0WgAgIic7Mi0sc5PHCoReSBB
t6yI/bLPF5aed9+7/y13tUBQEcekozBOJXLJunVIpVSQsdYw4y9HEDWK4ToJpB//+McDAwNWq7Wg
oOCll15itaZLlizp7OxklUC1tbWBQCA+Pr67uzsUcQ+/pMUYM9bJTIFWqx0emFdUVCxatEiv13Mc
d+DAARbeZGdnf/jhhx6PR6/Xj0gk7kxJga/VeeCxZ12X+hHuRXSMMcV/7653zfbEEV/2t/W0vr9D
O9Fq1qRLjg5B1ETOnoZNhr9lQkxV1ZaWFlVVk5OT3W63w+Gw2+03c4F+I0d3p3LIbkdn8+590mV/
mIEkfrtAl5UP/8/a3Uq2O9b+dwAuVjLLScqFlgAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wm_tb_prv_on.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMZJREFUeNqU07EKQWEUwHEuSSaLkicgg3TZzCySvIKk2GVgJZmsBg9g
8QK8gcHoASwGNoMS/l+db6Au3zn1W279b+fe796w779Cyimi7ymCFBbYox51CGLoYIS0XHv+C2uY
ynofExRmJWgG3fE7TGKMHuK/VrFhRJ7DRBmXN2XCBibIa87Ek5US2sM04Ro5DHDRhGbumMu6Szxc
QztndFHGVhPaOaCKFo6a0Iz5+jcoYYira2jnhhkKWNlO83ec0EYFu7cAAwCVABzGI3/GxAAAAABJ
RU5ErkJggg==

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/wm_tb_nxt_off.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMhJREFUeNqU0s8KAUEcwPHBJjm5KHkCVy/BRZKnUMpBuXKmHGz+pDbl
CVwdOCoH5U8pD+DiwM1BSb5TO7WHjfn96tPW1reZndnI1Jt7SqkR9kowUZSwwwBpSfjxnw2cUEfc
JgxOBkNsUZSEZvJYYoGcJDRT8Q+tj5Qk1JNAE2fUELMNzWQxwRFlSWgmqXfhCII7unDxsgnfmKGN
m3n5L1yhhYPtdVxQRSEsClvxgZ7/9zx/bcUJrKq/o4OrzUnpcI0xNpI7+QowAGDEIqP9eOV2AAAA
AElFTkSuQmCC

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/jsp/graph.jsp?graphdata=475_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000101_2012:-1:000000000010_2013:-1:000000000000_2014:6:001000100000

iVBORw0KGgoAAAANSUhEUgAAAdsAAAAbCAYAAAA05SU0AAABQ0lEQVR42u3VQQrCQAxA0Zyza4/T
pceao3iHsRWLzYDQTZTqG8iidfGcEvjRWutRfBgMBoPB+GfjgSxnqhwGg8FgnNdYUrHGqI/PFfcY
rc99q8t1P6//kd9vc4u5r/Pu9zwxiS2DwWAwxFZsGQwGgyG2Ymt5GQwGQ2zFVmwZDAaDIbZiy2Aw
GAyxFVvLy2AwGGIrtmLLYDAYDLEVWwaDwWCIrdhaLAaDwWCIrdgyGAwGQ2zF1vIyGAyG2Iqt2DIY
DAZDbMWWwWAwGGIrtpaXwWAwxFZsxZbBYDAYYiu2DAaDwRBbsbW8DAaDwRBbsWUwGAyG2Iqt5WUw
GAyxFVuLxWAwGAyxFVsGg8FgiK3YWl4Gg8EQW7EVWwaDwWCIrdgyGAwGQ2x/OrZRfBgMBoNxaqM/
Jz0X3SNZX/xW453T2WJ71LgDwlrMCMgtklEAAAAASUVORK5CYII=

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/transp-yellow-pixel.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP4/5/hPwAH/QL+ecrX
pAAAAABJRU5ErkJggg==

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/static/images/toolbar/transp-red-pixel.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A
/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAA1JREFUCNdjeMPQ8x8ABcwCeP+6qaAAAAAA
SUVORK5CYII=

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722085257im_/http://rastertek.com/pic1001.gif

R0lGODlhIAMBAPcAAAAAAP///wht//7+//b5//z9//L3//f6/wlu/wlt/wtu/wxv/w1w/w9x/xFy
/xN0/xNz/xV0/xZ1/xd2/xl3/xp3/xt4/xx5/x16/x96/yB7/yF8/yJ9/yR9/yV+/yZ//yeA/ymA
/yqB/yuC/y2D/y6D/y+E/zCF/zKG/zSH/zWI/zeI/ziJ/zmK/zuL/z2M/z6N/z+O/0GP/0KP/0OQ
/0SR/0aR/0eS/0iT/0mU/0uU/0yV/02W/0+X/1CY/1KZ/1Oa/1Sa/1ab/1ec/1md/1qd/1ue/1yf
/1+g/2Ch/2Gi/2Ki/2Sj/2Wk/2al/2il/2mm/2qn/2uo/22o/26p/2+q/3Cr/3Os/3St/3Wu/3eu
/3iv/3mw/3qx/3yx/32y/3+z/4G0/4K1/4O2/4W3/4a3/4e4/4i5/4q6/4y7/428/4+9/5C9/5G+
/5K//5TA/5bB/5fC/5jC/5rD/5vE/57F/5/G/6DH/6PI/6TJ/6XK/6fL/6jL/6nM/6rN/6zO/67P
/6/Q/7HR/7LR/7PS/7TT/7fU/7jV/7rW/7zX/73Y/7/Z/8Ha/8Lb/8Xc/8bd/8fe/8nf/8zh/87i
/9Dj/9Hk/9Pl/9fn/9no/9rp/93r/97r/9/s/+Lu/+Tv/+jx/+ny/+vz/+71//D2/4m6/5PA/5zF
/6HI/6vO/7nW/7/a/8Pc/8rg/83i/9Tm/9vq/+Dt/+Hu/+Xw/+fx/+z0//P4//j7/+v0/+/2//T5
//X6//n8//v9//3+/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4ALAAAAAAgAwEA
AAj/AAMIHEiwoEGCAxIO6MWQYYGHD3lJnLirosVdtjJqtHWg4wECIAnoCpmrZK2TKA2oXDmqZUtc
uETJnEmrps1boXKGAsWz56efs4LOkkVUlqejSD11WtopFqynTzlJ3URVk1VNr7K+ysQ1E6avYC+J
HeuqbFlLaC1VWluJklu3k+JOaiWprl1WeFlF2hsJkl9IjwI7Gjx4VaPDjRgpVqxqkeNFiiInmjwZ
keVUqQ5pNsS5c6HPhQiJHkRakOlAqFEDWg3oj+s/qPzI9tOnNh8+e3Lr2b07j288wIGfukOcuB07
dZInN0WnefM50OfImS4nDpzr199o117Kjfc24Nuw/xm/prya8+fTqFePpj0aUmfixzdDv4x9MvjJ
jNm/X4z/MAAGCMaABH5hoBcIdqEgFwwyuMWDWkSYxYRZYGEhFldkqKEVHFpRxYdVUEHFFCRKYaIU
UaSYIhRQPOGiEzA60cSMTTBho41L5KhEEjwmgcSPPx4h5BFGFGlEEUgSoeQQTA4hxJNCBCFlEED8
YOUPPmSZZQ9c9sDDlzzsIKYOZOZgJg5o4nDDmja0WcObNdAgJw0zzCDDnTHkGQMMfMLwwp9/uiDo
oC0UysKhKySqwqKLpuBoCihEGukJlJ5gwqUmlKApCZyO4OmnIoQawqgglFrqB6h6oKqqHbTKwasb
xFgaqwa0apDBrRlgoCsGF/TqqwXAWlDBsBQUW+wEyCYrwbISROBsBA9EGy0E1FYLgQPYZottA9x2
2wAD4IYL7gLkLqDAuegioO666ibgrgDwxivvvPTWG29AADs=

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722085257im_/http://rastertek.com/pic0178.gif

R0lGODlhcgASAJEAAAAAAP///wD/AP///yH5BAEAAAMALAAAAAByABIAAAJuhI+py30Bo5zR2Yuz
3on6yYXiSAKQgKaqCpXuCxvnSqNtjOfZXK+3DgwieL3UT4jMEYuCY/LpWhad0GpI2qNatxhsTcsN
M7w0sPj8CDBZAbR7Qfa133SZem2b199x9p7eZ6T3d/ZhOEgYdvhRVwAAOw==

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722085257im_/http://rastertek.com/pic0179.gif

R0lGODlhcgASAKIAAAAAAP///wD/AAD1AAC0AABpAP///wAAACH5BAEAAAYALAAAAAByABIAAAP0
GLrc/jDKSau9OOvNeflgGCpEaZ6nMqxs2ypCLM+z6t4rie6lIv4gBhCo46FsOBeMxowhk6yi0eQb
ioTWUWB6DECVgWbz+ZVyq9kPNl0wT8nQpbjm/Ua3XGqArV7w23h5BHBJcnNOdXYDbkZoaWuPgXmE
OIaHlDeMPI5ZkJ2SZ4l2lnOYYII9e3yeVpo7pi9hhzKwd6iDqmysQ65dijmyswK1wLecrX6roG+i
ZcGzxIvLjbmRx7zTm81xz5fbhdmv1Z/XROG+v6Ri0b0p48jlP+16v9LCiPXzqX+75sbflbqVApjp
nDt+HRIqXMiwocOHEBkkAAA7

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722085257im_/http://rastertek.com/pic0180.gif

R0lGODlhcgByALMAAAAAAP///wD/AAD1AADPAAC0AACWAAB9AABpAABVAAA8AAAjAP///wAAAAAA
AAAAACH5BAEAAAwALAAAAAByAHIAAAT/MMhJq7046827/2AojiS5nGiaSkrrvq+UzHRdS0iu77ts
/zMWbNiSqI4oChIpJMJ8QBuOR81Bo7Sm02VcqpTeVWD7DGClgWr1etaSu+ETOL5wb9nYqbpnPmfH
ZFwBdHIThHWAgQp4UXp7Vn1+CXZOcHFzl4mBjECOj5w/lESWYZilmm+Rfp57oGiKRYOEpl6iQ643
aY86uH+wi7J0tEu2ZZJBursIvci/pLWGs6h3qm3Ju8yT05XBmc/E26PVedef443ht92n30zpxses
atnFMevQ7Uf1gsfaypD99sU6NMyds3OdyrVCGOqdPYIlIkqcSLGixYsYLRw8wLGjR48S/wyIHEmS
pIQCKFOqVBmypEuREj7K7CgQWM2YM2W2fFny5MqfKHfyHIkzJ0iHgm4GMPpR6FADPoGudDq0KNMD
SpVepRngqckAUn9S5WmVaVaksbZyHPsyatigXb3CXKr27Ma6ceW6fcvWZVmjdmH9zdm3J9i3KQt/
VYsVrU3Hg2cqJnoYcYHJcxkHVhRZZ16ve8Nihkp36+ZNpa+ODi11dWqzkCfcNf35KWugrjXH1opX
7lzLcH2T1n2QN23ht8XWrvoa8O7YupFXRpwbb/GM2LNr3859e8DlZAMQGE++fHkJA9KrX79egvn3
5F1/pwe+rXj479Gz35/ePX7z8sUzwf930v0HYAD88eefgeMFKAkFBPq2IIP6JdjefQwS4OAqAwpY
YIYaImjhhSCGKN18DKHxYYYVjjjAhAZuaA19K1IooosvYmjjiQLSKKGOMd7oIoz/yUiOj3oBWaSQ
IxKJn5HoIAmakk8yaaGT8EGZkJS2UZmllQlimV99fqWYC5fMldhik16OyeODHcJZY5A49tfmgW9y
iGZ4aoKp4J3nkWkYit0VauihiBr6zzLT8eXnfhIIIOmklFK65pWNiqbQPBMsmtxUj7IXaaWkSnpp
mJm2tukanf7zKUuhXlhqqaf+Cdxlq1JBgaep4hareqPOaumvdt4qD6vH6tqrcnXmKGz/pbVCuiyo
vCbLw6uJEevss5NGK+q0sFab67XgZttssNx6e6Gx4/JhLR/snhsAt91qiy1c4vIab53oPqsusOXi
62qrytyLq7z0mmpvwLjmO/C+OPYr7L/FAvcuLwRjwzDF29LLscEXQxIyoxAPOW/CH2/cLsYjg7xw
wgKkzK64idZs8804dxBhkn3K22eeM5r5x5xL+gyilg3taV/P/AIan6BfobjzlExH7HSDUFMmtYc/
Vm3yzz9uLWfXRy8MdpJic0h0lUazmPVcaVuz9pdt7xh2j0IjM/eYdQcJ9JF5a7P3gX0v+XeUgbvm
NZtnTxk3OYMHWniVh2+Z+NukLY5p/+NdPo5O5E9P/mXlSeds+umoHzqbapi7LB1xgskWe3Q/svu6
dbEbx7p0tv8IO2eyA097kr0n+TtqusPGu8WtN0fYc6srXzvzt9N2XfTOLW9ZddbnDl1v02/f/PGp
JJ99+NSNjzvw5j+vffrVs3797OATT73v6yP//XHoOxo/bPMTXv2mVLwpkY8a7ZNM8wrYpQNyI3UQ
jKAEJwKRg3yHV985CETy8YXYXHBgGYzdBu8BDgsKCIMC0qA0OCgGE8IJhXBSoTCiMUMXcgiGHJKh
N0hokNh9sGCX0yE7eKgPD54QhCkU4QqJ2EEbWgOH1hAiPpjYQh8eEYghBN4IK2jFFzgiMYZKnCEL
k2BEL2IxiVpcIheB90ONZRE1W5SGE8kBRXJIERxjLMQc0VFHdNzRHRMMpCAHaYEIAAA7

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722085257im_/http://rastertek.com/pic0177.gif

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
gwAAOw==

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722085257im_/http://rastertek.com/pic0176.gif

R0lGODlhEwETAfcAAAAAAP///wMDAQUFA9rTtBwaE9PJpNjPsMu9ktPFmtbJn9fKodnMpNbLqNnO
rNPJqcS1i8i5j8O1jsm7lNXGns2/mMu9ltPFntbJo9LGotbKptLGptbLrL+tghYUD8e1ic+9ktLB
ltbFmtLCmsu7ldfHns+/ma2ggcO1kr6wjsm7l8e5ls2/m9XHosu9ms/BnrisjtXHpYmAasK2l7+z
lcu+n6yiiM7CpHZvXsu0gs64h8KugtG8jcayhs25jMq2ikY/MDMuI7qpgs26kNK/lMKxib6thlpS
QNXCmWdeSsu5krqqhs++lr6uijo1KqKVd8m5lbWnhpuPc8u7l6ibfc+/m829mdLCnsm5l829m8q7
mbaois6/nsa4mb2wktDCoce6nJySe8e7oMK3nsC4p8GoeMOqemFVPYV1VMeufsmxgMSsfreid7Gd
c7qler+qfsq0hrKeds22irqmfnRoT6iXdqqZeMu3kM66kyomHse1j8Wzja2dfMm3kbSjgsWzj5KF
as26lcOxjoR4YAsKCMu5lcm3k05HOdG/ms27l8a1kruripeKb9XDns+9mcKyksa2ltPDotDDqRAP
Dcq+ptLGr7uxnNXKs42GeLOrm9fOu6OcjqKJXaiPYrKYaq2UZ7qfcLWcbr6ldq+XbbmgdLaecpB9
WsGofL6meqqUbp2JZpSCYK6YcsmxhMaugpmGZZ6MasuziaqWc6GPbaaTccmyir6pgrKeeq+beCMf
GMKths23jsaxirqmgsq1jr6qhrekgc23kcezjbKgfsKuisezj8Wxjbqnhcm1kcu3k8Kvjcazkcm3
lcu5l8+9m827mcSzlZ6VhK+lk8zDspuFYLyidrKacaONab2jeraedrqiesWrgr6mfrKbdqaRbsKq
grWfesauhq6Zdrmjfr6ngrahfcKrhsWvismzjsexjcu1kcCricWxj8m1k7WbdbmfeL2jfsWrhrWf
fb2nhcexj8Wvjcmzkcu1k823lcGngw4MCgcGBQkHBgMDAwEBAf///yH5BAEAAP8ALAAAAAATARMB
AAj/AAEIHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePIEOKHEmypMmTKFOqXMmypcuX
MGPKnEmzps2bOHPq3Mmzp8+fQIMKHUq0qNGjSJMqXcq0qdOnUKNKnUq1qtWrWLNq3cq1q9evYMOK
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

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://web.archive.org/web/20140722085257im_/http://rastertek.com/pic1002.gif

R0lGODlhIAMBAPcAAAAAAP///wht//7+//b5//z9//L3//f6/wlu/wlt/wtu/wxv/w1w/w9x/xFy
/xN0/xNz/xV0/xZ1/xd2/xl3/xp3/xt4/xx5/x16/x96/yB7/yF8/yJ9/yR9/yV+/yZ//yeA/ymA
/yqB/yuC/y2D/y6D/y+E/zCF/zKG/zSH/zWI/zeI/ziJ/zmK/zuL/z2M/z6N/z+O/0GP/0KP/0OQ
/0SR/0aR/0eS/0iT/0mU/0uU/0yV/02W/0+X/1CY/1KZ/1Oa/1Sa/1ab/1ec/1md/1qd/1ue/1yf
/1+g/2Ch/2Gi/2Ki/2Sj/2Wk/2al/2il/2mm/2qn/2uo/22o/26p/2+q/3Cr/3Os/3St/3Wu/3eu
/3iv/3mw/3qx/3yx/32y/3+z/4G0/4K1/4O2/4W3/4a3/4e4/4i5/4q6/4y7/428/4+9/5C9/5G+
/5K//5TA/5bB/5fC/5jC/5rD/5vE/57F/5/G/6DH/6PI/6TJ/6XK/6fL/6jL/6nM/6rN/6zO/67P
/6/Q/7HR/7LR/7PS/7TT/7fU/7jV/7rW/7zX/73Y/7/Z/8Ha/8Lb/8Xc/8bd/8fe/8nf/8zh/87i
/9Dj/9Hk/9Pl/9fn/9no/9rp/93r/97r/9/s/+Lu/+Tv/+jx/+ny/+vz/+71//D2/4m6/5PA/5zF
/6HI/6vO/7nW/7/a/8Pc/8rg/83i/9Tm/9vq/+Dt/+Hu/+Xw/+fx/+z0//P4//j7/+v0/+/2//T5
//X6//n8//v9//3+/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAL4ALAAAAAAgAwEA
AAj/AAUIHEiwoMGDAxMoRMCwIUMFECMumLiAgcWLFhto3NjAgcePHiGIHAnhgUmTEVJGkMBSwoSX
MCnIlFmhpoWbFi7o3ImhJ4YMQDNoGKphg1GjHJJ2WOqhadMPUEFIlRqiqoirI7JqJcG1hFcTYE2c
GHsChVmzKdKmUMGW7Yq3LOK2mOuirt0XePHC2Asjht8YMgLPmEGjMI0aiGvYWHyjMY7HOHJI1kF5
h2UemHn02NzDh2fPP0L/ABKkdBAhqIUMWT2EiOsisI3INnKk9hEkuHEn2Z1EyZLfTIIHb0K8iZPj
Tp4ohwIlinPnUqJLmUKdCpUq2KtY2W7livfvWMJj/8lCPouW81vSc1m/vot7L/C/yAdDv36Y+/jF
6B/Dnz+Z/2SUIaAZBJ5hoIGkoKEgGmk02KAaEEK4xoRsVNjGhW24oWEpb3TYIRwgghiHHCTKMceJ
c9Chooqm1OGii3bYcceMM56Cx4035qGjHjzyuMePfPDRx5B+FOkHKn8k+QcgTAISyJNPCiLlIFQS
YmUhWBZiyJZcHuJlKqkgImYiZJKpyJmLpLmIKoy02WYjcDayiiN00vnInZDkCUkkfEbCyp+sSCLo
oK1MYugklCSaaCWMVmLJo5a4Iqmkl1RqKSaYZprJppm84ukrmoSqySakcmIqLKiiGksnrHbiyauw
elgiy6yyzGLrLJ/kCsquvIbiayi30CLssKIUaywuuIyirLIGNOtsLdBGm8u0BFSrS7XVHqDtAbZ0
660tu4Qr7i68lGtuAeii28u66w7g7gABxCvvvPTWO29AADs=

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/css/banner-styles.css

.__wb_overlay {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; border: 0px currentColor !important; border-image: none =
!important; left: 0px; top: 0px; width: 100%; height: 100%; position: =
fixed; z-index: 2147483643 !important; opacity: 0.6; background-color: =
rgb(0, 0, 0); -moz-opacity: 0.6;
}
#__wb_record_overlay_div {
	cursor: wait !important;
}
.__wb_record_content {
	margin: 0px !important; padding: 0px !important; border-radius: 8px; =
left: 50%; top: 50%; position: fixed; z-index: 2147483644 !important; =
opacity: 1; box-shadow: 0px 0px 30px 5px #000; background-color: =
rgb(255, 255, 255) !important; -moz-box-shadow: 0 0 30px 5px #000; =
-webkit-box-shadow: 0 0 30px 5px #000;
}
#__wb_record_content_loader {
	width: 574px !important; height: 355px !important; padding-top: 30px =
!important; margin-top: -177px !important; margin-left: -287px =
!important; cursor: wait !important;
}
#__wb_record_content_done {
	width: 855px !important; height: 355px !important; margin-top: -177px =
!important; margin-left: -427px !important;
}
.__wb_record_content > * {
	margin: auto !important; text-align: center !important; font-family: =
"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif !important; =
display: block !important;
}
.__wb_record_content > wb_h1 {
	margin: 0px !important; padding: 0px !important; width: auto =
!important; height: auto !important; color: rgb(34, 34, 34) !important; =
line-height: 2em; font-size: 36px !important; font-weight: normal =
!important;
}
.__wb_record_content > wb_p {
	margin: 8px 0px !important; padding: 0px !important; color: rgb(34, 34, =
34) !important; line-height: 2em; font-size: 17px !important;
}
.__wb_record_content > #_wb_logo {
	margin-bottom: 10px !important;
}
.__wb_record_content > #_wb_spinner {
	margin-top: 30px !important; margin-bottom: 30px !important;
}
.__wb_record_content > #_wb_curr_url {
	font-weight: bold !important; text-decoration: underline !important;
}
#__wb_record_content_done > #__wb_link {
	padding: 3px !important; border: 1px solid rgb(170, 170, 170) =
!important; border-image: none !important; width: 80% !important; =
height: auto !important; text-align: center !important; font-size: 20px =
!important;
}
#__wb_record_content_done > #__wb_link:focus {
	border-color: rgb(66, 139, 202) !important; outline: 0px !important;
}
#__wb_record_content_done > #__wb_donate_close {
	margin: 0px !important; padding: 8px 8px 0px 0px !important; width: =
auto !important; font-size: 18px !important; float: right; display: =
inline-block;
}
#__wb_donate_close > #__wb_record_done_close {
	vertical-align: bottom !important; display: inline-block; cursor: =
pointer !important;
}
#__wb_record_content_done > #__wb_donate_close a {
	color: rgb(66, 139, 202) !important;
}
#__wb_record_content_done > #__wb_donate_close a:link {
	color: rgb(66, 139, 202) !important; text-decoration: none !important; =
margin-right: 16px !important;
}
#__wb_record_content_done > #__wb_donate_close a:visited {
	color: rgb(66, 139, 202) !important;
}
#__wb_record_content_done > #__wb_donate_close a:hover {
	color: rgb(0, 177, 247) !important;
}
.__wb_banner_div {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; width: inherit !important; z-index: 2147483640 !important;
}
#__wb_spinningSquaresG {
	margin: 30px 0px 30px 160px !important; padding: 0px !important; =
border-radius: 0px !important; border: 0px currentColor !important; =
border-image: none !important; width: 240px; height: 20px; position: =
relative;
}
.__wb_spinningSquaresG {
	margin: 0px !important; padding: 0px !important; border-radius: 0px =
!important; border: 0px currentColor !important; border-image: none =
!important; top: 0px; width: 22px; height: 22px; position: absolute; =
transform: scale(0.3); animation-name: bounce_spinningSquaresG; =
animation-duration: 1.9s; animation-iteration-count: infinite; =
background-color: rgb(0, 0, 0); -moz-animation-name: =
bounce_spinningSquaresG; -moz-animation-duration: 1.9s; =
-moz-animation-iteration-count: infinite; -moz-animation-direction: =
linear; -moz-transform: scale(.3); -webkit-animation-name: =
bounce_spinningSquaresG; -webkit-animation-duration: 1.9s; =
-webkit-animation-iteration-count: infinite; =
-webkit-animation-direction: linear; -webkit-transform: scale(.3); =
-o-animation-name: bounce_spinningSquaresG; -o-animation-duration: 1.9s; =
-o-animation-iteration-count: infinite; -o-animation-direction: linear; =
-o-transform: scale(.3);
}
#__wb_spinningSquaresG_1 {
	left: 0px; animation-delay: 0.76s; -moz-animation-delay: 0.76s; =
-webkit-animation-delay: 0.76s; -o-animation-delay: 0.76s;
}
#__wb_spinningSquaresG_2 {
	left: 30px; animation-delay: 0.95s; -moz-animation-delay: 0.95s; =
-webkit-animation-delay: 0.95s; -o-animation-delay: 0.95s;
}
#__wb_spinningSquaresG_3 {
	left: 60px; animation-delay: 1.14s; -moz-animation-delay: 1.14s; =
-webkit-animation-delay: 1.14s; -o-animation-delay: 1.14s;
}
#__wb_spinningSquaresG_4 {
	left: 90px; animation-delay: 1.33s; -moz-animation-delay: 1.33s; =
-webkit-animation-delay: 1.33s; -o-animation-delay: 1.33s;
}
#__wb_spinningSquaresG_5 {
	left: 120px; animation-delay: 1.52s; -moz-animation-delay: 1.52s; =
-webkit-animation-delay: 1.52s; -o-animation-delay: 1.52s;
}
#__wb_spinningSquaresG_6 {
	left: 150px; animation-delay: 1.71s; -moz-animation-delay: 1.71s; =
-webkit-animation-delay: 1.71s; -o-animation-delay: 1.71s;
}
#__wb_spinningSquaresG_7 {
	left: 180px; animation-delay: 1.9s; -moz-animation-delay: 1.9s; =
-webkit-animation-delay: 1.9s; -o-animation-delay: 1.9s;
}
#__wb_spinningSquaresG_8 {
	left: 210px; animation-delay: 2.09s; -moz-animation-delay: 2.09s; =
-webkit-animation-delay: 2.09s; -o-animation-delay: 2.09s;
}

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/analytics.js

var archive_analytics =3D {=0A=
    startTime: new Date(),=0A=
    img_src: "//analytics.archive.org/0.gif",=0A=
    values: { service: 'wb' },=0A=
    =0A=
    onload_func: function() {=0A=
	var now =3D new Date();=0A=
	var loadtime =3D now - archive_analytics.startTime;=0A=
=0A=
	var v =3D archive_analytics.values;=0A=
	v.loadtime =3D loadtime;=0A=
	v.timediff =3D -(now.getTimezoneOffset()/60);=0A=
	v.locale =3D archive_analytics.get_locale();=0A=
	// if no referrer set '-' as referrer=0A=
	v.referrer =3D document.referrer || '-';=0A=
=0A=
        var string =3D archive_analytics.format_bug(v);=0A=
        var loadtime_img =3D new Image(100,25);=0A=
        loadtime_img.src =3D archive_analytics.img_src + "?" + string;=0A=
    },=0A=
    format_bug: function(values) {=0A=
        var ret =3D ['version=3D2'], count =3D 2;=0A=
        =0A=
        for (var data in values) {=0A=
            ret.push(encodeURIComponent(data) + "=3D" + =
encodeURIComponent(values[data]));=0A=
            count =3D count + 1;=0A=
        }=0A=
        ret.push('count=3D' + count);=0A=
        return ret.join("&");=0A=
    },=0A=
    get_locale: function() {=0A=
        if (navigator) {=0A=
	    return navigator.language || navigator.browserLanguage ||=0A=
		navigator.systemLanguage || navigator.userLanguage || '';=0A=
        }=0A=
        return '';=0A=
    },=0A=
    get_cookie: function(name) {=0A=
      var parts =3D document.cookie.split(name + "=3D");=0A=
      if (parts.length =3D=3D 2) return parts.pop().split(";").shift();=0A=
      return 0;=0A=
    }=0A=
};=0A=
=0A=
if (window.addEventListener) {=0A=
    window.addEventListener('load', archive_analytics.onload_func, =
false);=0A=
} else if (window.attachEvent) {=0A=
    window.attachEvent('onload', archive_analytics.onload_func);=0A=
}=0A=
=0A=
window.archive_analytics.values['server_ms'] =3D =
window.archive_analytics.get_cookie("wb_total_perf"); =0A=

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/disclaim-element.js

function getFrameArea(frame) {=0A=
  if(frame.innerWidth) return frame.innerWidth * frame.innerHeight;=0A=
  if(frame.document.documentElement && =
frame.document.documentElement.clientHeight) return =
frame.document.documentElement.clientWidth * =
frame.document.documentElement.clientHeight;=0A=
  if(frame.document.body) return frame.document.body.clientWidth * =
frame.document.body.clientHeight;=0A=
  return 0;=0A=
}=0A=
=0A=
function isLargestFrame() {=0A=
	if(top =3D=3D self) {=0A=
		return true;=0A=
	}=0A=
	if(top.document.body.tagName =3D=3D "BODY") {=0A=
		return false;=0A=
	}=0A=
	largestArea =3D 0;=0A=
	largestFrame =3D null;=0A=
	for(i=3D0;i<top.frames.length;i++) {=0A=
		frame =3D top.frames[i];=0A=
		area =3D getFrameArea(frame);=0A=
		if(area > largestArea) {=0A=
			largestFrame =3D frame;=0A=
			largestArea =3D area;=0A=
		}=0A=
	}=0A=
	return (self =3D=3D largestFrame);=0A=
}=0A=
=0A=
function disclaimElement(element) {=0A=
	if(isLargestFrame()) {=0A=
		element.style.display=3D"block";=0A=
		document.body.insertBefore(element,document.body.firstChild);=0A=
	}=0A=
}=0A=
=0A=
function disclaimToggle(largest, nonLargest) {=0A=
	if(isLargestFrame()) {=0A=
		largest.style.display=3D"block";=0A=
		nonLargest.style.display=3D"none";=0A=
	} else {=0A=
		largest.style.display=3D"none";=0A=
		nonLargest.style.display=3D"block";=0A=
	}=0A=
}=0A=
=0A=

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/js/graph-calc.js

function getEventX(event) {=0A=
	var posx =3D 0;=0A=
	if (event.pageX || event.pageY) {=0A=
		posx =3D  event.pageX;=0A=
	}=0A=
	else if (event.clientX || event.clientY) 	{=0A=
		posx =3D event.clientX + document.body.scrollLeft=0A=
			+ document.documentElement.scrollLeft;=0A=
	}=0A=
	return posx;=0A=
}=0A=
function getElementX(obj) {=0A=
	var x =3D 0;=0A=
	if (obj.offsetParent) {=0A=
		do {=0A=
			x +=3D obj.offsetLeft;=0A=
		} while (obj =3D obj.offsetParent);=0A=
	}=0A=
	return x;=0A=
}=0A=
function zeroPad(str,len) {=0A=
	var i;=0A=
	var pad =3D "";=0A=
	var s =3D str.toString();=0A=
	for(i=3Ds.length; i < len; i++) {=0A=
		pad =3D "0".toString() + pad.toString();=0A=
	}=0A=
	return pad.toString() + s.toString();=0A=
}=0A=
=0A=
function dateToTimestamp(date) {=0A=
	return date.getFullYear() +=0A=
		zeroPad(date.getMonth()+1,2) +=0A=
		zeroPad(date.getDay()+1,2) +=0A=
		zeroPad(date.getHours(),2) +=0A=
		zeroPad(date.getMinutes(),2) +=0A=
		zeroPad(date.getSeconds(),2);=0A=
}=0A=
=0A=
function calcTimestamp(event,element,firstMS,lastMS) {=0A=
	  var eventX =3D getEventX(event);=0A=
	  var elementX =3D getElementX(element);=0A=
	  var elementWidth =3D element.width;=0A=
	  var msWidth =3D lastMS - firstMS;=0A=
	  var x =3D eventX - elementX;=0A=
	  var pct =3D x / elementWidth;=0A=
	  var pctDate =3D pct * msWidth;=0A=
	  var date =3D pctDate + firstMS;=0A=
	  return dateToTimestamp(new Date(date));=0A=
}=0A=

------=_NextPart_000_0000_01CFB219.14D71440
Content-Type: application/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://web.archive.org/static/jflot/jquery.min.js

/*=0A=
 * jQuery JavaScript Library v1.3.2=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Copyright (c) 2009 John Resig=0A=
 * Dual licensed under the MIT and GPL licenses.=0A=
 * http://docs.jquery.com/License=0A=
 *=0A=
 * Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)=0A=
 * Revision: 6246=0A=
 */=0A=
(function(){var =
window=3Dthis,undefined,_jQuery=3Dwindow.jQuery,_$=3Dwindow.$,jQuery=3Dwi=
ndow.jQuery=3Dwindow.$=3Dfunction(selector,context){return new =
jQuery.fn.init(selector,context)},quickExpr=3D/^[^<]*(<(.|\s)+>)[^>]*$|^#=
([\w-]+)$/,isSimple=3D/^.[^:#\[\.,]*$/;jQuery.fn=3DjQuery.prototype=3D{in=
it:function(selector,context){selector=3Dselector||document;if(selector.n=
odeType){this[0]=3Dselector;this.length=3D1;this.context=3Dselector;retur=
n this}if(typeof selector=3D=3D=3D"string"){var =
match=3DquickExpr.exec(selector);if(match&&(match[1]||!context)){if(match=
[1]){selector=3DjQuery.clean([match[1]],context)}else{var =
elem=3Ddocument.getElementById(match[3]);if(elem&&elem.id!=3Dmatch[3]){re=
turn jQuery().find(selector)}var =
ret=3DjQuery(elem||[]);ret.context=3Ddocument;ret.selector=3Dselector;ret=
urn ret}}else{return =
jQuery(context).find(selector)}}else{if(jQuery.isFunction(selector)){retu=
rn =
jQuery(document).ready(selector)}}if(selector.selector&&selector.context)=
{this.selector=3Dselector.selector;this.context=3Dselector.context}return=
 =
this.setArray(jQuery.isArray(selector)?selector:jQuery.makeArray(selector=
))},selector:"",jquery:"1.3.2",size:function(){return =
this.length},get:function(num){return =
num=3D=3D=3Dundefined?Array.prototype.slice.call(this):this[num]},pushSta=
ck:function(elems,name,selector){var =
ret=3DjQuery(elems);ret.prevObject=3Dthis;ret.context=3Dthis.context;if(n=
ame=3D=3D=3D"find"){ret.selector=3Dthis.selector+(this.selector?" =
":"")+selector}else{if(name){ret.selector=3Dthis.selector+"."+name+"("+se=
lector+")"}}return =
ret},setArray:function(elems){this.length=3D0;Array.prototype.push.apply(=
this,elems);return this},each:function(callback,args){return =
jQuery.each(this,callback,args)},index:function(elem){return =
jQuery.inArray(elem&&elem.jquery?elem[0]:elem,this)},attr:function(name,v=
alue,type){var options=3Dname;if(typeof =
name=3D=3D=3D"string"){if(value=3D=3D=3Dundefined){return =
this[0]&&jQuery[type||"attr"](this[0],name)}else{options=3D{};options[nam=
e]=3Dvalue}}return this.each(function(i){for(name in =
options){jQuery.attr(type?this.style:this,name,jQuery.prop(this,options[n=
ame],type,i,name))}})},css:function(key,value){if((key=3D=3D"width"||key=3D=
=3D"height")&&parseFloat(value)<0){value=3Dundefined}return =
this.attr(key,value,"curCSS")},text:function(text){if(typeof =
text!=3D=3D"object"&&text!=3Dnull){return =
this.empty().append((this[0]&&this[0].ownerDocument||document).createText=
Node(text))}var =
ret=3D"";jQuery.each(text||this,function(){jQuery.each(this.childNodes,fu=
nction(){if(this.nodeType!=3D8){ret+=3Dthis.nodeType!=3D1?this.nodeValue:=
jQuery.fn.text([this])}})});return =
ret},wrapAll:function(html){if(this[0]){var =
wrap=3DjQuery(html,this[0].ownerDocument).clone();if(this[0].parentNode){=
wrap.insertBefore(this[0])}wrap.map(function(){var =
elem=3Dthis;while(elem.firstChild){elem=3Delem.firstChild}return =
elem}).append(this)}return this},wrapInner:function(html){return =
this.each(function(){jQuery(this).contents().wrapAll(html)})},wrap:functi=
on(html){return =
this.each(function(){jQuery(this).wrapAll(html)})},append:function(){retu=
rn =
this.domManip(arguments,true,function(elem){if(this.nodeType=3D=3D1){this=
.appendChild(elem)}})},prepend:function(){return =
this.domManip(arguments,true,function(elem){if(this.nodeType=3D=3D1){this=
.insertBefore(elem,this.firstChild)}})},before:function(){return =
this.domManip(arguments,false,function(elem){this.parentNode.insertBefore=
(elem,this)})},after:function(){return =
this.domManip(arguments,false,function(elem){this.parentNode.insertBefore=
(elem,this.nextSibling)})},end:function(){return =
this.prevObject||jQuery([])},push:[].push,sort:[].sort,splice:[].splice,f=
ind:function(selector){if(this.length=3D=3D=3D1){var =
ret=3Dthis.pushStack([],"find",selector);ret.length=3D0;jQuery.find(selec=
tor,this[0],ret);return ret}else{return =
this.pushStack(jQuery.unique(jQuery.map(this,function(elem){return =
jQuery.find(selector,elem)})),"find",selector)}},clone:function(events){v=
ar =
ret=3Dthis.map(function(){if(!jQuery.support.noCloneEvent&&!jQuery.isXMLD=
oc(this)){var html=3Dthis.outerHTML;if(!html){var =
div=3Dthis.ownerDocument.createElement("div");div.appendChild(this.cloneN=
ode(true));html=3Ddiv.innerHTML}return jQuery.clean([html.replace(/ =
jQuery\d+=3D"(?:\d+|null)"/g,"").replace(/^\s*/,"")])[0]}else{return =
this.cloneNode(true)}});if(events=3D=3D=3Dtrue){var =
orig=3Dthis.find("*").andSelf(),i=3D0;ret.find("*").andSelf().each(functi=
on(){if(this.nodeName!=3D=3Dorig[i].nodeName){return }var =
events=3DjQuery.data(orig[i],"events");for(var type in events){for(var =
handler in =
events[type]){jQuery.event.add(this,type,events[type][handler],events[typ=
e][handler].data)}}i++})}return ret},filter:function(selector){return =
this.pushStack(jQuery.isFunction(selector)&&jQuery.grep(this,function(ele=
m,i){return =
selector.call(elem,i)})||jQuery.multiFilter(selector,jQuery.grep(this,fun=
ction(elem){return =
elem.nodeType=3D=3D=3D1})),"filter",selector)},closest:function(selector)=
{var =
pos=3DjQuery.expr.match.POS.test(selector)?jQuery(selector):null,closer=3D=
0;return this.map(function(){var =
cur=3Dthis;while(cur&&cur.ownerDocument){if(pos?pos.index(cur)>-1:jQuery(=
cur).is(selector)){jQuery.data(cur,"closest",closer);return =
cur}cur=3Dcur.parentNode;closer++}})},not:function(selector){if(typeof =
selector=3D=3D=3D"string"){if(isSimple.test(selector)){return =
this.pushStack(jQuery.multiFilter(selector,this,true),"not",selector)}els=
e{selector=3DjQuery.multiFilter(selector,this)}}var =
isArrayLike=3Dselector.length&&selector[selector.length-1]!=3D=3Dundefine=
d&&!selector.nodeType;return this.filter(function(){return =
isArrayLike?jQuery.inArray(this,selector)<0:this!=3Dselector})},add:funct=
ion(selector){return =
this.pushStack(jQuery.unique(jQuery.merge(this.get(),typeof =
selector=3D=3D=3D"string"?jQuery(selector):jQuery.makeArray(selector))))}=
,is:function(selector){return =
!!selector&&jQuery.multiFilter(selector,this).length>0},hasClass:function=
(selector){return =
!!selector&&this.is("."+selector)},val:function(value){if(value=3D=3D=3Du=
ndefined){var =
elem=3Dthis[0];if(elem){if(jQuery.nodeName(elem,"option")){return(elem.at=
tributes.value||{}).specified?elem.value:elem.text}if(jQuery.nodeName(ele=
m,"select")){var =
index=3Delem.selectedIndex,values=3D[],options=3Delem.options,one=3Delem.=
type=3D=3D"select-one";if(index<0){return null}for(var =
i=3Done?index:0,max=3Done?index+1:options.length;i<max;i++){var =
option=3Doptions[i];if(option.selected){value=3DjQuery(option).val();if(o=
ne){return value}values.push(value)}}return =
values}return(elem.value||"").replace(/\r/g,"")}return =
undefined}if(typeof value=3D=3D=3D"number"){value+=3D""}return =
this.each(function(){if(this.nodeType!=3D1){return =
}if(jQuery.isArray(value)&&/radio|checkbox/.test(this.type)){this.checked=
=3D(jQuery.inArray(this.value,value)>=3D0||jQuery.inArray(this.name,value=
)>=3D0)}else{if(jQuery.nodeName(this,"select")){var =
values=3DjQuery.makeArray(value);jQuery("option",this).each(function(){th=
is.selected=3D(jQuery.inArray(this.value,values)>=3D0||jQuery.inArray(thi=
s.text,values)>=3D0)});if(!values.length){this.selectedIndex=3D-1}}else{t=
his.value=3Dvalue}}})},html:function(value){return =
value=3D=3D=3Dundefined?(this[0]?this[0].innerHTML.replace(/ =
jQuery\d+=3D"(?:\d+|null)"/g,""):null):this.empty().append(value)},replac=
eWith:function(value){return =
this.after(value).remove()},eq:function(i){return =
this.slice(i,+i+1)},slice:function(){return =
this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.=
prototype.slice.call(arguments).join(","))},map:function(callback){return=
 this.pushStack(jQuery.map(this,function(elem,i){return =
callback.call(elem,i,elem)}))},andSelf:function(){return =
this.add(this.prevObject)},domManip:function(args,table,callback){if(this=
[0]){var =
fragment=3D(this[0].ownerDocument||this[0]).createDocumentFragment(),scri=
pts=3DjQuery.clean(args,(this[0].ownerDocument||this[0]),fragment),first=3D=
fragment.firstChild;if(first){for(var =
i=3D0,l=3Dthis.length;i<l;i++){callback.call(root(this[i],first),this.len=
gth>1||i>0?fragment.cloneNode(true):fragment)}}if(scripts){jQuery.each(sc=
ripts,evalScript)}}return this;function root(elem,cur){return =
table&&jQuery.nodeName(elem,"table")&&jQuery.nodeName(cur,"tr")?(elem.get=
ElementsByTagName("tbody")[0]||elem.appendChild(elem.ownerDocument.create=
Element("tbody"))):elem}}};jQuery.fn.init.prototype=3DjQuery.fn;function =
evalScript(i,elem){if(elem.src){jQuery.ajax({url:elem.src,async:false,dat=
aType:"script"})}else{jQuery.globalEval(elem.text||elem.textContent||elem=
.innerHTML||"")}if(elem.parentNode){elem.parentNode.removeChild(elem)}}fu=
nction now(){return +new =
Date}jQuery.extend=3DjQuery.fn.extend=3Dfunction(){var =
target=3Darguments[0]||{},i=3D1,length=3Darguments.length,deep=3Dfalse,op=
tions;if(typeof =
target=3D=3D=3D"boolean"){deep=3Dtarget;target=3Darguments[1]||{};i=3D2}i=
f(typeof =
target!=3D=3D"object"&&!jQuery.isFunction(target)){target=3D{}}if(length=3D=
=3Di){target=3Dthis;--i}for(;i<length;i++){if((options=3Darguments[i])!=3D=
null){for(var name in options){var =
src=3Dtarget[name],copy=3Doptions[name];if(target=3D=3D=3Dcopy){continue}=
if(deep&&copy&&typeof =
copy=3D=3D=3D"object"&&!copy.nodeType){target[name]=3DjQuery.extend(deep,=
src||(copy.length!=3Dnull?[]:{}),copy)}else{if(copy!=3D=3Dundefined){targ=
et[name]=3Dcopy}}}}}return target};var =
exclude=3D/z-?index|font-?weight|opacity|zoom|line-?height/i,defaultView=3D=
document.defaultView||{},toString=3DObject.prototype.toString;jQuery.exte=
nd({noConflict:function(deep){window.$=3D_$;if(deep){window.jQuery=3D_jQu=
ery}return jQuery},isFunction:function(obj){return =
toString.call(obj)=3D=3D=3D"[object =
Function]"},isArray:function(obj){return =
toString.call(obj)=3D=3D=3D"[object =
Array]"},isXMLDoc:function(elem){return =
elem.nodeType=3D=3D=3D9&&elem.documentElement.nodeName!=3D=3D"HTML"||!!el=
em.ownerDocument&&jQuery.isXMLDoc(elem.ownerDocument)},globalEval:functio=
n(data){if(data&&/\S/.test(data)){var =
head=3Ddocument.getElementsByTagName("head")[0]||document.documentElement=
,script=3Ddocument.createElement("script");script.type=3D"text/javascript=
";if(jQuery.support.scriptEval){script.appendChild(document.createTextNod=
e(data))}else{script.text=3Ddata}head.insertBefore(script,head.firstChild=
);head.removeChild(script)}},nodeName:function(elem,name){return =
elem.nodeName&&elem.nodeName.toUpperCase()=3D=3Dname.toUpperCase()},each:=
function(object,callback,args){var =
name,i=3D0,length=3Dobject.length;if(args){if(length=3D=3D=3Dundefined){f=
or(name in =
object){if(callback.apply(object[name],args)=3D=3D=3Dfalse){break}}}else{=
for(;i<length;){if(callback.apply(object[i++],args)=3D=3D=3Dfalse){break}=
}}}else{if(length=3D=3D=3Dundefined){for(name in =
object){if(callback.call(object[name],name,object[name])=3D=3D=3Dfalse){b=
reak}}}else{for(var =
value=3Dobject[0];i<length&&callback.call(value,i,value)!=3D=3Dfalse;valu=
e=3Dobject[++i]){}}}return =
object},prop:function(elem,value,type,i,name){if(jQuery.isFunction(value)=
){value=3Dvalue.call(elem,i)}return typeof =
value=3D=3D=3D"number"&&type=3D=3D"curCSS"&&!exclude.test(name)?value+"px=
":value},className:{add:function(elem,classNames){jQuery.each((classNames=
||"").split(/\s+/),function(i,className){if(elem.nodeType=3D=3D1&&!jQuery=
.className.has(elem.className,className)){elem.className+=3D(elem.classNa=
me?" =
":"")+className}})},remove:function(elem,classNames){if(elem.nodeType=3D=3D=
1){elem.className=3DclassNames!=3D=3Dundefined?jQuery.grep(elem.className=
.split(/\s+/),function(className){return =
!jQuery.className.has(classNames,className)}).join(" =
"):""}},has:function(elem,className){return =
elem&&jQuery.inArray(className,(elem.className||elem).toString().split(/\=
s+/))>-1}},swap:function(elem,options,callback){var old=3D{};for(var =
name in =
options){old[name]=3Delem.style[name];elem.style[name]=3Doptions[name]}ca=
llback.call(elem);for(var name in =
options){elem.style[name]=3Dold[name]}},css:function(elem,name,force,extr=
a){if(name=3D=3D"width"||name=3D=3D"height"){var =
val,props=3D{position:"absolute",visibility:"hidden",display:"block"},whi=
ch=3Dname=3D=3D"width"?["Left","Right"]:["Top","Bottom"];function =
getWH(){val=3Dname=3D=3D"width"?elem.offsetWidth:elem.offsetHeight;if(ext=
ra=3D=3D=3D"border"){return =
}jQuery.each(which,function(){if(!extra){val-=3DparseFloat(jQuery.curCSS(=
elem,"padding"+this,true))||0}if(extra=3D=3D=3D"margin"){val+=3DparseFloa=
t(jQuery.curCSS(elem,"margin"+this,true))||0}else{val-=3DparseFloat(jQuer=
y.curCSS(elem,"border"+this+"Width",true))||0}})}if(elem.offsetWidth!=3D=3D=
0){getWH()}else{jQuery.swap(elem,props,getWH)}return =
Math.max(0,Math.round(val))}return =
jQuery.curCSS(elem,name,force)},curCSS:function(elem,name,force){var =
ret,style=3Delem.style;if(name=3D=3D"opacity"&&!jQuery.support.opacity){r=
et=3DjQuery.attr(style,"opacity");return =
ret=3D=3D""?"1":ret}if(name.match(/float/i)){name=3DstyleFloat}if(!force&=
&style&&style[name]){ret=3Dstyle[name]}else{if(defaultView.getComputedSty=
le){if(name.match(/float/i)){name=3D"float"}name=3Dname.replace(/([A-Z])/=
g,"-$1").toLowerCase();var =
computedStyle=3DdefaultView.getComputedStyle(elem,null);if(computedStyle)=
{ret=3DcomputedStyle.getPropertyValue(name)}if(name=3D=3D"opacity"&&ret=3D=
=3D""){ret=3D"1"}}else{if(elem.currentStyle){var =
camelCase=3Dname.replace(/\-(\w)/g,function(all,letter){return =
letter.toUpperCase()});ret=3Delem.currentStyle[name]||elem.currentStyle[c=
amelCase];if(!/^\d+(px)?$/i.test(ret)&&/^\d/.test(ret)){var =
left=3Dstyle.left,rsLeft=3Delem.runtimeStyle.left;elem.runtimeStyle.left=3D=
elem.currentStyle.left;style.left=3Dret||0;ret=3Dstyle.pixelLeft+"px";sty=
le.left=3Dleft;elem.runtimeStyle.left=3DrsLeft}}}}return =
ret},clean:function(elems,context,fragment){context=3Dcontext||document;i=
f(typeof =
context.createElement=3D=3D=3D"undefined"){context=3Dcontext.ownerDocumen=
t||context[0]&&context[0].ownerDocument||document}if(!fragment&&elems.len=
gth=3D=3D=3D1&&typeof elems[0]=3D=3D=3D"string"){var =
match=3D/^<(\w+)\s*\/?>$/.exec(elems[0]);if(match){return[context.createE=
lement(match[1])]}}var =
ret=3D[],scripts=3D[],div=3Dcontext.createElement("div");jQuery.each(elem=
s,function(i,elem){if(typeof =
elem=3D=3D=3D"number"){elem+=3D""}if(!elem){return }if(typeof =
elem=3D=3D=3D"string"){elem=3Delem.replace(/(<(\w+)[^>]*?)\/>/g,function(=
all,front,tag){return =
tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?all=
:front+"></"+tag+">"});var =
tags=3Delem.replace(/^\s+/,"").substring(0,10).toLowerCase();var =
wrap=3D!tags.indexOf("<opt")&&[1,"<select =
multiple=3D'multiple'>","</select>"]||!tags.indexOf("<leg")&&[1,"<fieldse=
t>","</fieldset>"]||tags.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,"<ta=
ble>","</table>"]||!tags.indexOf("<tr")&&[2,"<table><tbody>","</tbody></t=
able>"]||(!tags.indexOf("<td")||!tags.indexOf("<th"))&&[3,"<table><tbody>=
<tr>","</tr></tbody></table>"]||!tags.indexOf("<col")&&[2,"<table><tbody>=
</tbody><colgroup>","</colgroup></table>"]||!jQuery.support.htmlSerialize=
&&[1,"div<div>","</div>"]||[0,"",""];div.innerHTML=3Dwrap[1]+elem+wrap[2]=
;while(wrap[0]--){div=3Ddiv.lastChild}if(!jQuery.support.tbody){var =
hasBody=3D/<tbody/i.test(elem),tbody=3D!tags.indexOf("<table")&&!hasBody?=
div.firstChild&&div.firstChild.childNodes:wrap[1]=3D=3D"<table>"&&!hasBod=
y?div.childNodes:[];for(var =
j=3Dtbody.length-1;j>=3D0;--j){if(jQuery.nodeName(tbody[j],"tbody")&&!tbo=
dy[j].childNodes.length){tbody[j].parentNode.removeChild(tbody[j])}}}if(!=
jQuery.support.leadingWhitespace&&/^\s/.test(elem)){div.insertBefore(cont=
ext.createTextNode(elem.match(/^\s*/)[0]),div.firstChild)}elem=3DjQuery.m=
akeArray(div.childNodes)}if(elem.nodeType){ret.push(elem)}else{ret=3DjQue=
ry.merge(ret,elem)}});if(fragment){for(var =
i=3D0;ret[i];i++){if(jQuery.nodeName(ret[i],"script")&&(!ret[i].type||ret=
[i].type.toLowerCase()=3D=3D=3D"text/javascript")){scripts.push(ret[i].pa=
rentNode?ret[i].parentNode.removeChild(ret[i]):ret[i])}else{if(ret[i].nod=
eType=3D=3D=3D1){ret.splice.apply(ret,[i+1,0].concat(jQuery.makeArray(ret=
[i].getElementsByTagName("script"))))}fragment.appendChild(ret[i])}}retur=
n scripts}return =
ret},attr:function(elem,name,value){if(!elem||elem.nodeType=3D=3D3||elem.=
nodeType=3D=3D8){return undefined}var =
notxml=3D!jQuery.isXMLDoc(elem),set=3Dvalue!=3D=3Dundefined;name=3Dnotxml=
&&jQuery.props[name]||name;if(elem.tagName){var =
special=3D/href|src|style/.test(name);if(name=3D=3D"selected"&&elem.paren=
tNode){elem.parentNode.selectedIndex}if(name in =
elem&&notxml&&!special){if(set){if(name=3D=3D"type"&&jQuery.nodeName(elem=
,"input")&&elem.parentNode){throw"type property can't be =
changed"}elem[name]=3Dvalue}if(jQuery.nodeName(elem,"form")&&elem.getAttr=
ibuteNode(name)){return =
elem.getAttributeNode(name).nodeValue}if(name=3D=3D"tabIndex"){var =
attributeNode=3Delem.getAttributeNode("tabIndex");return =
attributeNode&&attributeNode.specified?attributeNode.value:elem.nodeName.=
match(/(button|input|object|select|textarea)/i)?0:elem.nodeName.match(/^(=
a|area)$/i)&&elem.href?0:undefined}return =
elem[name]}if(!jQuery.support.style&&notxml&&name=3D=3D"style"){return =
jQuery.attr(elem.style,"cssText",value)}if(set){elem.setAttribute(name,""=
+value)}var =
attr=3D!jQuery.support.hrefNormalized&&notxml&&special?elem.getAttribute(=
name,2):elem.getAttribute(name);return =
attr=3D=3D=3Dnull?undefined:attr}if(!jQuery.support.opacity&&name=3D=3D"o=
pacity"){if(set){elem.zoom=3D1;elem.filter=3D(elem.filter||"").replace(/a=
lpha\([^)]*\)/,"")+(parseInt(value)+""=3D=3D"NaN"?"":"alpha(opacity=3D"+v=
alue*100+")")}return =
elem.filter&&elem.filter.indexOf("opacity=3D")>=3D0?(parseFloat(elem.filt=
er.match(/opacity=3D([^)]*)/)[1])/100)+"":""}name=3Dname.replace(/-([a-z]=
)/ig,function(all,letter){return =
letter.toUpperCase()});if(set){elem[name]=3Dvalue}return =
elem[name]},trim:function(text){return(text||"").replace(/^\s+|\s+$/g,"")=
},makeArray:function(array){var ret=3D[];if(array!=3Dnull){var =
i=3Darray.length;if(i=3D=3Dnull||typeof =
array=3D=3D=3D"string"||jQuery.isFunction(array)||array.setInterval){ret[=
0]=3Darray}else{while(i){ret[--i]=3Darray[i]}}}return =
ret},inArray:function(elem,array){for(var =
i=3D0,length=3Darray.length;i<length;i++){if(array[i]=3D=3D=3Delem){retur=
n i}}return -1},merge:function(first,second){var =
i=3D0,elem,pos=3Dfirst.length;if(!jQuery.support.getAll){while((elem=3Dse=
cond[i++])!=3Dnull){if(elem.nodeType!=3D8){first[pos++]=3Delem}}}else{whi=
le((elem=3Dsecond[i++])!=3Dnull){first[pos++]=3Delem}}return =
first},unique:function(array){var ret=3D[],done=3D{};try{for(var =
i=3D0,length=3Darray.length;i<length;i++){var =
id=3DjQuery.data(array[i]);if(!done[id]){done[id]=3Dtrue;ret.push(array[i=
])}}}catch(e){ret=3Darray}return =
ret},grep:function(elems,callback,inv){var ret=3D[];for(var =
i=3D0,length=3Delems.length;i<length;i++){if(!inv!=3D!callback(elems[i],i=
)){ret.push(elems[i])}}return ret},map:function(elems,callback){var =
ret=3D[];for(var i=3D0,length=3Delems.length;i<length;i++){var =
value=3Dcallback(elems[i],i);if(value!=3Dnull){ret[ret.length]=3Dvalue}}r=
eturn ret.concat.apply([],ret)}});var =
userAgent=3Dnavigator.userAgent.toLowerCase();jQuery.browser=3D{version:(=
userAgent.match(/.+(?:rv|it|ra|ie)[\/: =
]([\d.]+)/)||[0,"0"])[1],safari:/webkit/.test(userAgent),opera:/opera/.te=
st(userAgent),msie:/msie/.test(userAgent)&&!/opera/.test(userAgent),mozil=
la:/mozilla/.test(userAgent)&&!/(compatible|webkit)/.test(userAgent)};jQu=
ery.each({parent:function(elem){return =
elem.parentNode},parents:function(elem){return =
jQuery.dir(elem,"parentNode")},next:function(elem){return =
jQuery.nth(elem,2,"nextSibling")},prev:function(elem){return =
jQuery.nth(elem,2,"previousSibling")},nextAll:function(elem){return =
jQuery.dir(elem,"nextSibling")},prevAll:function(elem){return =
jQuery.dir(elem,"previousSibling")},siblings:function(elem){return =
jQuery.sibling(elem.parentNode.firstChild,elem)},children:function(elem){=
return jQuery.sibling(elem.firstChild)},contents:function(elem){return =
jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.contentWindow.d=
ocument:jQuery.makeArray(elem.childNodes)}},function(name,fn){jQuery.fn[n=
ame]=3Dfunction(selector){var =
ret=3DjQuery.map(this,fn);if(selector&&typeof =
selector=3D=3D"string"){ret=3DjQuery.multiFilter(selector,ret)}return =
this.pushStack(jQuery.unique(ret),name,selector)}});jQuery.each({appendTo=
:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",r=
eplaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=3Dfuncti=
on(selector){var ret=3D[],insert=3DjQuery(selector);for(var =
i=3D0,l=3Dinsert.length;i<l;i++){var =
elems=3D(i>0?this.clone(true):this).get();jQuery.fn[original].apply(jQuer=
y(insert[i]),elems);ret=3Dret.concat(elems)}return =
this.pushStack(ret,name,selector)}});jQuery.each({removeAttr:function(nam=
e){jQuery.attr(this,name,"");if(this.nodeType=3D=3D1){this.removeAttribut=
e(name)}},addClass:function(classNames){jQuery.className.add(this,classNa=
mes)},removeClass:function(classNames){jQuery.className.remove(this,class=
Names)},toggleClass:function(classNames,state){if(typeof =
state!=3D=3D"boolean"){state=3D!jQuery.className.has(this,classNames)}jQu=
ery.className[state?"add":"remove"](this,classNames)},remove:function(sel=
ector){if(!selector||jQuery.filter(selector,[this]).length){jQuery("*",th=
is).add([this]).each(function(){jQuery.event.remove(this);jQuery.removeDa=
ta(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},empty=
:function(){jQuery(this).children().remove();while(this.firstChild){this.=
removeChild(this.firstChild)}}},function(name,fn){jQuery.fn[name]=3Dfunct=
ion(){return this.each(fn,arguments)}});function num(elem,prop){return =
elem[0]&&parseInt(jQuery.curCSS(elem[0],prop,true),10)||0}var =
expando=3D"jQuery"+now(),uuid=3D0,windowData=3D{};jQuery.extend({cache:{}=
,data:function(elem,name,data){elem=3Delem=3D=3Dwindow?windowData:elem;va=
r =
id=3Delem[expando];if(!id){id=3Delem[expando]=3D++uuid}if(name&&!jQuery.c=
ache[id]){jQuery.cache[id]=3D{}}if(data!=3D=3Dundefined){jQuery.cache[id]=
[name]=3Ddata}return =
name?jQuery.cache[id][name]:id},removeData:function(elem,name){elem=3Dele=
m=3D=3Dwindow?windowData:elem;var =
id=3Delem[expando];if(name){if(jQuery.cache[id]){delete =
jQuery.cache[id][name];name=3D"";for(name in =
jQuery.cache[id]){break}if(!name){jQuery.removeData(elem)}}}else{try{dele=
te =
elem[expando]}catch(e){if(elem.removeAttribute){elem.removeAttribute(expa=
ndo)}}delete =
jQuery.cache[id]}},queue:function(elem,type,data){if(elem){type=3D(type||=
"fx")+"queue";var =
q=3DjQuery.data(elem,type);if(!q||jQuery.isArray(data)){q=3DjQuery.data(e=
lem,type,jQuery.makeArray(data))}else{if(data){q.push(data)}}}return =
q},dequeue:function(elem,type){var =
queue=3DjQuery.queue(elem,type),fn=3Dqueue.shift();if(!type||type=3D=3D=3D=
"fx"){fn=3Dqueue[0]}if(fn!=3D=3Dundefined){fn.call(elem)}}});jQuery.fn.ex=
tend({data:function(key,value){var =
parts=3Dkey.split(".");parts[1]=3Dparts[1]?"."+parts[1]:"";if(value=3D=3D=
=3Dundefined){var =
data=3Dthis.triggerHandler("getData"+parts[1]+"!",[parts[0]]);if(data=3D=3D=
=3Dundefined&&this.length){data=3DjQuery.data(this[0],key)}return =
data=3D=3D=3Dundefined&&parts[1]?this.data(parts[0]):data}else{return =
this.trigger("setData"+parts[1]+"!",[parts[0],value]).each(function(){jQu=
ery.data(this,key,value)})}},removeData:function(key){return =
this.each(function(){jQuery.removeData(this,key)})},queue:function(type,d=
ata){if(typeof =
type!=3D=3D"string"){data=3Dtype;type=3D"fx"}if(data=3D=3D=3Dundefined){r=
eturn jQuery.queue(this[0],type)}return this.each(function(){var =
queue=3DjQuery.queue(this,type,data);if(type=3D=3D"fx"&&queue.length=3D=3D=
1){queue[0].call(this)}})},dequeue:function(type){return =
this.each(function(){jQuery.dequeue(this,type)})}});=0A=
/*=0A=
 * Sizzle CSS Selector Engine - v0.9.3=0A=
 *  Copyright 2009, The Dojo Foundation=0A=
 *  Released under the MIT, BSD, and GPL Licenses.=0A=
 *  More information: http://sizzlejs.com/=0A=
 */=0A=
(function(){var =
chunker=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]=
|[^[\]'"]+)+\]|\\.|[^ =
>+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g,done=3D0,toString=3DObject.prototype.toS=
tring;var =
Sizzle=3Dfunction(selector,context,results,seed){results=3Dresults||[];co=
ntext=3Dcontext||document;if(context.nodeType!=3D=3D1&&context.nodeType!=3D=
=3D9){return[]}if(!selector||typeof selector!=3D=3D"string"){return =
results}var =
parts=3D[],m,set,checkSet,check,mode,extra,prune=3Dtrue;chunker.lastIndex=
=3D0;while((m=3Dchunker.exec(selector))!=3D=3Dnull){parts.push(m[1]);if(m=
[2]){extra=3DRegExp.rightContext;break}}if(parts.length>1&&origPOS.exec(s=
elector)){if(parts.length=3D=3D=3D2&&Expr.relative[parts[0]]){set=3DposPr=
ocess(parts[0]+parts[1],context)}else{set=3DExpr.relative[parts[0]]?[cont=
ext]:Sizzle(parts.shift(),context);while(parts.length){selector=3Dparts.s=
hift();if(Expr.relative[selector]){selector+=3Dparts.shift()}set=3DposPro=
cess(selector,set)}}}else{var =
ret=3Dseed?{expr:parts.pop(),set:makeArray(seed)}:Sizzle.find(parts.pop()=
,parts.length=3D=3D=3D1&&context.parentNode?context.parentNode:context,is=
XML(context));set=3DSizzle.filter(ret.expr,ret.set);if(parts.length>0){ch=
eckSet=3DmakeArray(set)}else{prune=3Dfalse}while(parts.length){var =
cur=3Dparts.pop(),pop=3Dcur;if(!Expr.relative[cur]){cur=3D""}else{pop=3Dp=
arts.pop()}if(pop=3D=3Dnull){pop=3Dcontext}Expr.relative[cur](checkSet,po=
p,isXML(context))}}if(!checkSet){checkSet=3Dset}if(!checkSet){throw"Synta=
x error, unrecognized expression: =
"+(cur||selector)}if(toString.call(checkSet)=3D=3D=3D"[object =
Array]"){if(!prune){results.push.apply(results,checkSet)}else{if(context.=
nodeType=3D=3D=3D1){for(var =
i=3D0;checkSet[i]!=3Dnull;i++){if(checkSet[i]&&(checkSet[i]=3D=3D=3Dtrue|=
|checkSet[i].nodeType=3D=3D=3D1&&contains(context,checkSet[i]))){results.=
push(set[i])}}}else{for(var =
i=3D0;checkSet[i]!=3Dnull;i++){if(checkSet[i]&&checkSet[i].nodeType=3D=3D=
=3D1){results.push(set[i])}}}}}else{makeArray(checkSet,results)}if(extra)=
{Sizzle(extra,context,results,seed);if(sortOrder){hasDuplicate=3Dfalse;re=
sults.sort(sortOrder);if(hasDuplicate){for(var =
i=3D1;i<results.length;i++){if(results[i]=3D=3D=3Dresults[i-1]){results.s=
plice(i--,1)}}}}}return =
results};Sizzle.matches=3Dfunction(expr,set){return =
Sizzle(expr,null,null,set)};Sizzle.find=3Dfunction(expr,context,isXML){va=
r set,match;if(!expr){return[]}for(var =
i=3D0,l=3DExpr.order.length;i<l;i++){var =
type=3DExpr.order[i],match;if((match=3DExpr.match[type].exec(expr))){var =
left=3DRegExp.leftContext;if(left.substr(left.length-1)!=3D=3D"\\"){match=
[1]=3D(match[1]||"").replace(/\\/g,"");set=3DExpr.find[type](match,contex=
t,isXML);if(set!=3Dnull){expr=3Dexpr.replace(Expr.match[type],"");break}}=
}}if(!set){set=3Dcontext.getElementsByTagName("*")}return{set:set,expr:ex=
pr}};Sizzle.filter=3Dfunction(expr,set,inplace,not){var =
old=3Dexpr,result=3D[],curLoop=3Dset,match,anyFound,isXMLFilter=3Dset&&se=
t[0]&&isXML(set[0]);while(expr&&set.length){for(var type in =
Expr.filter){if((match=3DExpr.match[type].exec(expr))!=3Dnull){var =
filter=3DExpr.filter[type],found,item;anyFound=3Dfalse;if(curLoop=3D=3Dre=
sult){result=3D[]}if(Expr.preFilter[type]){match=3DExpr.preFilter[type](m=
atch,curLoop,inplace,result,not,isXMLFilter);if(!match){anyFound=3Dfound=3D=
true}else{if(match=3D=3D=3Dtrue){continue}}}if(match){for(var =
i=3D0;(item=3DcurLoop[i])!=3Dnull;i++){if(item){found=3Dfilter(item,match=
,i,curLoop);var =
pass=3Dnot^!!found;if(inplace&&found!=3Dnull){if(pass){anyFound=3Dtrue}el=
se{curLoop[i]=3Dfalse}}else{if(pass){result.push(item);anyFound=3Dtrue}}}=
}}if(found!=3D=3Dundefined){if(!inplace){curLoop=3Dresult}expr=3Dexpr.rep=
lace(Expr.match[type],"");if(!anyFound){return[]}break}}}if(expr=3D=3Dold=
){if(anyFound=3D=3Dnull){throw"Syntax error, unrecognized expression: =
"+expr}else{break}}old=3Dexpr}return curLoop};var =
Expr=3DSizzle.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\=
u00c0-\uFFFF_-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,NAME:/\[=
name=3D['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00=
c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=3D)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\=
u00c0-\uFFFF\*_-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|o=
dd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(=
?=3D[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\=
)]+\)|[^\2\(\)]*)+)\2\))?/},attrMap:{"class":"className","for":"htmlFor"}=
,attrHandle:{href:function(elem){return =
elem.getAttribute("href")}},relative:{"+":function(checkSet,part,isXML){v=
ar isPartStr=3Dtypeof =
part=3D=3D=3D"string",isTag=3DisPartStr&&!/\W/.test(part),isPartStrNotTag=
=3DisPartStr&&!isTag;if(isTag&&!isXML){part=3Dpart.toUpperCase()}for(var =
i=3D0,l=3DcheckSet.length,elem;i<l;i++){if((elem=3DcheckSet[i])){while((e=
lem=3Delem.previousSibling)&&elem.nodeType!=3D=3D1){}checkSet[i]=3DisPart=
StrNotTag||elem&&elem.nodeName=3D=3D=3Dpart?elem||false:elem=3D=3D=3Dpart=
}}if(isPartStrNotTag){Sizzle.filter(part,checkSet,true)}},">":function(ch=
eckSet,part,isXML){var isPartStr=3Dtypeof =
part=3D=3D=3D"string";if(isPartStr&&!/\W/.test(part)){part=3DisXML?part:p=
art.toUpperCase();for(var i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){var =
parent=3Delem.parentNode;checkSet[i]=3Dparent.nodeName=3D=3D=3Dpart?paren=
t:false}}}else{for(var i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){checkSet[i]=3DisPartStr?elem.parentNode:elem.=
parentNode=3D=3D=3Dpart}}if(isPartStr){Sizzle.filter(part,checkSet,true)}=
}},"":function(checkSet,part,isXML){var =
doneName=3Ddone++,checkFn=3DdirCheck;if(!part.match(/\W/)){var =
nodeCheck=3Dpart=3DisXML?part:part.toUpperCase();checkFn=3DdirNodeCheck}c=
heckFn("parentNode",part,doneName,checkSet,nodeCheck,isXML)},"~":function=
(checkSet,part,isXML){var doneName=3Ddone++,checkFn=3DdirCheck;if(typeof =
part=3D=3D=3D"string"&&!part.match(/\W/)){var =
nodeCheck=3Dpart=3DisXML?part:part.toUpperCase();checkFn=3DdirNodeCheck}c=
heckFn("previousSibling",part,doneName,checkSet,nodeCheck,isXML)}},find:{=
ID:function(match,context,isXML){if(typeof =
context.getElementById!=3D=3D"undefined"&&!isXML){var =
m=3Dcontext.getElementById(match[1]);return =
m?[m]:[]}},NAME:function(match,context,isXML){if(typeof =
context.getElementsByName!=3D=3D"undefined"){var =
ret=3D[],results=3Dcontext.getElementsByName(match[1]);for(var =
i=3D0,l=3Dresults.length;i<l;i++){if(results[i].getAttribute("name")=3D=3D=
=3Dmatch[1]){ret.push(results[i])}}return =
ret.length=3D=3D=3D0?null:ret}},TAG:function(match,context){return =
context.getElementsByTagName(match[1])}},preFilter:{CLASS:function(match,=
curLoop,inplace,result,not,isXML){match=3D" =
"+match[1].replace(/\\/g,"")+" ";if(isXML){return match}for(var =
i=3D0,elem;(elem=3DcurLoop[i])!=3Dnull;i++){if(elem){if(not^(elem.classNa=
me&&(" "+elem.className+" =
").indexOf(match)>=3D0)){if(!inplace){result.push(elem)}}else{if(inplace)=
{curLoop[i]=3Dfalse}}}}return false},ID:function(match){return =
match[1].replace(/\\/g,"")},TAG:function(match,curLoop){for(var =
i=3D0;curLoop[i]=3D=3D=3Dfalse;i++){}return =
curLoop[i]&&isXML(curLoop[i])?match[1]:match[1].toUpperCase()},CHILD:func=
tion(match){if(match[1]=3D=3D"nth"){var =
test=3D/(-?)(\d*)n((?:\+|-)?\d*)/.exec(match[2]=3D=3D"even"&&"2n"||match[=
2]=3D=3D"odd"&&"2n+1"||!/\D/.test(match[2])&&"0n+"+match[2]||match[2]);ma=
tch[2]=3D(test[1]+(test[2]||1))-0;match[3]=3Dtest[3]-0}match[0]=3Ddone++;=
return match},ATTR:function(match,curLoop,inplace,result,not,isXML){var =
name=3Dmatch[1].replace(/\\/g,"");if(!isXML&&Expr.attrMap[name]){match[1]=
=3DExpr.attrMap[name]}if(match[2]=3D=3D=3D"~=3D"){match[4]=3D" =
"+match[4]+" "}return =
match},PSEUDO:function(match,curLoop,inplace,result,not){if(match[1]=3D=3D=
=3D"not"){if(match[3].match(chunker).length>1||/^\w/.test(match[3])){matc=
h[3]=3DSizzle(match[3],null,null,curLoop)}else{var =
ret=3DSizzle.filter(match[3],curLoop,inplace,true^not);if(!inplace){resul=
t.push.apply(result,ret)}return =
false}}else{if(Expr.match.POS.test(match[0])||Expr.match.CHILD.test(match=
[0])){return true}}return =
match},POS:function(match){match.unshift(true);return =
match}},filters:{enabled:function(elem){return =
elem.disabled=3D=3D=3Dfalse&&elem.type!=3D=3D"hidden"},disabled:function(=
elem){return elem.disabled=3D=3D=3Dtrue},checked:function(elem){return =
elem.checked=3D=3D=3Dtrue},selected:function(elem){elem.parentNode.select=
edIndex;return elem.selected=3D=3D=3Dtrue},parent:function(elem){return =
!!elem.firstChild},empty:function(elem){return =
!elem.firstChild},has:function(elem,i,match){return =
!!Sizzle(match[3],elem).length},header:function(elem){return/h\d/i.test(e=
lem.nodeName)},text:function(elem){return"text"=3D=3D=3Delem.type},radio:=
function(elem){return"radio"=3D=3D=3Delem.type},checkbox:function(elem){r=
eturn"checkbox"=3D=3D=3Delem.type},file:function(elem){return"file"=3D=3D=
=3Delem.type},password:function(elem){return"password"=3D=3D=3Delem.type}=
,submit:function(elem){return"submit"=3D=3D=3Delem.type},image:function(e=
lem){return"image"=3D=3D=3Delem.type},reset:function(elem){return"reset"=3D=
=3D=3Delem.type},button:function(elem){return"button"=3D=3D=3Delem.type||=
elem.nodeName.toUpperCase()=3D=3D=3D"BUTTON"},input:function(elem){return=
/input|select|textarea|button/i.test(elem.nodeName)}},setFilters:{first:f=
unction(elem,i){return =
i=3D=3D=3D0},last:function(elem,i,match,array){return =
i=3D=3D=3Darray.length-1},even:function(elem,i){return =
i%2=3D=3D=3D0},odd:function(elem,i){return =
i%2=3D=3D=3D1},lt:function(elem,i,match){return =
i<match[3]-0},gt:function(elem,i,match){return =
i>match[3]-0},nth:function(elem,i,match){return =
match[3]-0=3D=3Di},eq:function(elem,i,match){return =
match[3]-0=3D=3Di}},filter:{PSEUDO:function(elem,match,i,array){var =
name=3Dmatch[1],filter=3DExpr.filters[name];if(filter){return =
filter(elem,i,match,array)}else{if(name=3D=3D=3D"contains"){return(elem.t=
extContent||elem.innerText||"").indexOf(match[3])>=3D0}else{if(name=3D=3D=
=3D"not"){var not=3Dmatch[3];for(var =
i=3D0,l=3Dnot.length;i<l;i++){if(not[i]=3D=3D=3Delem){return =
false}}return true}}}},CHILD:function(elem,match){var =
type=3Dmatch[1],node=3Delem;switch(type){case"only":case"first":while(nod=
e=3Dnode.previousSibling){if(node.nodeType=3D=3D=3D1){return =
false}}if(type=3D=3D"first"){return =
true}node=3Delem;case"last":while(node=3Dnode.nextSibling){if(node.nodeTy=
pe=3D=3D=3D1){return false}}return true;case"nth":var =
first=3Dmatch[2],last=3Dmatch[3];if(first=3D=3D1&&last=3D=3D0){return =
true}var =
doneName=3Dmatch[0],parent=3Delem.parentNode;if(parent&&(parent.sizcache!=
=3D=3DdoneName||!elem.nodeIndex)){var =
count=3D0;for(node=3Dparent.firstChild;node;node=3Dnode.nextSibling){if(n=
ode.nodeType=3D=3D=3D1){node.nodeIndex=3D++count}}parent.sizcache=3DdoneN=
ame}var diff=3Delem.nodeIndex-last;if(first=3D=3D0){return =
diff=3D=3D0}else{return(diff%first=3D=3D0&&diff/first>=3D0)}}},ID:functio=
n(elem,match){return =
elem.nodeType=3D=3D=3D1&&elem.getAttribute("id")=3D=3D=3Dmatch},TAG:funct=
ion(elem,match){return(match=3D=3D=3D"*"&&elem.nodeType=3D=3D=3D1)||elem.=
nodeName=3D=3D=3Dmatch},CLASS:function(elem,match){return(" =
"+(elem.className||elem.getAttribute("class"))+" =
").indexOf(match)>-1},ATTR:function(elem,match){var =
name=3Dmatch[1],result=3DExpr.attrHandle[name]?Expr.attrHandle[name](elem=
):elem[name]!=3Dnull?elem[name]:elem.getAttribute(name),value=3Dresult+""=
,type=3Dmatch[2],check=3Dmatch[4];return =
result=3D=3Dnull?type=3D=3D=3D"!=3D":type=3D=3D=3D"=3D"?value=3D=3D=3Dche=
ck:type=3D=3D=3D"*=3D"?value.indexOf(check)>=3D0:type=3D=3D=3D"~=3D"?(" =
"+value+" =
").indexOf(check)>=3D0:!check?value&&result!=3D=3Dfalse:type=3D=3D=3D"!=3D=
"?value!=3Dcheck:type=3D=3D=3D"^=3D"?value.indexOf(check)=3D=3D=3D0:type=3D=
=3D=3D"$=3D"?value.substr(value.length-check.length)=3D=3D=3Dcheck:type=3D=
=3D=3D"|=3D"?value=3D=3D=3Dcheck||value.substr(0,check.length+1)=3D=3D=3D=
check+"-":false},POS:function(elem,match,i,array){var =
name=3Dmatch[2],filter=3DExpr.setFilters[name];if(filter){return =
filter(elem,i,match,array)}}}};var origPOS=3DExpr.match.POS;for(var type =
in =
Expr.match){Expr.match[type]=3DRegExp(Expr.match[type].source+/(?![^\[]*\=
])(?![^\(]*\))/.source)}var =
makeArray=3Dfunction(array,results){array=3DArray.prototype.slice.call(ar=
ray);if(results){results.push.apply(results,array);return results}return =
array};try{Array.prototype.slice.call(document.documentElement.childNodes=
)}catch(e){makeArray=3Dfunction(array,results){var =
ret=3Dresults||[];if(toString.call(array)=3D=3D=3D"[object =
Array]"){Array.prototype.push.apply(ret,array)}else{if(typeof =
array.length=3D=3D=3D"number"){for(var =
i=3D0,l=3Darray.length;i<l;i++){ret.push(array[i])}}else{for(var =
i=3D0;array[i];i++){ret.push(array[i])}}}return ret}}var =
sortOrder;if(document.documentElement.compareDocumentPosition){sortOrder=3D=
function(a,b){var =
ret=3Da.compareDocumentPosition(b)&4?-1:a=3D=3D=3Db?0:1;if(ret=3D=3D=3D0)=
{hasDuplicate=3Dtrue}return ret}}else{if("sourceIndex" in =
document.documentElement){sortOrder=3Dfunction(a,b){var =
ret=3Da.sourceIndex-b.sourceIndex;if(ret=3D=3D=3D0){hasDuplicate=3Dtrue}r=
eturn ret}}else{if(document.createRange){sortOrder=3Dfunction(a,b){var =
aRange=3Da.ownerDocument.createRange(),bRange=3Db.ownerDocument.createRan=
ge();aRange.selectNode(a);aRange.collapse(true);bRange.selectNode(b);bRan=
ge.collapse(true);var =
ret=3DaRange.compareBoundaryPoints(Range.START_TO_END,bRange);if(ret=3D=3D=
=3D0){hasDuplicate=3Dtrue}return ret}}}}(function(){var =
form=3Ddocument.createElement("form"),id=3D"script"+(new =
Date).getTime();form.innerHTML=3D"<input name=3D'"+id+"'/>";var =
root=3Ddocument.documentElement;root.insertBefore(form,root.firstChild);i=
f(!!document.getElementById(id)){Expr.find.ID=3Dfunction(match,context,is=
XML){if(typeof context.getElementById!=3D=3D"undefined"&&!isXML){var =
m=3Dcontext.getElementById(match[1]);return =
m?m.id=3D=3D=3Dmatch[1]||typeof =
m.getAttributeNode!=3D=3D"undefined"&&m.getAttributeNode("id").nodeValue=3D=
=3D=3Dmatch[1]?[m]:undefined:[]}};Expr.filter.ID=3Dfunction(elem,match){v=
ar node=3Dtypeof =
elem.getAttributeNode!=3D=3D"undefined"&&elem.getAttributeNode("id");retu=
rn =
elem.nodeType=3D=3D=3D1&&node&&node.nodeValue=3D=3D=3Dmatch}}root.removeC=
hild(form)})();(function(){var =
div=3Ddocument.createElement("div");div.appendChild(document.createCommen=
t(""));if(div.getElementsByTagName("*").length>0){Expr.find.TAG=3Dfunctio=
n(match,context){var =
results=3Dcontext.getElementsByTagName(match[1]);if(match[1]=3D=3D=3D"*")=
{var tmp=3D[];for(var =
i=3D0;results[i];i++){if(results[i].nodeType=3D=3D=3D1){tmp.push(results[=
i])}}results=3Dtmp}return results}}div.innerHTML=3D"<a =
href=3D'#'></a>";if(div.firstChild&&typeof =
div.firstChild.getAttribute!=3D=3D"undefined"&&div.firstChild.getAttribut=
e("href")!=3D=3D"#"){Expr.attrHandle.href=3Dfunction(elem){return =
elem.getAttribute("href",2)}}})();if(document.querySelectorAll){(function=
(){var =
oldSizzle=3DSizzle,div=3Ddocument.createElement("div");div.innerHTML=3D"<=
p =
class=3D'TEST'></p>";if(div.querySelectorAll&&div.querySelectorAll(".TEST=
").length=3D=3D=3D0){return =
}Sizzle=3Dfunction(query,context,extra,seed){context=3Dcontext||document;=
if(!seed&&context.nodeType=3D=3D=3D9&&!isXML(context)){try{return =
makeArray(context.querySelectorAll(query),extra)}catch(e){}}return =
oldSizzle(query,context,extra,seed)};Sizzle.find=3DoldSizzle.find;Sizzle.=
filter=3DoldSizzle.filter;Sizzle.selectors=3DoldSizzle.selectors;Sizzle.m=
atches=3DoldSizzle.matches})()}if(document.getElementsByClassName&&docume=
nt.documentElement.getElementsByClassName){(function(){var =
div=3Ddocument.createElement("div");div.innerHTML=3D"<div class=3D'test =
e'></div><div =
class=3D'test'></div>";if(div.getElementsByClassName("e").length=3D=3D=3D=
0){return =
}div.lastChild.className=3D"e";if(div.getElementsByClassName("e").length=3D=
=3D=3D1){return =
}Expr.order.splice(1,0,"CLASS");Expr.find.CLASS=3Dfunction(match,context,=
isXML){if(typeof =
context.getElementsByClassName!=3D=3D"undefined"&&!isXML){return =
context.getElementsByClassName(match[1])}}})()}function =
dirNodeCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var =
sibDir=3Ddir=3D=3D"previousSibling"&&!isXML;for(var =
i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){if(sibDir&&elem.nodeType=3D=3D=3D1){elem.sizc=
ache=3DdoneName;elem.sizset=3Di}elem=3Delem[dir];var =
match=3Dfalse;while(elem){if(elem.sizcache=3D=3D=3DdoneName){match=3Dchec=
kSet[elem.sizset];break}if(elem.nodeType=3D=3D=3D1&&!isXML){elem.sizcache=
=3DdoneName;elem.sizset=3Di}if(elem.nodeName=3D=3D=3Dcur){match=3Delem;br=
eak}elem=3Delem[dir]}checkSet[i]=3Dmatch}}}function =
dirCheck(dir,cur,doneName,checkSet,nodeCheck,isXML){var =
sibDir=3Ddir=3D=3D"previousSibling"&&!isXML;for(var =
i=3D0,l=3DcheckSet.length;i<l;i++){var =
elem=3DcheckSet[i];if(elem){if(sibDir&&elem.nodeType=3D=3D=3D1){elem.sizc=
ache=3DdoneName;elem.sizset=3Di}elem=3Delem[dir];var =
match=3Dfalse;while(elem){if(elem.sizcache=3D=3D=3DdoneName){match=3Dchec=
kSet[elem.sizset];break}if(elem.nodeType=3D=3D=3D1){if(!isXML){elem.sizca=
che=3DdoneName;elem.sizset=3Di}if(typeof =
cur!=3D=3D"string"){if(elem=3D=3D=3Dcur){match=3Dtrue;break}}else{if(Sizz=
le.filter(cur,[elem]).length>0){match=3Delem;break}}}elem=3Delem[dir]}che=
ckSet[i]=3Dmatch}}}var =
contains=3Ddocument.compareDocumentPosition?function(a,b){return =
a.compareDocumentPosition(b)&16}:function(a,b){return =
a!=3D=3Db&&(a.contains?a.contains(b):true)};var =
isXML=3Dfunction(elem){return =
elem.nodeType=3D=3D=3D9&&elem.documentElement.nodeName!=3D=3D"HTML"||!!el=
em.ownerDocument&&isXML(elem.ownerDocument)};var =
posProcess=3Dfunction(selector,context){var =
tmpSet=3D[],later=3D"",match,root=3Dcontext.nodeType?[context]:context;wh=
ile((match=3DExpr.match.PSEUDO.exec(selector))){later+=3Dmatch[0];selecto=
r=3Dselector.replace(Expr.match.PSEUDO,"")}selector=3DExpr.relative[selec=
tor]?selector+"*":selector;for(var =
i=3D0,l=3Droot.length;i<l;i++){Sizzle(selector,root[i],tmpSet)}return =
Sizzle.filter(later,tmpSet)};jQuery.find=3DSizzle;jQuery.filter=3DSizzle.=
filter;jQuery.expr=3DSizzle.selectors;jQuery.expr[":"]=3DjQuery.expr.filt=
ers;Sizzle.selectors.filters.hidden=3Dfunction(elem){return =
elem.offsetWidth=3D=3D=3D0||elem.offsetHeight=3D=3D=3D0};Sizzle.selectors=
.filters.visible=3Dfunction(elem){return =
elem.offsetWidth>0||elem.offsetHeight>0};Sizzle.selectors.filters.animate=
d=3Dfunction(elem){return jQuery.grep(jQuery.timers,function(fn){return =
elem=3D=3D=3Dfn.elem}).length};jQuery.multiFilter=3Dfunction(expr,elems,n=
ot){if(not){expr=3D":not("+expr+")"}return =
Sizzle.matches(expr,elems)};jQuery.dir=3Dfunction(elem,dir){var =
matched=3D[],cur=3Delem[dir];while(cur&&cur!=3Ddocument){if(cur.nodeType=3D=
=3D1){matched.push(cur)}cur=3Dcur[dir]}return =
matched};jQuery.nth=3Dfunction(cur,result,dir,elem){result=3Dresult||1;va=
r =
num=3D0;for(;cur;cur=3Dcur[dir]){if(cur.nodeType=3D=3D1&&++num=3D=3Dresul=
t){break}}return cur};jQuery.sibling=3Dfunction(n,elem){var =
r=3D[];for(;n;n=3Dn.nextSibling){if(n.nodeType=3D=3D1&&n!=3Delem){r.push(=
n)}}return r};return =
;window.Sizzle=3DSizzle})();jQuery.event=3D{add:function(elem,types,handl=
er,data){if(elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){return =
}if(elem.setInterval&&elem!=3Dwindow){elem=3Dwindow}if(!handler.guid){han=
dler.guid=3Dthis.guid++}if(data!=3D=3Dundefined){var =
fn=3Dhandler;handler=3Dthis.proxy(fn);handler.data=3Ddata}var =
events=3DjQuery.data(elem,"events")||jQuery.data(elem,"events",{}),handle=
=3DjQuery.data(elem,"handle")||jQuery.data(elem,"handle",function(){retur=
n typeof =
jQuery!=3D=3D"undefined"&&!jQuery.event.triggered?jQuery.event.handle.app=
ly(arguments.callee.elem,arguments):undefined});handle.elem=3Delem;jQuery=
.each(types.split(/\s+/),function(index,type){var =
namespaces=3Dtype.split(".");type=3Dnamespaces.shift();handler.type=3Dnam=
espaces.slice().sort().join(".");var =
handlers=3Devents[type];if(jQuery.event.specialAll[type]){jQuery.event.sp=
ecialAll[type].setup.call(elem,data,namespaces)}if(!handlers){handlers=3D=
events[type]=3D{};if(!jQuery.event.special[type]||jQuery.event.special[ty=
pe].setup.call(elem,data,namespaces)=3D=3D=3Dfalse){if(elem.addEventListe=
ner){elem.addEventListener(type,handle,false)}else{if(elem.attachEvent){e=
lem.attachEvent("on"+type,handle)}}}}handlers[handler.guid]=3Dhandler;jQu=
ery.event.global[type]=3Dtrue});elem=3Dnull},guid:1,global:{},remove:func=
tion(elem,types,handler){if(elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){r=
eturn }var =
events=3DjQuery.data(elem,"events"),ret,index;if(events){if(types=3D=3D=3D=
undefined||(typeof =
types=3D=3D=3D"string"&&types.charAt(0)=3D=3D".")){for(var type in =
events){this.remove(elem,type+(types||""))}}else{if(types.type){handler=3D=
types.handler;types=3Dtypes.type}jQuery.each(types.split(/\s+/),function(=
index,type){var =
namespaces=3Dtype.split(".");type=3Dnamespaces.shift();var =
namespace=3DRegExp("(^|\\.)"+namespaces.slice().sort().join(".*\\.")+"(\\=
.|$)");if(events[type]){if(handler){delete =
events[type][handler.guid]}else{for(var handle in =
events[type]){if(namespace.test(events[type][handle].type)){delete =
events[type][handle]}}}if(jQuery.event.specialAll[type]){jQuery.event.spe=
cialAll[type].teardown.call(elem,namespaces)}for(ret in =
events[type]){break}if(!ret){if(!jQuery.event.special[type]||jQuery.event=
.special[type].teardown.call(elem,namespaces)=3D=3D=3Dfalse){if(elem.remo=
veEventListener){elem.removeEventListener(type,jQuery.data(elem,"handle")=
,false)}else{if(elem.detachEvent){elem.detachEvent("on"+type,jQuery.data(=
elem,"handle"))}}}ret=3Dnull;delete events[type]}}})}for(ret in =
events){break}if(!ret){var =
handle=3DjQuery.data(elem,"handle");if(handle){handle.elem=3Dnull}jQuery.=
removeData(elem,"events");jQuery.removeData(elem,"handle")}}},trigger:fun=
ction(event,data,elem,bubbling){var =
type=3Devent.type||event;if(!bubbling){event=3Dtypeof =
event=3D=3D=3D"object"?event[expando]?event:jQuery.extend(jQuery.Event(ty=
pe),event):jQuery.Event(type);if(type.indexOf("!")>=3D0){event.type=3Dtyp=
e=3Dtype.slice(0,-1);event.exclusive=3Dtrue}if(!elem){event.stopPropagati=
on();if(this.global[type]){jQuery.each(jQuery.cache,function(){if(this.ev=
ents&&this.events[type]){jQuery.event.trigger(event,data,this.handle.elem=
)}})}}if(!elem||elem.nodeType=3D=3D3||elem.nodeType=3D=3D8){return =
undefined}event.result=3Dundefined;event.target=3Delem;data=3DjQuery.make=
Array(data);data.unshift(event)}event.currentTarget=3Delem;var =
handle=3DjQuery.data(elem,"handle");if(handle){handle.apply(elem,data)}if=
((!elem[type]||(jQuery.nodeName(elem,"a")&&type=3D=3D"click"))&&elem["on"=
+type]&&elem["on"+type].apply(elem,data)=3D=3D=3Dfalse){event.result=3Dfa=
lse}if(!bubbling&&elem[type]&&!event.isDefaultPrevented()&&!(jQuery.nodeN=
ame(elem,"a")&&type=3D=3D"click")){this.triggered=3Dtrue;try{elem[type]()=
}catch(e){}}this.triggered=3Dfalse;if(!event.isPropagationStopped()){var =
parent=3Delem.parentNode||elem.ownerDocument;if(parent){jQuery.event.trig=
ger(event,data,parent,true)}}},handle:function(event){var =
all,handlers;event=3Darguments[0]=3DjQuery.event.fix(event||window.event)=
;event.currentTarget=3Dthis;var =
namespaces=3Devent.type.split(".");event.type=3Dnamespaces.shift();all=3D=
!namespaces.length&&!event.exclusive;var =
namespace=3DRegExp("(^|\\.)"+namespaces.slice().sort().join(".*\\.")+"(\\=
.|$)");handlers=3D(jQuery.data(this,"events")||{})[event.type];for(var j =
in handlers){var =
handler=3Dhandlers[j];if(all||namespace.test(handler.type)){event.handler=
=3Dhandler;event.data=3Dhandler.data;var =
ret=3Dhandler.apply(this,arguments);if(ret!=3D=3Dundefined){event.result=3D=
ret;if(ret=3D=3D=3Dfalse){event.preventDefault();event.stopPropagation()}=
}if(event.isImmediatePropagationStopped()){break}}}},props:"altKey =
attrChange attrName bubbles button cancelable charCode clientX clientY =
ctrlKey currentTarget data detail eventPhase fromElement handler keyCode =
metaKey newValue originalTarget pageX pageY prevValue relatedNode =
relatedTarget screenX screenY shiftKey srcElement target toElement view =
wheelDelta which".split(" =
"),fix:function(event){if(event[expando]){return event}var =
originalEvent=3Devent;event=3DjQuery.Event(originalEvent);for(var =
i=3Dthis.props.length,prop;i;){prop=3Dthis.props[--i];event[prop]=3Dorigi=
nalEvent[prop]}if(!event.target){event.target=3Devent.srcElement||documen=
t}if(event.target.nodeType=3D=3D3){event.target=3Devent.target.parentNode=
}if(!event.relatedTarget&&event.fromElement){event.relatedTarget=3Devent.=
fromElement=3D=3Devent.target?event.toElement:event.fromElement}if(event.=
pageX=3D=3Dnull&&event.clientX!=3Dnull){var =
doc=3Ddocument.documentElement,body=3Ddocument.body;event.pageX=3Devent.c=
lientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc.clientLeft||0=
);event.pageY=3Devent.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||=
0)-(doc.clientTop||0)}if(!event.which&&((event.charCode||event.charCode=3D=
=3D=3D0)?event.charCode:event.keyCode)){event.which=3Devent.charCode||eve=
nt.keyCode}if(!event.metaKey&&event.ctrlKey){event.metaKey=3Devent.ctrlKe=
y}if(!event.which&&event.button){event.which=3D(event.button&1?1:(event.b=
utton&2?3:(event.button&4?2:0)))}return =
event},proxy:function(fn,proxy){proxy=3Dproxy||function(){return =
fn.apply(this,arguments)};proxy.guid=3Dfn.guid=3Dfn.guid||proxy.guid||thi=
s.guid++;return =
proxy},special:{ready:{setup:bindReady,teardown:function(){}}},specialAll=
:{live:{setup:function(selector,namespaces){jQuery.event.add(this,namespa=
ces[0],liveHandler)},teardown:function(namespaces){if(namespaces.length){=
var =
remove=3D0,name=3DRegExp("(^|\\.)"+namespaces[0]+"(\\.|$)");jQuery.each((=
jQuery.data(this,"events").live||{}),function(){if(name.test(this.type)){=
remove++}});if(remove<1){jQuery.event.remove(this,namespaces[0],liveHandl=
er)}}}}}};jQuery.Event=3Dfunction(src){if(!this.preventDefault){return =
new =
jQuery.Event(src)}if(src&&src.type){this.originalEvent=3Dsrc;this.type=3D=
src.type}else{this.type=3Dsrc}this.timeStamp=3Dnow();this[expando]=3Dtrue=
};function returnFalse(){return false}function returnTrue(){return =
true}jQuery.Event.prototype=3D{preventDefault:function(){this.isDefaultPr=
evented=3DreturnTrue;var e=3Dthis.originalEvent;if(!e){return =
}if(e.preventDefault){e.preventDefault()}e.returnValue=3Dfalse},stopPropa=
gation:function(){this.isPropagationStopped=3DreturnTrue;var =
e=3Dthis.originalEvent;if(!e){return =
}if(e.stopPropagation){e.stopPropagation()}e.cancelBubble=3Dtrue},stopImm=
ediatePropagation:function(){this.isImmediatePropagationStopped=3DreturnT=
rue;this.stopPropagation()},isDefaultPrevented:returnFalse,isPropagationS=
topped:returnFalse,isImmediatePropagationStopped:returnFalse};var =
withinElement=3Dfunction(event){var =
parent=3Devent.relatedTarget;while(parent&&parent!=3Dthis){try{parent=3Dp=
arent.parentNode}catch(e){parent=3Dthis}}if(parent!=3Dthis){event.type=3D=
event.data;jQuery.event.handle.apply(this,arguments)}};jQuery.each({mouse=
over:"mouseenter",mouseout:"mouseleave"},function(orig,fix){jQuery.event.=
special[fix]=3D{setup:function(){jQuery.event.add(this,orig,withinElement=
,fix)},teardown:function(){jQuery.event.remove(this,orig,withinElement)}}=
});jQuery.fn.extend({bind:function(type,data,fn){return =
type=3D=3D"unload"?this.one(type,data,fn):this.each(function(){jQuery.eve=
nt.add(this,type,fn||data,fn&&data)})},one:function(type,data,fn){var =
one=3DjQuery.event.proxy(fn||data,function(event){jQuery(this).unbind(eve=
nt,one);return(fn||data).apply(this,arguments)});return =
this.each(function(){jQuery.event.add(this,type,one,fn&&data)})},unbind:f=
unction(type,fn){return =
this.each(function(){jQuery.event.remove(this,type,fn)})},trigger:functio=
n(type,data){return =
this.each(function(){jQuery.event.trigger(type,data,this)})},triggerHandl=
er:function(type,data){if(this[0]){var =
event=3DjQuery.Event(type);event.preventDefault();event.stopPropagation()=
;jQuery.event.trigger(event,data,this[0]);return =
event.result}},toggle:function(fn){var =
args=3Darguments,i=3D1;while(i<args.length){jQuery.event.proxy(fn,args[i+=
+])}return =
this.click(jQuery.event.proxy(fn,function(event){this.lastToggle=3D(this.=
lastToggle||0)%i;event.preventDefault();return =
args[this.lastToggle++].apply(this,arguments)||false}))},hover:function(f=
nOver,fnOut){return =
this.mouseenter(fnOver).mouseleave(fnOut)},ready:function(fn){bindReady()=
;if(jQuery.isReady){fn.call(document,jQuery)}else{jQuery.readyList.push(f=
n)}return this},live:function(type,fn){var =
proxy=3DjQuery.event.proxy(fn);proxy.guid+=3Dthis.selector+type;jQuery(do=
cument).bind(liveConvert(type,this.selector),this.selector,proxy);return =
this},die:function(type,fn){jQuery(document).unbind(liveConvert(type,this=
.selector),fn?{guid:fn.guid+this.selector+type}:null);return =
this}});function liveHandler(event){var =
check=3DRegExp("(^|\\.)"+event.type+"(\\.|$)"),stop=3Dtrue,elems=3D[];jQu=
ery.each(jQuery.data(this,"events").live||[],function(i,fn){if(check.test=
(fn.type)){var =
elem=3DjQuery(event.target).closest(fn.data)[0];if(elem){elems.push({elem=
:elem,fn:fn})}}});elems.sort(function(a,b){return =
jQuery.data(a.elem,"closest")-jQuery.data(b.elem,"closest")});jQuery.each=
(elems,function(){if(this.fn.call(this.elem,event,this.fn.data)=3D=3D=3Df=
alse){return(stop=3Dfalse)}});return stop}function =
liveConvert(type,selector){return["live",type,selector.replace(/\./g,"`")=
.replace(/ =
/g,"|")].join(".")}jQuery.extend({isReady:false,readyList:[],ready:functi=
on(){if(!jQuery.isReady){jQuery.isReady=3Dtrue;if(jQuery.readyList){jQuer=
y.each(jQuery.readyList,function(){this.call(document,jQuery)});jQuery.re=
adyList=3Dnull}jQuery(document).triggerHandler("ready")}}});var =
readyBound=3Dfalse;function bindReady(){if(readyBound){return =
}readyBound=3Dtrue;if(document.addEventListener){document.addEventListene=
r("DOMContentLoaded",function(){document.removeEventListener("DOMContentL=
oaded",arguments.callee,false);jQuery.ready()},false)}else{if(document.at=
tachEvent){document.attachEvent("onreadystatechange",function(){if(docume=
nt.readyState=3D=3D=3D"complete"){document.detachEvent("onreadystatechang=
e",arguments.callee);jQuery.ready()}});if(document.documentElement.doScro=
ll&&window=3D=3Dwindow.top){(function(){if(jQuery.isReady){return =
}try{document.documentElement.doScroll("left")}catch(error){setTimeout(ar=
guments.callee,0);return =
}jQuery.ready()})()}}}jQuery.event.add(window,"load",jQuery.ready)}jQuery=
.each(("blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mou=
seup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,sub=
mit,keydown,keypress,keyup,error").split(","),function(i,name){jQuery.fn[=
name]=3Dfunction(fn){return =
fn?this.bind(name,fn):this.trigger(name)}});jQuery(window).bind("unload",=
function(){for(var id in =
jQuery.cache){if(id!=3D1&&jQuery.cache[id].handle){jQuery.event.remove(jQ=
uery.cache[id].handle.elem)}}});(function(){jQuery.support=3D{};var =
root=3Ddocument.documentElement,script=3Ddocument.createElement("script")=
,div=3Ddocument.createElement("div"),id=3D"script"+(new =
Date).getTime();div.style.display=3D"none";div.innerHTML=3D'   =
<link/><table></table><a href=3D"/a" =
style=3D"color:red;float:left;opacity:.5;">a</a><select><option>text</opt=
ion></select><object><param/></object>';var =
all=3Ddiv.getElementsByTagName("*"),a=3Ddiv.getElementsByTagName("a")[0];=
if(!all||!all.length||!a){return =
}jQuery.support=3D{leadingWhitespace:div.firstChild.nodeType=3D=3D3,tbody=
:!div.getElementsByTagName("tbody").length,objectAll:!!div.getElementsByT=
agName("object")[0].getElementsByTagName("*").length,htmlSerialize:!!div.=
getElementsByTagName("link").length,style:/red/.test(a.getAttribute("styl=
e")),hrefNormalized:a.getAttribute("href")=3D=3D=3D"/a",opacity:a.style.o=
pacity=3D=3D=3D"0.5",cssFloat:!!a.style.cssFloat,scriptEval:false,noClone=
Event:true,boxModel:null};script.type=3D"text/javascript";try{script.appe=
ndChild(document.createTextNode("window."+id+"=3D1;"))}catch(e){}root.ins=
ertBefore(script,root.firstChild);if(window[id]){jQuery.support.scriptEva=
l=3Dtrue;delete =
window[id]}root.removeChild(script);if(div.attachEvent&&div.fireEvent){di=
v.attachEvent("onclick",function(){jQuery.support.noCloneEvent=3Dfalse;di=
v.detachEvent("onclick",arguments.callee)});div.cloneNode(true).fireEvent=
("onclick")}jQuery(function(){var =
div=3Ddocument.createElement("div");div.style.width=3Ddiv.style.paddingLe=
ft=3D"1px";document.body.appendChild(div);jQuery.boxModel=3DjQuery.suppor=
t.boxModel=3Ddiv.offsetWidth=3D=3D=3D2;document.body.removeChild(div).sty=
le.display=3D"none"})})();var =
styleFloat=3DjQuery.support.cssFloat?"cssFloat":"styleFloat";jQuery.props=
=3D{"for":"htmlFor","class":"className","float":styleFloat,cssFloat:style=
Float,styleFloat:styleFloat,readonly:"readOnly",maxlength:"maxLength",cel=
lspacing:"cellSpacing",rowspan:"rowSpan",tabindex:"tabIndex"};jQuery.fn.e=
xtend({_load:jQuery.fn.load,load:function(url,params,callback){if(typeof =
url!=3D=3D"string"){return this._load(url)}var off=3Durl.indexOf(" =
");if(off>=3D0){var =
selector=3Durl.slice(off,url.length);url=3Durl.slice(0,off)}var =
type=3D"GET";if(params){if(jQuery.isFunction(params)){callback=3Dparams;p=
arams=3Dnull}else{if(typeof =
params=3D=3D=3D"object"){params=3DjQuery.param(params);type=3D"POST"}}}va=
r =
self=3Dthis;jQuery.ajax({url:url,type:type,dataType:"html",data:params,co=
mplete:function(res,status){if(status=3D=3D"success"||status=3D=3D"notmod=
ified"){self.html(selector?jQuery("<div/>").append(res.responseText.repla=
ce(/<script(.|\s)*?\/script>/g,"")).find(selector):res.responseText)}if(c=
allback){self.each(callback,[res.responseText,status,res])}}});return =
this},serialize:function(){return =
jQuery.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?jQuery.makeArray(this.elements):this}).filter(function(){re=
turn =
this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.no=
deName)||/text|hidden|password|search/i.test(this.type))}).map(function(i=
,elem){var val=3DjQuery(this).val();return =
val=3D=3Dnull?null:jQuery.isArray(val)?jQuery.map(val,function(val,i){ret=
urn{name:elem.name,value:val}}):{name:elem.name,value:val}}).get()}});jQu=
ery.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend"=
.split(","),function(i,o){jQuery.fn[o]=3Dfunction(f){return =
this.bind(o,f)}});var =
jsc=3Dnow();jQuery.extend({get:function(url,data,callback,type){if(jQuery=
.isFunction(data)){callback=3Ddata;data=3Dnull}return =
jQuery.ajax({type:"GET",url:url,data:data,success:callback,dataType:type}=
)},getScript:function(url,callback){return =
jQuery.get(url,null,callback,"script")},getJSON:function(url,data,callbac=
k){return =
jQuery.get(url,data,callback,"json")},post:function(url,data,callback,typ=
e){if(jQuery.isFunction(data)){callback=3Ddata;data=3D{}}return =
jQuery.ajax({type:"POST",url:url,data:data,success:callback,dataType:type=
})},ajaxSetup:function(settings){jQuery.extend(jQuery.ajaxSettings,settin=
gs)},ajaxSettings:{url:location.href,global:true,type:"GET",contentType:"=
application/x-www-form-urlencoded",processData:true,async:true,xhr:functi=
on(){return window.ActiveXObject?new =
ActiveXObject("Microsoft.XMLHTTP"):new =
XMLHttpRequest()},accepts:{xml:"application/xml, =
text/xml",html:"text/html",script:"text/javascript, =
application/javascript",json:"application/json, =
text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:=
function(s){s=3DjQuery.extend(true,s,jQuery.extend(true,{},jQuery.ajaxSet=
tings,s));var =
jsonp,jsre=3D/=3D\?(&|$)/g,status,data,type=3Ds.type.toUpperCase();if(s.d=
ata&&s.processData&&typeof =
s.data!=3D=3D"string"){s.data=3DjQuery.param(s.data)}if(s.dataType=3D=3D"=
jsonp"){if(type=3D=3D"GET"){if(!s.url.match(jsre)){s.url+=3D(s.url.match(=
/\?/)?"&":"?")+(s.jsonp||"callback")+"=3D?"}}else{if(!s.data||!s.data.mat=
ch(jsre)){s.data=3D(s.data?s.data+"&":"")+(s.jsonp||"callback")+"=3D?"}}s=
.dataType=3D"json"}if(s.dataType=3D=3D"json"&&(s.data&&s.data.match(jsre)=
||s.url.match(jsre))){jsonp=3D"jsonp"+jsc++;if(s.data){s.data=3D(s.data+"=
").replace(jsre,"=3D"+jsonp+"$1")}s.url=3Ds.url.replace(jsre,"=3D"+jsonp+=
"$1");s.dataType=3D"script";window[jsonp]=3Dfunction(tmp){data=3Dtmp;succ=
ess();complete();window[jsonp]=3Dundefined;try{delete =
window[jsonp]}catch(e){}if(head){head.removeChild(script)}}}if(s.dataType=
=3D=3D"script"&&s.cache=3D=3Dnull){s.cache=3Dfalse}if(s.cache=3D=3D=3Dfal=
se&&type=3D=3D"GET"){var ts=3Dnow();var =
ret=3Ds.url.replace(/(\?|&)_=3D.*?(&|$)/,"$1_=3D"+ts+"$2");s.url=3Dret+((=
ret=3D=3Ds.url)?(s.url.match(/\?/)?"&":"?")+"_=3D"+ts:"")}if(s.data&&type=
=3D=3D"GET"){s.url+=3D(s.url.match(/\?/)?"&":"?")+s.data;s.data=3Dnull}if=
(s.global&&!jQuery.active++){jQuery.event.trigger("ajaxStart")}var =
parts=3D/^(\w+:)?\/\/([^\/?#]+)/.exec(s.url);if(s.dataType=3D=3D"script"&=
&type=3D=3D"GET"&&parts&&(parts[1]&&parts[1]!=3Dlocation.protocol||parts[=
2]!=3Dlocation.host)){var =
head=3Ddocument.getElementsByTagName("head")[0];var =
script=3Ddocument.createElement("script");script.src=3Ds.url;if(s.scriptC=
harset){script.charset=3Ds.scriptCharset}if(!jsonp){var =
done=3Dfalse;script.onload=3Dscript.onreadystatechange=3Dfunction(){if(!d=
one&&(!this.readyState||this.readyState=3D=3D"loaded"||this.readyState=3D=
=3D"complete")){done=3Dtrue;success();complete();script.onload=3Dscript.o=
nreadystatechange=3Dnull;head.removeChild(script)}}}head.appendChild(scri=
pt);return undefined}var requestDone=3Dfalse;var =
xhr=3Ds.xhr();if(s.username){xhr.open(type,s.url,s.async,s.username,s.pas=
sword)}else{xhr.open(type,s.url,s.async)}try{if(s.data){xhr.setRequestHea=
der("Content-Type",s.contentType)}if(s.ifModified){xhr.setRequestHeader("=
If-Modified-Since",jQuery.lastModified[s.url]||"Thu, 01 Jan 1970 =
00:00:00 =
GMT")}xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.setRe=
questHeader("Accept",s.dataType&&s.accepts[s.dataType]?s.accepts[s.dataTy=
pe]+", =
*/*":s.accepts._default)}catch(e){}if(s.beforeSend&&s.beforeSend(xhr,s)=3D=
=3D=3Dfalse){if(s.global&&!--jQuery.active){jQuery.event.trigger("ajaxSto=
p")}xhr.abort();return =
false}if(s.global){jQuery.event.trigger("ajaxSend",[xhr,s])}var =
onreadystatechange=3Dfunction(isTimeout){if(xhr.readyState=3D=3D0){if(iva=
l){clearInterval(ival);ival=3Dnull;if(s.global&&!--jQuery.active){jQuery.=
event.trigger("ajaxStop")}}}else{if(!requestDone&&xhr&&(xhr.readyState=3D=
=3D4||isTimeout=3D=3D"timeout")){requestDone=3Dtrue;if(ival){clearInterva=
l(ival);ival=3Dnull}status=3DisTimeout=3D=3D"timeout"?"timeout":!jQuery.h=
ttpSuccess(xhr)?"error":s.ifModified&&jQuery.httpNotModified(xhr,s.url)?"=
notmodified":"success";if(status=3D=3D"success"){try{data=3DjQuery.httpDa=
ta(xhr,s.dataType,s)}catch(e){status=3D"parsererror"}}if(status=3D=3D"suc=
cess"){var =
modRes;try{modRes=3Dxhr.getResponseHeader("Last-Modified")}catch(e){}if(s=
.ifModified&&modRes){jQuery.lastModified[s.url]=3DmodRes}if(!jsonp){succe=
ss()}}else{jQuery.handleError(s,xhr,status)}complete();if(isTimeout){xhr.=
abort()}if(s.async){xhr=3Dnull}}}};if(s.async){var =
ival=3DsetInterval(onreadystatechange,13);if(s.timeout>0){setTimeout(func=
tion(){if(xhr&&!requestDone){onreadystatechange("timeout")}},s.timeout)}}=
try{xhr.send(s.data)}catch(e){jQuery.handleError(s,xhr,null,e)}if(!s.asyn=
c){onreadystatechange()}function =
success(){if(s.success){s.success(data,status)}if(s.global){jQuery.event.=
trigger("ajaxSuccess",[xhr,s])}}function =
complete(){if(s.complete){s.complete(xhr,status)}if(s.global){jQuery.even=
t.trigger("ajaxComplete",[xhr,s])}if(s.global&&!--jQuery.active){jQuery.e=
vent.trigger("ajaxStop")}}return =
xhr},handleError:function(s,xhr,status,e){if(s.error){s.error(xhr,status,=
e)}if(s.global){jQuery.event.trigger("ajaxError",[xhr,s,e])}},active:0,ht=
tpSuccess:function(xhr){try{return =
!xhr.status&&location.protocol=3D=3D"file:"||(xhr.status>=3D200&&xhr.stat=
us<300)||xhr.status=3D=3D304||xhr.status=3D=3D1223}catch(e){}return =
false},httpNotModified:function(xhr,url){try{var =
xhrRes=3Dxhr.getResponseHeader("Last-Modified");return =
xhr.status=3D=3D304||xhrRes=3D=3DjQuery.lastModified[url]}catch(e){}retur=
n false},httpData:function(xhr,type,s){var =
ct=3Dxhr.getResponseHeader("content-type"),xml=3Dtype=3D=3D"xml"||!type&&=
ct&&ct.indexOf("xml")>=3D0,data=3Dxml?xhr.responseXML:xhr.responseText;if=
(xml&&data.documentElement.tagName=3D=3D"parsererror"){throw"parsererror"=
}if(s&&s.dataFilter){data=3Ds.dataFilter(data,type)}if(typeof =
data=3D=3D=3D"string"){if(type=3D=3D"script"){jQuery.globalEval(data)}if(=
type=3D=3D"json"){data=3Dwindow["eval"]("("+data+")")}}return =
data},param:function(a){var s=3D[];function =
add(key,value){s[s.length]=3DencodeURIComponent(key)+"=3D"+encodeURICompo=
nent(value)}if(jQuery.isArray(a)||a.jquery){jQuery.each(a,function(){add(=
this.name,this.value)})}else{for(var j in =
a){if(jQuery.isArray(a[j])){jQuery.each(a[j],function(){add(j,this)})}els=
e{add(j,jQuery.isFunction(a[j])?a[j]():a[j])}}}return =
s.join("&").replace(/%20/g,"+")}});var =
elemdisplay=3D{},timerId,fxAttrs=3D[["height","marginTop","marginBottom",=
"paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddin=
gLeft","paddingRight"],["opacity"]];function genFx(type,num){var =
obj=3D{};jQuery.each(fxAttrs.concat.apply([],fxAttrs.slice(0,num)),functi=
on(){obj[this]=3Dtype});return =
obj}jQuery.fn.extend({show:function(speed,callback){if(speed){return =
this.animate(genFx("show",3),speed,callback)}else{for(var =
i=3D0,l=3Dthis.length;i<l;i++){var =
old=3DjQuery.data(this[i],"olddisplay");this[i].style.display=3Dold||"";i=
f(jQuery.css(this[i],"display")=3D=3D=3D"none"){var =
tagName=3Dthis[i].tagName,display;if(elemdisplay[tagName]){display=3Delem=
display[tagName]}else{var elem=3DjQuery("<"+tagName+" =
/>").appendTo("body");display=3Delem.css("display");if(display=3D=3D=3D"n=
one"){display=3D"block"}elem.remove();elemdisplay[tagName]=3Ddisplay}jQue=
ry.data(this[i],"olddisplay",display)}}for(var =
i=3D0,l=3Dthis.length;i<l;i++){this[i].style.display=3DjQuery.data(this[i=
],"olddisplay")||""}return =
this}},hide:function(speed,callback){if(speed){return =
this.animate(genFx("hide",3),speed,callback)}else{for(var =
i=3D0,l=3Dthis.length;i<l;i++){var =
old=3DjQuery.data(this[i],"olddisplay");if(!old&&old!=3D=3D"none"){jQuery=
.data(this[i],"olddisplay",jQuery.css(this[i],"display"))}}for(var =
i=3D0,l=3Dthis.length;i<l;i++){this[i].style.display=3D"none"}return =
this}},_toggle:jQuery.fn.toggle,toggle:function(fn,fn2){var =
bool=3Dtypeof fn=3D=3D=3D"boolean";return =
jQuery.isFunction(fn)&&jQuery.isFunction(fn2)?this._toggle.apply(this,arg=
uments):fn=3D=3Dnull||bool?this.each(function(){var =
state=3Dbool?fn:jQuery(this).is(":hidden");jQuery(this)[state?"show":"hid=
e"]()}):this.animate(genFx("toggle",3),fn,fn2)},fadeTo:function(speed,to,=
callback){return =
this.animate({opacity:to},speed,callback)},animate:function(prop,speed,ea=
sing,callback){var optall=3DjQuery.speed(speed,easing,callback);return =
this[optall.queue=3D=3D=3Dfalse?"each":"queue"](function(){var =
opt=3DjQuery.extend({},optall),p,hidden=3Dthis.nodeType=3D=3D1&&jQuery(th=
is).is(":hidden"),self=3Dthis;for(p in =
prop){if(prop[p]=3D=3D"hide"&&hidden||prop[p]=3D=3D"show"&&!hidden){retur=
n =
opt.complete.call(this)}if((p=3D=3D"height"||p=3D=3D"width")&&this.style)=
{opt.display=3DjQuery.css(this,"display");opt.overflow=3Dthis.style.overf=
low}}if(opt.overflow!=3Dnull){this.style.overflow=3D"hidden"}opt.curAnim=3D=
jQuery.extend({},prop);jQuery.each(prop,function(name,val){var e=3Dnew =
jQuery.fx(self,opt,name);if(/toggle|show|hide/.test(val)){e[val=3D=3D"tog=
gle"?hidden?"show":"hide":val](prop)}else{var =
parts=3Dval.toString().match(/^([+-]=3D)?([\d+-.]+)(.*)$/),start=3De.cur(=
true)||0;if(parts){var =
end=3DparseFloat(parts[2]),unit=3Dparts[3]||"px";if(unit!=3D"px"){self.st=
yle[name]=3D(end||1)+unit;start=3D((end||1)/e.cur(true))*start;self.style=
[name]=3Dstart+unit}if(parts[1]){end=3D((parts[1]=3D=3D"-=3D"?-1:1)*end)+=
start}e.custom(start,end,unit)}else{e.custom(start,val,"")}}});return =
true})},stop:function(clearQueue,gotoEnd){var =
timers=3DjQuery.timers;if(clearQueue){this.queue([])}this.each(function()=
{for(var =
i=3Dtimers.length-1;i>=3D0;i--){if(timers[i].elem=3D=3Dthis){if(gotoEnd){=
timers[i](true)}timers.splice(i,1)}}});if(!gotoEnd){this.dequeue()}return=
 =
this}});jQuery.each({slideDown:genFx("show",1),slideUp:genFx("hide",1),sl=
ideToggle:genFx("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hid=
e"}},function(name,props){jQuery.fn[name]=3Dfunction(speed,callback){retu=
rn =
this.animate(props,speed,callback)}});jQuery.extend({speed:function(speed=
,easing,fn){var opt=3Dtypeof =
speed=3D=3D=3D"object"?speed:{complete:fn||!fn&&easing||jQuery.isFunction=
(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!jQuery.isFuncti=
on(easing)&&easing};opt.duration=3DjQuery.fx.off?0:typeof =
opt.duration=3D=3D=3D"number"?opt.duration:jQuery.fx.speeds[opt.duration]=
||jQuery.fx.speeds._default;opt.old=3Dopt.complete;opt.complete=3Dfunctio=
n(){if(opt.queue!=3D=3Dfalse){jQuery(this).dequeue()}if(jQuery.isFunction=
(opt.old)){opt.old.call(this)}};return =
opt},easing:{linear:function(p,n,firstNum,diff){return =
firstNum+diff*p},swing:function(p,n,firstNum,diff){return((-Math.cos(p*Ma=
th.PI)/2)+0.5)*diff+firstNum}},timers:[],fx:function(elem,options,prop){t=
his.options=3Doptions;this.elem=3Delem;this.prop=3Dprop;if(!options.orig)=
{options.orig=3D{}}}});jQuery.fx.prototype=3D{update:function(){if(this.o=
ptions.step){this.options.step.call(this.elem,this.now,this)}(jQuery.fx.s=
tep[this.prop]||jQuery.fx.step._default)(this);if((this.prop=3D=3D"height=
"||this.prop=3D=3D"width")&&this.elem.style){this.elem.style.display=3D"b=
lock"}},cur:function(force){if(this.elem[this.prop]!=3Dnull&&(!this.elem.=
style||this.elem.style[this.prop]=3D=3Dnull)){return =
this.elem[this.prop]}var =
r=3DparseFloat(jQuery.css(this.elem,this.prop,force));return =
r&&r>-10000?r:parseFloat(jQuery.curCSS(this.elem,this.prop))||0},custom:f=
unction(from,to,unit){this.startTime=3Dnow();this.start=3Dfrom;this.end=3D=
to;this.unit=3Dunit||this.unit||"px";this.now=3Dthis.start;this.pos=3Dthi=
s.state=3D0;var self=3Dthis;function t(gotoEnd){return =
self.step(gotoEnd)}t.elem=3Dthis.elem;if(t()&&jQuery.timers.push(t)&&!tim=
erId){timerId=3DsetInterval(function(){var =
timers=3DjQuery.timers;for(var =
i=3D0;i<timers.length;i++){if(!timers[i]()){timers.splice(i--,1)}}if(!tim=
ers.length){clearInterval(timerId);timerId=3Dundefined}},13)}},show:funct=
ion(){this.options.orig[this.prop]=3DjQuery.attr(this.elem.style,this.pro=
p);this.options.show=3Dtrue;this.custom(this.prop=3D=3D"width"||this.prop=
=3D=3D"height"?1:0,this.cur());jQuery(this.elem).show()},hide:function(){=
this.options.orig[this.prop]=3DjQuery.attr(this.elem.style,this.prop);thi=
s.options.hide=3Dtrue;this.custom(this.cur(),0)},step:function(gotoEnd){v=
ar =
t=3Dnow();if(gotoEnd||t>=3Dthis.options.duration+this.startTime){this.now=
=3Dthis.end;this.pos=3Dthis.state=3D1;this.update();this.options.curAnim[=
this.prop]=3Dtrue;var done=3Dtrue;for(var i in =
this.options.curAnim){if(this.options.curAnim[i]!=3D=3Dtrue){done=3Dfalse=
}}if(done){if(this.options.display!=3Dnull){this.elem.style.overflow=3Dth=
is.options.overflow;this.elem.style.display=3Dthis.options.display;if(jQu=
ery.css(this.elem,"display")=3D=3D"none"){this.elem.style.display=3D"bloc=
k"}}if(this.options.hide){jQuery(this.elem).hide()}if(this.options.hide||=
this.options.show){for(var p in =
this.options.curAnim){jQuery.attr(this.elem.style,p,this.options.orig[p])=
}}this.options.complete.call(this.elem)}return false}else{var =
n=3Dt-this.startTime;this.state=3Dn/this.options.duration;this.pos=3DjQue=
ry.easing[this.options.easing||(jQuery.easing.swing?"swing":"linear")](th=
is.state,n,0,1,this.options.duration);this.now=3Dthis.start+((this.end-th=
is.start)*this.pos);this.update()}return =
true}};jQuery.extend(jQuery.fx,{speeds:{slow:600,fast:200,_default:400},s=
tep:{opacity:function(fx){jQuery.attr(fx.elem.style,"opacity",fx.now)},_d=
efault:function(fx){if(fx.elem.style&&fx.elem.style[fx.prop]!=3Dnull){fx.=
elem.style[fx.prop]=3Dfx.now+fx.unit}else{fx.elem[fx.prop]=3Dfx.now}}}});=
if(document.documentElement.getBoundingClientRect){jQuery.fn.offset=3Dfun=
ction(){if(!this[0]){return{top:0,left:0}}if(this[0]=3D=3D=3Dthis[0].owne=
rDocument.body){return jQuery.offset.bodyOffset(this[0])}var =
box=3Dthis[0].getBoundingClientRect(),doc=3Dthis[0].ownerDocument,body=3D=
doc.body,docElem=3Ddoc.documentElement,clientTop=3DdocElem.clientTop||bod=
y.clientTop||0,clientLeft=3DdocElem.clientLeft||body.clientLeft||0,top=3D=
box.top+(self.pageYOffset||jQuery.boxModel&&docElem.scrollTop||body.scrol=
lTop)-clientTop,left=3Dbox.left+(self.pageXOffset||jQuery.boxModel&&docEl=
em.scrollLeft||body.scrollLeft)-clientLeft;return{top:top,left:left}}}els=
e{jQuery.fn.offset=3Dfunction(){if(!this[0]){return{top:0,left:0}}if(this=
[0]=3D=3D=3Dthis[0].ownerDocument.body){return =
jQuery.offset.bodyOffset(this[0])}jQuery.offset.initialized||jQuery.offse=
t.initialize();var =
elem=3Dthis[0],offsetParent=3Delem.offsetParent,prevOffsetParent=3Delem,d=
oc=3Delem.ownerDocument,computedStyle,docElem=3Ddoc.documentElement,body=3D=
doc.body,defaultView=3Ddoc.defaultView,prevComputedStyle=3DdefaultView.ge=
tComputedStyle(elem,null),top=3Delem.offsetTop,left=3Delem.offsetLeft;whi=
le((elem=3Delem.parentNode)&&elem!=3D=3Dbody&&elem!=3D=3DdocElem){compute=
dStyle=3DdefaultView.getComputedStyle(elem,null);top-=3Delem.scrollTop,le=
ft-=3Delem.scrollLeft;if(elem=3D=3D=3DoffsetParent){top+=3Delem.offsetTop=
,left+=3Delem.offsetLeft;if(jQuery.offset.doesNotAddBorder&&!(jQuery.offs=
et.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(elem.tagName))){t=
op+=3DparseInt(computedStyle.borderTopWidth,10)||0,left+=3DparseInt(compu=
tedStyle.borderLeftWidth,10)||0}prevOffsetParent=3DoffsetParent,offsetPar=
ent=3Delem.offsetParent}if(jQuery.offset.subtractsBorderForOverflowNotVis=
ible&&computedStyle.overflow!=3D=3D"visible"){top+=3DparseInt(computedSty=
le.borderTopWidth,10)||0,left+=3DparseInt(computedStyle.borderLeftWidth,1=
0)||0}prevComputedStyle=3DcomputedStyle}if(prevComputedStyle.position=3D=3D=
=3D"relative"||prevComputedStyle.position=3D=3D=3D"static"){top+=3Dbody.o=
ffsetTop,left+=3Dbody.offsetLeft}if(prevComputedStyle.position=3D=3D=3D"f=
ixed"){top+=3DMath.max(docElem.scrollTop,body.scrollTop),left+=3DMath.max=
(docElem.scrollLeft,body.scrollLeft)}return{top:top,left:left}}}jQuery.of=
fset=3D{initialize:function(){if(this.initialized){return }var =
body=3Ddocument.body,container=3Ddocument.createElement("div"),innerDiv,c=
heckDiv,table,td,rules,prop,bodyMarginTop=3Dbody.style.marginTop,html=3D'=
<div style=3D"position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;"><div></div></div><table =
style=3D"position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;" cellpadding=3D"0" =
cellspacing=3D"0"><tr><td></td></tr></table>';rules=3D{position:"absolute=
",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hid=
den"};for(prop in =
rules){container.style[prop]=3Drules[prop]}container.innerHTML=3Dhtml;bod=
y.insertBefore(container,body.firstChild);innerDiv=3Dcontainer.firstChild=
,checkDiv=3DinnerDiv.firstChild,td=3DinnerDiv.nextSibling.firstChild.firs=
tChild;this.doesNotAddBorder=3D(checkDiv.offsetTop!=3D=3D5);this.doesAddB=
orderForTableAndCells=3D(td.offsetTop=3D=3D=3D5);innerDiv.style.overflow=3D=
"hidden",innerDiv.style.position=3D"relative";this.subtractsBorderForOver=
flowNotVisible=3D(checkDiv.offsetTop=3D=3D=3D-5);body.style.marginTop=3D"=
1px";this.doesNotIncludeMarginInBodyOffset=3D(body.offsetTop=3D=3D=3D0);b=
ody.style.marginTop=3DbodyMarginTop;body.removeChild(container);this.init=
ialized=3Dtrue},bodyOffset:function(body){jQuery.offset.initialized||jQue=
ry.offset.initialize();var =
top=3Dbody.offsetTop,left=3Dbody.offsetLeft;if(jQuery.offset.doesNotInclu=
deMarginInBodyOffset){top+=3DparseInt(jQuery.curCSS(body,"marginTop",true=
),10)||0,left+=3DparseInt(jQuery.curCSS(body,"marginLeft",true),10)||0}re=
turn{top:top,left:left}}};jQuery.fn.extend({position:function(){var =
left=3D0,top=3D0,results;if(this[0]){var =
offsetParent=3Dthis.offsetParent(),offset=3Dthis.offset(),parentOffset=3D=
/^body|html$/i.test(offsetParent[0].tagName)?{top:0,left:0}:offsetParent.=
offset();offset.top-=3Dnum(this,"marginTop");offset.left-=3Dnum(this,"mar=
ginLeft");parentOffset.top+=3Dnum(offsetParent,"borderTopWidth");parentOf=
fset.left+=3Dnum(offsetParent,"borderLeftWidth");results=3D{top:offset.to=
p-parentOffset.top,left:offset.left-parentOffset.left}}return =
results},offsetParent:function(){var =
offsetParent=3Dthis[0].offsetParent||document.body;while(offsetParent&&(!=
/^body|html$/i.test(offsetParent.tagName)&&jQuery.css(offsetParent,"posit=
ion")=3D=3D"static")){offsetParent=3DoffsetParent.offsetParent}return =
jQuery(offsetParent)}});jQuery.each(["Left","Top"],function(i,name){var =
method=3D"scroll"+name;jQuery.fn[method]=3Dfunction(val){if(!this[0]){ret=
urn null}return =
val!=3D=3Dundefined?this.each(function(){this=3D=3Dwindow||this=3D=3Ddocu=
ment?window.scrollTo(!i?val:jQuery(window).scrollLeft(),i?val:jQuery(wind=
ow).scrollTop()):this[method]=3Dval}):this[0]=3D=3Dwindow||this[0]=3D=3Dd=
ocument?self[i?"pageYOffset":"pageXOffset"]||jQuery.boxModel&&document.do=
cumentElement[method]||document.body[method]:this[0][method]}});jQuery.ea=
ch(["Height","Width"],function(i,name){var =
tl=3Di?"Left":"Top",br=3Di?"Right":"Bottom",lower=3Dname.toLowerCase();jQ=
uery.fn["inner"+name]=3Dfunction(){return =
this[0]?jQuery.css(this[0],lower,false,"padding"):null};jQuery.fn["outer"=
+name]=3Dfunction(margin){return =
this[0]?jQuery.css(this[0],lower,false,margin?"margin":"border"):null};va=
r type=3Dname.toLowerCase();jQuery.fn[type]=3Dfunction(size){return =
this[0]=3D=3Dwindow?document.compatMode=3D=3D"CSS1Compat"&&document.docum=
entElement["client"+name]||document.body["client"+name]:this[0]=3D=3Ddocu=
ment?Math.max(document.documentElement["client"+name],document.body["scro=
ll"+name],document.documentElement["scroll"+name],document.body["offset"+=
name],document.documentElement["offset"+name]):size=3D=3D=3Dundefined?(th=
is.length?jQuery.css(this[0],type):null):this.css(type,typeof =
size=3D=3D=3D"string"?size:size+"px")}})})();
------=_NextPart_000_0000_01CFB219.14D71440--
